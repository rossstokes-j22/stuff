{
  "openapi": "3.0.1",
  "info": {
    "title": "Knox Manage Open API",
    "description": "# INTRODUCTION\nWelcome to the reference for the Knox Manage Open API.\nTo learn about the common use cases of the Knox Manage Open API, check out the [API Guides](https://docs.samsungknox.com/admin/knox-manage/overview-open-api.htm).\n\nThe Knox Manage Open API provides a broad set of operations and resources that:\n  - User, device, organization, group management\n  - Apply policies to users, groups, organizations, and devices\n  - User authentication, etc.\n  \nRefer to the [Open API List](https://docs.samsungknox.com/admin/knox-manage/list-of-open-api.htm) for all supported API types and descriptions.\n\n## Access to the API\n\nIf you have a Knox Manager tenant, you can access the Manage API via one of the following endpoints:\n\n| Region | Base URL for REST Endpoints                                      |\n| ------ | ---------------------------------------------------------------- |\n| Asian Pacfic (2) | https://ap01.manage.samsungknox.com/emm/oapi|\n| | https://ap02.manage.samsungknox.com/emm/oapi|\n| Eroupe (7) | https://eu01.manage.samsungknox.com/emm/oapi |\n| | https://eu02.manage.samsungknox.com/emm/oapi|\n| | https://eu03.manage.samsungknox.com/emm/oapi|\n| | https://eu04.manage.samsungknox.com/emm/oapi|\n| | https://eu05.manage.samsungknox.com/emm/oapi|\n| | https://eu06.manage.samsungknox.com/emm/oapi|\n| | https://eu07.manage.samsungknox.com/emm/oapi|\n| North America (2) | https://us01.manage.samsungknox.com/emm/oapi |\n| | https://us02.manage.samsungknox.com/emm/oapi|\n\n## New Features\n\nWhen the Knox Manager product is released, new Open APIs are also released. Check out Knox Manage's [Release Note](https://docs.samsungknox.com/admin/knox-manage/release-notes.htm).\n\n# Authentication\n\n## OAuth 2.0\n\nKnox Manage recommends you to create a dedicated API user with API write access on a tenant when authenticating via OAuth, and then create an OAuth client for this user. See Create an API User for how to do this. By creating a dedicated API user, you can control permissions of the API user without affecting other non-API users.\n\nIf a user is deactivated, all of the user's OAuth clients will be automatically deactivated.\n\nAuthenticating via OAuth requires the following steps:\n\n1. Create a Client\n2. Generate a Token\n3. Bearer Authentication (Make Authenticated Requests)\n\n\n<!-- ReDoc-Inject: <security-definitions> -->\n\n## Create a Client\n\nYou must first create an OAuth client in Admin Portal UI of the Knox Manager. To do this, you must be an administrator of your Knox Manage tenant. This is a one-time operation. You will be provided with a Client ID and a Client Secret. Please refer to the [Manage API clients](https://docs.samsungknox.com/admin/knox-manage/manage-api-clients.htm), as it will be required for the next step.\n\n## Generate a Token\n\nAfter creating a client, you must make a call to obtain a bearer token using the [Generate an OAuth token](https://docs.samsungknox.com/admin/knox-manage/manage-api-clients.htm) operation. This operation requires the following parameters:\n\n- `client_id` - the Client ID displayed when you created the OAuth client in the previous step. \n- `client_secret` - the Client Secret displayed when you created the OAuth client in the previous step\n- `grant_type` - must be set to `client_credentials`\n\n\n### Token Request URL\n~~~~\nhttps://{Your Region}.manage.samsungknox.com/emm/oauth/token\n~~~~\n\n\n### Request Sample\n~~~~\ncurl -X POST \\\n  https://ap01.manage.samsungknox.com/emm/oauth/token \\\n  -d \"grant_type=client_credentials&client_id=APItest@km.com&client_secret=APItestpassword\" \\\n  -H \"Content-Type: application/x-www-form-urlencoded\"\n~~~~\n\n\n### Response Sample\n~~~~\n{\n    \"access_token\": \"98bfa733-aa70-4491-931f-f35442ff2e7e\",\n    \"token_type\": \"bearer\",\n    \"expires_in\": 997331046,\n    \"scope\": \"read\"\n}\n~~~~\n\n\n>*Note: The Client ID and Client Secret mentioned above were displayed when you created the OAuth Client in the prior step. The Generate an OAuth token response specifies how long the bearer token is valid for. You should reuse the bearer token until it is expired. When the token is expired, call Generate an OAuth token again to generate a new one.\n\n## Bearer Authentication\nTo authenticate subsequent API requests, you must provide a valid bearer token in an HTTP header: \n- `Authorization: Bearer{bearer_token}`\n\n\n",
    "version": "22.05"
  },
  "servers": [
    {
      "url": "https://ap01.manage.samsungknox.com/emm/oapi",
      "description": "AP01"
    },
    {
      "url": "https://ap02.manage.samsungknox.com/emm/oapi",
      "description": "AP02"
    },
    {
      "url": "https://eu01.manage.samsungknox.com/emm/oapi",
      "description": "EU01"
    },
    {
      "url": "https://eu02.manage.samsungknox.com/emm/oapi",
      "description": "EU02"
    },
    {
      "url": "https://eu03.manage.samsungknox.com/emm/oapi",
      "description": "EU03"
    },
    {
      "url": "https://eu04.manage.samsungknox.com/emm/oapi",
      "description": "EU04"
    },
    {
      "url": "https://eu05.manage.samsungknox.com/emm/oapi",
      "description": "EU05"
    },
    {
      "url": "https://eu06.manage.samsungknox.com/emm/oapi",
      "description": "EU06"
    },
    {
      "url": "https://eu07.manage.samsungknox.com/emm/oapi",
      "description": "EU07"
    },
    {
      "url": "https://us01.manage.samsungknox.com/emm/oapi",
      "description": "US01"
    },
    {
      "url": "https://us02.manage.samsungknox.com/emm/oapi",
      "description": "US02"
    }
  ],
  "tags": [
    {
      "name": "User Authentication",
      "description": "Open API related to authentication of Knox Manager users. If the user type in Knox Manager is specified as LDAP user, it sends an authentication request to the connected LDAP."
    }
  ],
  "paths": {
    "/audit/read": {
      "post": {
        "tags": [
          "Audit"
        ],
        "summary": "Read Audit Log",
        "description": " *This API is for reading audit logs.",
        "operationId": "read",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AuditLogSearchParam"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadAuditLogRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/audit/read \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"logDate=2020-03-04&locale=en\" \n "
          }
        ]
      }
    },
    "/auth/authenticate": {
      "post": {
        "tags": [
          "User Authentication"
        ],
        "summary": "Authentication",
        "description": "Authentication is performed by receiving the Knox Manager user ID and password. It is only for Tenant users for whom Client ID is issued.",
        "operationId": "authenticate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UserEmmSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/auth/authenticate \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"userId=kmuser&userPassword=kmuserpassword\" \n "
          }
        ]
      }
    },
    "/device/deleteDeviceFromDeviceGroup": {
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "Delete Device from Device Group",
        "description": "This API is to delete a Device from the Device Group.",
        "operationId": "deleteDeviceFromDeviceGroup",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeviceToGroupReqSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceToGroupRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/device/deleteDeviceFromDeviceGroup \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"deviceId=dc95bc9e4dee47a4a8efd5b6064c9071&groupId=testgroupid\" \n "
          }
        ]
      }
    },
    "/device/deleteDeviceFromProfileGroup": {
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "Delete Device from Profile Group",
        "description": "This is an API that removes a device from KM's Profile Group, which does not exist anymore. It will be deleted soon. <br> Use the Delete Device from Device Group.",
        "operationId": "deleteDeviceFromProfileGroup",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeviceIdParamSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceToGroupRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "deprecated": true,
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/device/deleteDeviceFromProfileGroup \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"deviceId=dc95bc9e4dee47a4a8efd5b6064c9071\" \n "
          }
        ]
      }
    },
    "/device/insertDeviceToProfileGroup": {
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "Add Device To Group",
        "description": "This API is to insert a Device to the Selected Device Group.",
        "operationId": "insertDeviceToProfileGroup",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeviceToGroupReqSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceToGroupRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/device/insertDeviceToProfileGroup \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"deviceId=dc95bc9e4dee47a4a8efd5b6064c9071&groupId=testgroupid\" \n "
          }
        ]
      }
    },
    "/device/insertMalwareApp": {
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "Insert Malware App",
        "description": " This API is to insert Malware Application.",
        "operationId": "insertMalwareApp",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/InsertMalwareReqScheme"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceRespSchemaBase"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/device/insertMalwareApp \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"deviceId=dc95bc9e4dee47a4a8efd5b6064c9071&packageName=com.example.app&appName=sampleApp&appVersionName=10\" \n "
          }
        ]
      }
    },
    "/device/selectDeviceAppList": {
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "Get Device Application List",
        "description": "This API is to query the Device Application List.",
        "operationId": "selectDeviceAppList",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeviceAppSearhParamSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceAppsWithTotal"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/device/selectDeviceAppList \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"deviceId=dc95bc9e4dee47a4a8efd5b6064c9071\" \n "
          }
        ]
      }
    },
    "/device/selectDeviceInfo": {
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "Get Device Detail",
        "description": "This API is to query the Device Detailed Information.",
        "operationId": "selectDeviceInfo",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeviceIdParamSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectDeviceInfoRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/device/selectDeviceInfo \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"deviceId=dc95bc9e4dee47a4a8efd5b6064c9071\" \n "
          }
        ]
      }
    },
    "/device/selectDeviceInfoByGoogleDeviceId": {
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "Get Device Detail By Google Device Id",
        "description": "This API is to query the Enrolled Device Detailed Information by Google Device Id.",
        "operationId": "selectDeviceInfoByGoogleDeviceId",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/GoogleDeviceIdParamSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectDeviceInfoRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/device/selectDeviceInfoByGoogleDeviceId \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"googleDeviceId=3z01tca1583lp112\" \n "
          }
        ]
      }
    },
    "/device/selectDeviceInfoByImei": {
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "Get Device Detail By IMEI",
        "description": "This API is to query the Enrolled Device Detailed Information by IMEI.",
        "operationId": "selectDeviceInfoByImei",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ImeiParamSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectDeviceInfoRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/device/selectDeviceInfoByImei \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"imei=testdeviceimei\" \n "
          }
        ]
      }
    },
    "/device/selectDeviceInfoByMobileId": {
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "Get Device Detail By Device Name",
        "description": "This API is to query the Device Detailed Information by Device Name.",
        "operationId": "selectDeviceInfoByMobileId",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/MobileIdParamSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectDeviceInfoRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/device/selectDeviceInfoByMobileId \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"mobileId=testdevicename\" \n "
          }
        ]
      }
    },
    "/device/selectDeviceInfoBySerialNumber": {
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "Get Device Detail By Serial Number",
        "description": "This API is to query the Enrolled Device Detailed Information by Serial Number.",
        "operationId": "selectDeviceInfoBySerialNumber",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SerialNumParamSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectDeviceInfoRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/device/selectDeviceInfoBySerialNumber \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"serialNumber=testdeviceserialNumber\" \n "
          }
        ]
      }
    },
    "/device/selectDeviceList": {
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "Get Device List",
        "description": "This API is to query the Device Information List.",
        "operationId": "selectDeviceList",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeviceSearhParamSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectDeviceRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/device/selectDeviceList \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"deviceStatus=A\" \n "
          }
        ]
      }
    },
    "/device/selectDeviceListByEmpNos": {
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "Get Device Detail By Employee Number",
        "description": "This API is to query the Device Information List by Employee Number.",
        "operationId": "selectDeviceListByEmpNos",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/EmpInfoReqSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectDeviceRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/device/selectDeviceListByEmpNos \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"empNos=empno1&empNos=empno2&siteCodes=code1&siteCodes=code2\" \n "
          }
        ]
      }
    },
    "/device/selectDeviceLocation": {
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "Get Device Location",
        "description": "This API is to query the GPS Information of the Device. One of 'deviceId' and 'mobileId' is a required value. (not null and not empty)",
        "operationId": "selectDeviceLocation",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeviceLocationReqSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectDeviceLocRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/device/selectDeviceLocation \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"deviceId=dc95bc9e4dee47a4a8efd5b6064c9071\" \n "
          }
        ]
      }
    },
    "/device/selectDeviceLocationHistory": {
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "Get Device Location History",
        "description": "This API is to query the Device Location History List. One of 'deviceId' and 'mobileId' is a required value.",
        "operationId": "selectDeviceLocationHistory",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeviceLocHistorySearhParamSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceLocHistoryWithTotal"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/device/selectDeviceLocationHistory \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"deviceId=dc95bc9e4dee47a4a8efd5b6064c9071&period=30\" \n "
          }
        ]
      }
    },
    "/device/selectDeviceTagsByDeviceId": {
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "Get tags by device ID",
        "description": "Get tags by device ID",
        "operationId": "selectDeviceTagsByDeviceId",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SelectDeviceTagsReqSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectDeviceTagsRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/device/selectDeviceTagsByDeviceId \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"deviceId=0d67cbc75d93448d9c236c86b4d313bb\" \n "
          }
        ]
      }
    },
    "/device/selectDevicesByUser": {
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "Get Devices By User",
        "description": "This API is to query the Device Information of the User. <br>Up to 1000 device lists are returned. If you need paging, use the Get Device List api.",
        "operationId": "selectDevicesByUser",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UserIdParamSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectDevicesByUserRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/device/selectDevicesByUser \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"userId=kmuser1\" \n "
          }
        ]
      }
    },
    "/device/updateDeviceTags": {
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "Update device tags",
        "description": "Update device tags. Old tags mapped to deviceId will be deleted and new tags will be mapped to deviceId. If this api is called without tags parameter, the old tags maaped to deviceId will be deleted.",
        "operationId": "updateDeviceTags",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDeviceTagsReqSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectDeviceTagsRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/device/updateDeviceTags \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"deviceId=0d67cbc75d93448d9c236c86b4d313bb&tags=tag1&tags=tag2\" \n "
          }
        ]
      }
    },
    "/group/countGroup": {
      "get": {
        "tags": [
          "Group"
        ],
        "summary": "Get Group Count",
        "description": "Passes the number of groups with exactly the same name. In general, '0' or '1' will be transmitted. Used for duplicate check of new group name.",
        "operationId": "countGroup",
        "parameters": [
          {
            "name": "groupName",
            "in": "query",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string",
              "description": "Group name for duplicate name checking",
              "example": "groupname1"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountGroupRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X GET \\\n    https://ap01.manage.samsungknox.com/emm/oapi/group/countGroup?groupName=testname \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    "
          }
        ]
      }
    },
    "/group/deleteGroup": {
      "post": {
        "tags": [
          "Group"
        ],
        "summary": "Delete Groups",
        "description": "It is an API that is used to delete groups.",
        "operationId": "deleteGroup",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeleteGroupsSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteGroupsRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/group/deleteGroup \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"groupIdString=testGroupId1;testGroupId2;testGroupId3&applyProfile=1\" \n "
          }
        ]
      }
    },
    "/group/deleteGroupUnits": {
      "post": {
        "tags": [
          "Group"
        ],
        "summary": "Delete Units to Group",
        "description": "It is an API used to delete units (users or devices) in an existing group.",
        "operationId": "deleteGroupUnits",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGroupUnitSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupRespSchemaBase"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/group/deleteGroupUnits \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"groupId=dc95bc9e4dee47a4a8efd5b6064c9071;&userIds=testUser1;testUser2;testUser3&applyProfile=1\" \n "
          }
        ]
      }
    },
    "/group/insertGroup": {
      "post": {
        "tags": [
          "Group"
        ],
        "summary": "Add Group With Units",
        "description": "It is an API that is used to create a user group, a device group.",
        "operationId": "insertGroup",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/InsertGroupSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InsertGroupRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/group/insertGroup \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"groupName=Open API Test 2&groupType=USER&userIds=kkbae3333;kkbae1234134\" \n "
          }
        ]
      }
    },
    "/group/insertGroupUnits": {
      "post": {
        "tags": [
          "Group"
        ],
        "summary": "Add Units to Group",
        "description": "This is the API used to add new units (users or devices) to an existing group. ",
        "operationId": "insertGroupUnits",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGroupUnitSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupRespSchemaBase"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/group/insertGroupUnits \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"groupId=dc95bc9e4dee47a4a8efd5b6064c9071;&userIds=testUser1;testUser2;testUser3&applyProfile=1\" \n "
          }
        ]
      }
    },
    "/group/selectGroupDevices": {
      "post": {
        "tags": [
          "Group"
        ],
        "summary": "Get Group Devices",
        "description": "Query the Group Device list. This API provides device information for a group regardless of the group type.",
        "operationId": "selectGroupDevices",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SelectGroupDeviceSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectDeviceRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/group/selectGroupDevices \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"groupId=testDeviceGroup&limit=20\" \n "
          }
        ]
      }
    },
    "/group/selectGroupUnits": {
      "post": {
        "tags": [
          "Group"
        ],
        "summary": "Get Group Units",
        "description": "Query the Group unit list.",
        "operationId": "selectGroupUnits",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SelectGroupUnitSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectGroupUserUnitRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/group/selectGroupUnits \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"groupId=testGroup&limit=20\" \n "
          }
        ]
      }
    },
    "/group/selectGroupUsers": {
      "post": {
        "tags": [
          "Group"
        ],
        "summary": "Get Group Users",
        "description": "Query the Group User list. This API provides user information for a group regardless of the group type.",
        "operationId": "selectGroupUsers",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SelectGroupUserSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectGroupUserRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/group/selectGroupUsers \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"groupId=testUserGroup&limit=20\" \n "
          }
        ]
      }
    },
    "/group/selectGroups": {
      "get": {
        "tags": [
          "Group"
        ],
        "summary": "Get Groups",
        "description": "Search the list of groups that have been created.",
        "operationId": "selectGroups",
        "parameters": [
          {
            "name": "groupId",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "type": "string",
              "description": "Used when searching by Group ID(UUID).<br/>This field is created automatically when create a group.",
              "example": "dc95bc9e4dee47a4a8efd5b6064c9071"
            }
          },
          {
            "name": "searchName",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "type": "string",
              "description": "Used when searching by name.",
              "example": "name1"
            }
          },
          {
            "name": "groupType",
            "in": "query",
            "schema": {
              "maxLength": 10,
              "type": "string",
              "description": "Group type. <br/>Group types can have only three values:<br/><br/>1) User Group: 'USER'<br/>2) Device Group: 'DEVICE'<br/>3) AD/LDAP Group: 'SYNC'<br/><br/>In addition, once determined(saved) group type can not be modified.",
              "example": "USER"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Records per page (0 < pageSize <= 1000)",
              "example": "20",
              "default": "1000"
            }
          },
          {
            "name": "start",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Page indexing begins from 0 (pageNum >= 0)",
              "example": "0",
              "default": "0"
            }
          },
          {
            "name": "needDeviceUserCount",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Used to request the number of devices, users in the group, as well as the number of profiles, contents, and applications assigned to the group. When requesting this value, 'yes' should be passed as a parameter.",
              "example": "yes",
              "default": "no"
            }
          },
          {
            "name": "needActiveDeviceCount",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Used to request the number of active devices in a group. When requesting this value, \"yes\" should be passed as a parameter. In addition, the 'needDeviceUserCount' value must also be 'yes'.",
              "example": "yes",
              "default": "no"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectGroupRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X GET \\\n    https://ap01.manage.samsungknox.com/emm/oapi/group/selectGroups?searchName=test&limit=20 \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    "
          }
        ]
      }
    },
    "/license/isLicenseValid": {
      "get": {
        "tags": [
          "License"
        ],
        "summary": "Check License Validation",
        "description": "This API is to query the license valid or not.",
        "operationId": "isLicenseValid",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X GET \\\n    https://ap01.manage.samsungknox.com/emm/oapi/license/isLicenseValid \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    "
          }
        ]
      }
    },
    "/limitedEnrollment/create": {
      "post": {
        "tags": [
          "Limited Enrollment"
        ],
        "summary": "Create Targets",
        "description": "Create Limited Enrollment Targets",
        "operationId": "create",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateLimitedEnrollmentSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateLimitedEnrollmentRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/limitedEnrollment/create \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"restrictType=IMEI&restrictIds=imei01&restrictIds=imei02\" \n "
          }
        ]
      }
    },
    "/limitedEnrollment/delete": {
      "post": {
        "tags": [
          "Limited Enrollment"
        ],
        "summary": "Delete Targets",
        "description": "Delete Limited Enrollment Targets",
        "operationId": "delete",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateLimitedEnrollmentSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateLimitedEnrollmentRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/limitedEnrollment/delete \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"restrictType=IMEI&restrictIds=imei01&restrictIds=imei02\" \n "
          }
        ]
      }
    },
    "/limitedEnrollment/selectList": {
      "get": {
        "tags": [
          "Limited Enrollment"
        ],
        "summary": "Get Limited Enrollment List",
        "description": "Search the list of limited targets",
        "operationId": "selectList",
        "parameters": [
          {
            "name": "restrictId",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "type": "string",
              "description": "Restrict ID (SQL equal condition)",
              "example": "device01"
            }
          },
          {
            "name": "restrictType",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "type": "string",
              "description": "Restrict Type (SQL equal condition). IMEI/SERIAL/OS/MODEl",
              "example": "IMEI"
            }
          },
          {
            "name": "restrictIds",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "type": "string",
              "description": "Restrict ID (SQL in condition)",
              "example": "['device01','device02']"
            }
          },
          {
            "name": "restrictTypes",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "type": "string",
              "description": "Restrict Type (SQL in condition)",
              "example": "['IMEI','SERIAL']"
            }
          },
          {
            "name": "userName",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "type": "string",
              "description": "User Name (SQL like condition)",
              "example": "user01"
            }
          },
          {
            "name": "restrictIdDeviceUserLike",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "type": "string",
              "description": "Restrict ID, Mobile ID or User Name (SQL like condition)",
              "example": "user01"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectLimitedEnrollmentRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X GET \\\n    https://ap01.manage.samsungknox.com/emm/oapi/limitedEnrollment/selectList?restrictIdDeviceUserLike=user01 \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    "
          }
        ]
      }
    },
    "/mdm/commandQueueServiceWrapper/getCommandQueueNoSendCnt": {
      "post": {
        "tags": [
          "Device Command"
        ],
        "summary": "Get Not Transffered Command Count",
        "description": "This API gets count of commands which were not transferred. An API Caller should know an information of the device. Such as mobileId, deviceId, platform code.",
        "operationId": "getCommandQueueNoSendCnt",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/GetQueuedCmdCntSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetQueuedCmdCntRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/mdm/commandQueueServiceWrapper/getCommandQueueNoSendCnt \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"mobileId=testdeviceName&deviceId=dc95bc9e4dee47a4a8efd5b6064c9071&platform=A \" \n "
          }
        ]
      }
    },
    "/mdm/commandQueueServiceWrapper/getCommandQueuedDevicesForAndroidAgent": {
      "post": {
        "tags": [
          "Device Command"
        ],
        "summary": "Get List of Phone Number In Command Queue",
        "description": "This API gets a list of phone number which has unresolved commands in command queue. A SMS message for Android EMM Agent should contain a specific phrase that is EMM(<i>tenantId</i>). <br>  ex) This message is sent from EMM System. ... EMM(SDS) ... Thanks.",
        "operationId": "getCommandQueuedDevicesForAndroidAgent",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/GetPhoneListSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPhoneListRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/mdm/commandQueueServiceWrapper/getCommandQueuedDevicesForAndroidAgent \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"minutes=0\" \n "
          }
        ]
      }
    },
    "/mdm/commonOTCServiceWrapper/getDeviceControlResult": {
      "post": {
        "tags": [
          "Device Command"
        ],
        "summary": "Get Device Control Result",
        "description": "This API returns messages of Device Control Process. Only Android/iOS platforms are available.(Windows not ready!). Device Control process can vary depending on each command and KM version.",
        "operationId": "getDeviceControlResult",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ControlResultSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringArrayRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/mdm/commonOTCServiceWrapper/getDeviceControlResult \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"deviceId=dummydeviceid1&commandId=dummycommandId\" \n "
          }
        ]
      }
    },
    "/mdm/commonOTCServiceWrapper/sendDeviceControlForAgentFlushQueue": {
      "post": {
        "tags": [
          "Device Command"
        ],
        "summary": "Flush Command Queue",
        "description": "This API sends a Device Control to flush command queue in EMM Server.",
        "operationId": "sendDeviceControlForAgentFlushQueue",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeviceIdParamSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtcRespSchemaBase"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/mdm/commonOTCServiceWrapper/sendDeviceControlForAgentFlushQueue \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"deviceId=dummydeviceid1\" \n "
          }
        ]
      }
    },
    "/mdm/commonOTCServiceWrapper/sendDeviceControlForAgentFlushQueueToMultiDevices": {
      "post": {
        "tags": [
          "Device Command"
        ],
        "summary": "Flush Command Queue",
        "description": "This API sends a Device Control to several devices for flushing command queues. This doesn't return a commandId as a result of sending a Device Control to devices. Even if there is only one success among multiple requests, The result of API is success.",
        "operationId": "sendDeviceControlForAgentFlushQueueToMultiDevices",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeviceIdsSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlushQueueRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/mdm/commonOTCServiceWrapper/sendDeviceControlForAgentFlushQueueToMultiDevices \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"deviceIds=dummydeviceid1&deviceIds=dummydeviceid2\" \n "
          }
        ]
      }
    },
    "/mdm/commonOTCServiceWrapper/sendDeviceControlForDeleteAppData": {
      "post": {
        "tags": [
          "Device Command"
        ],
        "summary": "Delete Application Data",
        "description": "This API sends a Device Control to delete application internal data.",
        "operationId": "sendDeviceControlForDeleteAppData",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeleteAppSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunAppRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/mdm/commonOTCServiceWrapper/sendDeviceControlForDeleteAppData \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"deviceId=dummydeviceid1&appPackages=test.samsung.mdm&appPackages=test2.samsung.mdm\" \n "
          }
        ]
      }
    },
    "/mdm/commonOTCServiceWrapper/sendDeviceControlForDeviceInfo": {
      "post": {
        "tags": [
          "Device Command"
        ],
        "summary": "Collect Device H/W information",
        "description": "This API sends a Device Control to get a device H/W information.",
        "operationId": "sendDeviceControlForDeviceInfo",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeviceIdParamSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandIdRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/mdm/commonOTCServiceWrapper/sendDeviceControlForDeviceInfo \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"deviceId=dummydeviceid1\" \n "
          }
        ]
      }
    },
    "/mdm/commonOTCServiceWrapper/sendDeviceControlForFactoryReset": {
      "post": {
        "tags": [
          "Device Command"
        ],
        "summary": "Factory Reset",
        "description": "This API sends a Device Control to wipe a device.",
        "operationId": "sendDeviceControlForFactoryReset",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeviceIdParamSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtcRespSchemaBase"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/mdm/commonOTCServiceWrapper/sendDeviceControlForFactoryReset \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"deviceId=dummydeviceid1\" \n "
          }
        ]
      }
    },
    "/mdm/commonOTCServiceWrapper/sendDeviceControlForGPSInfo": {
      "post": {
        "tags": [
          "Device Command"
        ],
        "summary": "Collect Current Location",
        "description": "This API sends a Device Control to get Location of a device.",
        "operationId": "sendDeviceControlForGPSInfo",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeviceIdParamSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandIdRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/mdm/commonOTCServiceWrapper/sendDeviceControlForGPSInfo \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"deviceId=dummydeviceid1\" \n "
          }
        ]
      }
    },
    "/mdm/commonOTCServiceWrapper/sendDeviceControlForInstallApp": {
      "post": {
        "tags": [
          "Device Command"
        ],
        "summary": "Install Android Application",
        "description": "This API sends a Device Control for install a android application<br/>There are two ways to call API<br/> 1. with package name, 2. with url and start app",
        "operationId": "sendDeviceControlForInstallApp",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/InstallAppSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunAppRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/mdm/commonOTCServiceWrapper/sendDeviceControlForInstallApp \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"deviceId=dummydeviceid1&appPackage=test.samsung.appx&knoxId=testknoxid&url=https://test.samsung.app&componentClass=Activity&action=unknown&autoRun=Automatic\" \n "
          }
        ]
      }
    },
    "/mdm/commonOTCServiceWrapper/sendDeviceControlForKeepAlive": {
      "post": {
        "tags": [
          "Device Command"
        ],
        "summary": "Keep Alive",
        "description": "This API sends a Device Control to check KM Service availability.",
        "operationId": "sendDeviceControlForKeepAlive",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeviceIdParamSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandIdRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/mdm/commonOTCServiceWrapper/sendDeviceControlForKeepAlive \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"deviceId=dummydeviceid1\" \n "
          }
        ]
      }
    },
    "/mdm/commonOTCServiceWrapper/sendDeviceControlForLockDevice": {
      "post": {
        "tags": [
          "Device Command"
        ],
        "summary": "Lock Device",
        "description": "This API sends a Device Control to lock a device.",
        "operationId": "sendDeviceControlForLockDevice",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeviceIdParamSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandIdRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/mdm/commonOTCServiceWrapper/sendDeviceControlForLockDevice \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"deviceId=dummydeviceid1\" \n "
          }
        ]
      }
    },
    "/mdm/commonOTCServiceWrapper/sendDeviceControlForPayloadUUID": {
      "post": {
        "tags": [
          "Device Command"
        ],
        "summary": "Update Paylod UUID List for Single Device",
        "description": "This API sends a Device Control to an device for updating payload UUID List. Only iOS Platform supported.",
        "operationId": "sendDeviceControlForPayloadUUID",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeviceIdParamSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserInfoRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/mdm/commonOTCServiceWrapper/sendDeviceControlForPayloadUUID \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"deviceId=dummydeviceid1\" \n "
          }
        ]
      }
    },
    "/mdm/commonOTCServiceWrapper/sendDeviceControlForPayloadUUIDToMultiDevices": {
      "post": {
        "tags": [
          "Device Command"
        ],
        "summary": "Update Paylod UUID List for Multi-Device",
        "description": "This API sends a Device Control to several devices for updating payload UUID List. Only iOS Platform supported",
        "operationId": "sendDeviceControlForPayloadUUIDToMultiDevices",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeviceIdsSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePayloadUUIDRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/mdm/commonOTCServiceWrapper/sendDeviceControlForPayloadUUIDToMultiDevices \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"deviceIds=dummydeviceid1&deviceIds=dummydeviceid2\" \n "
          }
        ]
      }
    },
    "/mdm/commonOTCServiceWrapper/sendDeviceControlForPowerOff": {
      "post": {
        "tags": [
          "Device Command"
        ],
        "summary": "Power Off",
        "description": "This API sends a Device Control to deactivate a device.",
        "operationId": "sendDeviceControlForPowerOff",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeviceIdsSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandIdRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/mdm/commonOTCServiceWrapper/sendDeviceControlForPowerOff \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"deviceIds=dummydeviceid1&deviceIds=dummydeviceid2\" \n "
          }
        ]
      }
    },
    "/mdm/commonOTCServiceWrapper/sendDeviceControlForRemoveAllKnox": {
      "post": {
        "tags": [
          "Device Command"
        ],
        "summary": "Remove All KNOX Container",
        "description": "This API sends a Device Control to remove all KNOX Container of the device.",
        "operationId": "sendDeviceControlForRemoveAllKNOX",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeviceIdParamSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandIdRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/mdm/commonOTCServiceWrapper/sendDeviceControlForRemoveAllKnox \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"deviceId=dummydeviceid1\" \n "
          }
        ]
      }
    },
    "/mdm/commonOTCServiceWrapper/sendDeviceControlForResetPassword": {
      "post": {
        "tags": [
          "Device Command"
        ],
        "summary": "Reset Password",
        "description": "This API sends a Device Control to reset screen or container pass word on a device. It does not support CL type container.",
        "operationId": "sendDeviceControlForResetPassword",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonAreaResultRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/mdm/commonOTCServiceWrapper/sendDeviceControlForResetPassword \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"deviceId=dummydeviceid1\" \n "
          }
        ]
      }
    },
    "/mdm/commonOTCServiceWrapper/sendDeviceControlForRunApp": {
      "post": {
        "tags": [
          "Device Command"
        ],
        "summary": "Run Application",
        "description": "This API sends a Device Control to run application on a device.",
        "operationId": "sendDeviceControlForRunApp",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RunAppSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunAppRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/mdm/commonOTCServiceWrapper/sendDeviceControlForRunApp \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"deviceId=dummydeviceid1&appPackage=test.samsung.mdm\" \n "
          }
        ]
      }
    },
    "/mdm/commonOTCServiceWrapper/sendDeviceControlForUnEnrollment": {
      "post": {
        "tags": [
          "Device Command"
        ],
        "summary": "Unenroll Device",
        "description": "This API sends a Device Control to deactivate a device.",
        "operationId": "sendDeviceControlForUnEnrollment",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeviceIdParamSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandIdRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/mdm/commonOTCServiceWrapper/sendDeviceControlForUnEnrollment \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"deviceId=dummydeviceid1\" \n "
          }
        ]
      }
    },
    "/mdm/commonOTCServiceWrapper/sendDeviceControlForUnLockDevice": {
      "post": {
        "tags": [
          "Device Command"
        ],
        "summary": "Unlock Device",
        "description": "This API sends a Device Control to unlock a device.",
        "operationId": "sendDeviceControlForUnLockDevice",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeviceIdParamSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandIdRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/mdm/commonOTCServiceWrapper/sendDeviceControlForUnLockDevice \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"deviceId=dummydeviceid1\" \n "
          }
        ]
      }
    },
    "/mdm/commonOTCServiceWrapper/sendDeviceControlForUninstallApp": {
      "post": {
        "tags": [
          "Device Command"
        ],
        "summary": "Uninstall Android Application",
        "description": "This API sends a Device Control for uninstall a android application.",
        "operationId": "sendDeviceControlForUninstallApp",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UninstallAppSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserInfoRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/mdm/commonOTCServiceWrapper/sendDeviceControlForUninstallApp \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"deviceId=dummydeviceid1&appPackage=test.samsung.mdm\" \n "
          }
        ]
      }
    },
    "/mdm/commonOTCServiceWrapper/sendDeviceControlForUpdateProfile": {
      "post": {
        "tags": [
          "Device Command"
        ],
        "summary": "Update Profile",
        "description": "This API sends a Device Control to update agent/client profile.",
        "operationId": "sendDeviceControlForUpdateProfile",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeviceIdParamSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonAreaResultRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/mdm/commonOTCServiceWrapper/sendDeviceControlForUpdateProfile \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"deviceId=dummydeviceid1\" \n "
          }
        ]
      }
    },
    "/mdm/commonOTCServiceWrapper/sendDeviceControlForUserInfo": {
      "post": {
        "tags": [
          "Device Command"
        ],
        "summary": "Update User Information",
        "description": "This API sends a Device Control to an device for updating a user information.",
        "operationId": "sendDeviceControlForUserInfo",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeviceIdParamSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserInfoRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/mdm/commonOTCServiceWrapper/sendDeviceControlForUserInfo \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"deviceId=dummydeviceid1\" \n "
          }
        ]
      }
    },
    "/mdm/commonOTCServiceWrapper/sendDeviceControlForUserInfoToMultiDevices": {
      "post": {
        "tags": [
          "Device Command"
        ],
        "summary": "Update Multi-User Information",
        "description": "This API sends a Device Control to several devices for updating each users information.",
        "operationId": "sendDeviceControlForUserInfoToMultiDevices",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeviceIdsSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateMultiUserInfoRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/mdm/commonOTCServiceWrapper/sendDeviceControlForPayloadUUIDToMultiDevices \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"deviceIds=dummydeviceid1&deviceIds=dummydeviceid2\" \n "
          }
        ]
      }
    },
    "/mdm/profileServiceWrapper/getIOSPayloadUUIDList": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Get list of payload uuid from a iOS device",
        "description": "This API gets payload uuid list from a iOS device inventory",
        "operationId": "getIOSPayloadUUIDList",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Device ID.",
              "example": "dc95bc9e4dee47a4a8efd5b6064c9071"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetIOSPayloadUUIDListRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X GET \\\n    https://ap01.manage.samsungknox.com/emm/oapi/mdm/profileServiceWrapper/getIOSPayloadUUIDList?deviceId=dc95bc9e4dee47a4a8efd5b6064c9071 \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    "
          }
        ]
      }
    },
    "/message/deleteSMSQueue": {
      "post": {
        "tags": [
          "Message"
        ],
        "summary": "Delete SMS",
        "description": "This API is to delete the SMS Queue.",
        "operationId": "deleteSMSQueue",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeleteSMSQueueSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSMSQueueRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/message/deleteSMSQueue \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"smsId=ab95bc9e4dee47a4a8efd5b6064c9071\" \n "
          }
        ]
      }
    },
    "/message/selectSMSQueueList": {
      "post": {
        "tags": [
          "Message"
        ],
        "summary": "Get SMS",
        "description": "This API is to query the SMS Queue List.",
        "operationId": "selectSMSQueueList",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/GetSMSQueueSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSMSQueueRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/message/selectSMSQueueList \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"deviceId=testDeviceId\" \n "
          }
        ]
      }
    },
    "/message/updateSMSQueue": {
      "post": {
        "tags": [
          "Message"
        ],
        "summary": "Update SMS",
        "description": "This API is to update the SMS Queue.",
        "operationId": "updateSMSQueue",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSMSQueueSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSMSQueueRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/message/updateSMSQueue \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"smsId=ab95bc9e4dee47a4a8efd5b6064c9071\" \n "
          }
        ]
      }
    },
    "/org/addMembers": {
      "post": {
        "tags": [
          "Organization"
        ],
        "summary": "Add Members to Organization",
        "description": "Add users to the organization. <br/>If it is a member of another organization, it is changed to that organization.",
        "operationId": "addMembers",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AddMembersReqSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgRespSchemaBase"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/org/addMembers \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"orgCode=org01&userIds=['user001','user002']\" \n "
          }
        ]
      }
    },
    "/org/create": {
      "post": {
        "tags": [
          "Organization"
        ],
        "summary": "Create Organization",
        "description": "Create an organization.<br/>Organization can be registered.",
        "operationId": "create_1",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrgReqSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectOrgRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/org/create \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"orgCode=org01&orgName=org 01&parentCode=org00\" \n "
          }
        ]
      }
    },
    "/org/delete": {
      "post": {
        "tags": [
          "Organization"
        ],
        "summary": "Delete Organization",
        "description": "Delete an organization.<br/>If the organization has sub-organizations, they lose the parent organization.",
        "operationId": "delete_1",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeleteOrgReqSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgRespSchemaBase"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/org/delete \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"orgCode=org01\" \n "
          }
        ]
      }
    },
    "/org/select": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Get Organization",
        "description": "Search an organization by orgCode. (SQL equal condition)",
        "operationId": "select",
        "parameters": [
          {
            "name": "orgCode",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "pattern": "/[^A-Z|a-z|0-9|\\_|\\:|\\.|\\-|\\+]/",
              "type": "string",
              "description": "The Unique Organization Code.<br/>The field allows only English alphabet, numbers and '_, :, ., -, +'.",
              "example": "org01"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectOrgRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X GET \\\n    https://ap01.manage.samsungknox.com/emm/oapi/org/select?orgCode=org01 \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    "
          }
        ]
      }
    },
    "/org/selectDevices": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Get Devices of Organization",
        "description": "Search devices of the organization code (SQL equals condition).",
        "operationId": "selectDevices",
        "parameters": [
          {
            "name": "orgCode",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "pattern": "/[^A-Z|a-z|0-9|\\_|\\:|\\.|\\-|\\+]/",
              "type": "string",
              "description": "The Unique Organization Code.<br/>The field allows only English alphabet, numbers and '_, :, ., -, +'.<br/>",
              "example": "org01"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectOrgDevicesRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X GET \\\n    https://ap01.manage.samsungknox.com/emm/oapi/org/selectDevices?orgCode=org01 \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    "
          }
        ]
      }
    },
    "/org/selectList": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Get Organizations",
        "description": "Search organizations list.<br/>You can query in two ways:<br/><li>Suborganizations of orgCode</li><li>(SQL Like condition) Search results of orgCodeLike or orgName.</li><br/>Must have a value of either orgCode, orgCodeLike, or orgName.<br/>\r\nIf all parameters are missing, all organizations are returned (Not recommended).",
        "operationId": "selectList_1",
        "parameters": [
          {
            "name": "orgCode",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "pattern": "/[^A-Z|a-z|0-9|\\_|\\:|\\.|\\-|\\+]/",
              "type": "string",
              "description": "The Unique Organization Code.<br/>The field allows only English alphabet, numbers and '_, :, ., -, +'.<br/>(SQL equal condition) It returns the suborganization of orgCode.",
              "example": "org01"
            }
          },
          {
            "name": "orgCodeLike",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "pattern": "/[^A-Z|a-z|0-9|\\_|\\:|\\.|\\-|\\+]/",
              "type": "string",
              "description": "The Unique Organization Code.<br/>The field allows only English alphabet, numbers and '_, :, ., -, +'.<br/>(SQL like condition) It returns the result of searching with the like condition of orgCodeLike.",
              "example": "orgCode0"
            }
          },
          {
            "name": "orgName",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "type": "string",
              "description": "Organization Name.<br/>(SQL like condition) It returns the result of searching with the like condition of orgName.",
              "example": "orgName0"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectOrgsRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X GET \\\n    https://ap01.manage.samsungknox.com/emm/oapi/org/selectList?orgCode=org01 \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    "
          }
        ]
      }
    },
    "/org/selectUsers": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Get Users of Organization",
        "description": "Search members of the organization code (SQL equals condition).",
        "operationId": "selectUsers",
        "parameters": [
          {
            "name": "orgCode",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "pattern": "/[^A-Z|a-z|0-9|\\_|\\:|\\.|\\-|\\+]/",
              "type": "string",
              "description": "The Unique Organization Code.<br/>The field allows only English alphabet, numbers and '_, :, ., -, +'.<br/>",
              "example": "org01"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectOrgUsersRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X GET \\\n    https://ap01.manage.samsungknox.com/emm/oapi/org/selectUsers?orgCode=org01 \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    "
          }
        ]
      }
    },
    "/org/update": {
      "post": {
        "tags": [
          "Organization"
        ],
        "summary": "Update Organization",
        "description": "Update an organization.",
        "operationId": "update",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrgReqSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgRespSchemaBase"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/org/update \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"orgCode=org01&orgName=org 001&parentCode=org00\" \n "
          }
        ]
      }
    },
    "/user/activateUser": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Activate User Status",
        "description": "Activate User Status.Currently, the user's status value is not used.",
        "operationId": "activateUser",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChangeUserStatusReqSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivateUserRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "deprecated": true,
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/user/activateUser \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"userIds=user01;user02;user03\" \n "
          }
        ]
      }
    },
    "/user/createDevice": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Add Device to User",
        "description": "Create device. <br/>Normally, devices are created automatically.",
        "operationId": "insertDevice",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateDeviceReqSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRespSchemaBase"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/user/createDevice \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"userId=user01&mobileId=user01_Android_1&platform=A&ownerShip=E\" \n "
          }
        ]
      }
    },
    "/user/createUser": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create User",
        "description": "Create User.<br/>Register one KM user.",
        "operationId": "insertUser",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserReqSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/user/createUser \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"userId=user01&userName=user 01&email=test@owner.org\" \n "
          }
        ]
      }
    },
    "/user/deactivateUser": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Deactivate User Status",
        "description": "Deactivate User Status.<br/> Deactivated users will not be able to sign in newly.<br/>Currently, the user's status value is not used.",
        "operationId": "deactivateUser",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChangeUserStatusReqSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeactivateUserRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "deprecated": true,
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/user/deactivateUser \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"userIds=user01;user02;user03\" \n "
          }
        ]
      }
    },
    "/user/deleteDevice": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Delete Device",
        "description": "Delete device by deviceID.<br/> Device ID looks similar to UUID.<br/>(contition) It can be deleted when the device's status in ('I','B').",
        "operationId": "deleteDevice",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeleteDeviceReqSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRespSchemaBase"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/user/deleteDevice \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"deviceId=9ffd1590fff444d68796ce3e05bc93e0\" \n "
          }
        ]
      }
    },
    "/user/purgeUser": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Delete User",
        "description": "If the user does not own the activated device, delete it. Otherwise, change the user status to Deactivated.",
        "operationId": "purgeUser",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeleteUserReqSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRespSchemaBase"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/user/purgeUser \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"userId=user01\" \n "
          }
        ]
      }
    },
    "/user/selectUserWithID": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get User",
        "description": "Search a User With User ID.",
        "operationId": "selectUserWithID",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "type": "string",
              "description": "User ID (SQL equal condition)",
              "example": "user01"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectUserRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X GET \\\n    https://ap01.manage.samsungknox.com/emm/oapi/user/selectUserWithID?userId=user01 \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    "
          }
        ]
      }
    },
    "/user/selectUsers": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get User List",
        "description": "Search the list of users",
        "operationId": "selectUsers_1",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "type": "string",
              "description": "User ID (SQL equal condition)",
              "example": "user01"
            }
          },
          {
            "name": "userName",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "type": "string",
              "description": "User Name (SQL like condition)",
              "example": "user name 01"
            }
          },
          {
            "name": "extraCondition.userIdLike",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "type": "string",
              "description": "User ID (SQL like condition)",
              "example": "user0"
            }
          },
          {
            "name": "extraCondition.userIds",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "type": "string",
              "description": "User ID (SQL in condition)",
              "example": "user0"
            }
          },
          {
            "name": "page.start",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Row index begins from 0 (start >= 0)",
              "example": "0",
              "default": "0"
            }
          },
          {
            "name": "page.limit",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Number of Rows (0 < limit <= 1000)",
              "example": "20",
              "default": "1000"
            }
          },
          {
            "name": "updatedAfter",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "type": "string",
              "description": "Search users who have changed since this time. format - YYYY-MM-DDTHH24:MI:SS.sssZ ",
              "example": "2022-04-11T17:30:39.123Z"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectUsersRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X GET \\\n    https://ap01.manage.samsungknox.com/emm/oapi/user/selectUsers?userName=user01 \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    "
          }
        ]
      }
    },
    "/user/updatePassword": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Update User Password",
        "description": "Update User Password.",
        "operationId": "updatePassword",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePasswordReqSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/user/updatePassword \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"userId=user01&userPassword=pw20210121!\" \n "
          }
        ]
      }
    },
    "/user/updateUser": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Update User",
        "description": "Update User Informations.",
        "operationId": "updateUser",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserReqSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserRespSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedSchema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer-Authentication": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl -X POST \\\n    https://ap01.manage.samsungknox.com/emm/oapi/user/updateUser \\\n    -H \"cache-control: no-cache\" \\\n    -H \"content-type: application/x-www-form-urlencoded\" \\\n    -H \"Authorization: bearer 98bfa733-aa70-4491-931f-f35442ff2e7e\" \\\n    -d \"userId=user01&email=test@owner.org\" \n "
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ActivateUserRespSchema": {
        "type": "object",
        "properties": {
          "activationCount": {
            "type": "integer",
            "description": "Activated User IDs count.",
            "format": "int32",
            "readOnly": true,
            "example": 3
          },
          "activationIds": {
            "type": "array",
            "description": "Activated User IDs List.",
            "readOnly": true,
            "example": [
              "user01",
              "user02",
              "user02"
            ],
            "items": {
              "type": "string",
              "description": "Activated User IDs List.",
              "readOnly": true,
              "example": "[\"user01\",\"user02\",\"user02\"]"
            }
          },
          "userLicenseExceeded": {
            "type": "boolean",
            "description": "if user license exceeded, \"true\".",
            "readOnly": true,
            "example": false
          }
        }
      },
      "ActiveDeviceCount": {
        "type": "object",
        "properties": {
          "amapiCount": {
            "type": "integer",
            "description": "The number of android management api type",
            "format": "int32",
            "readOnly": true,
            "example": 1
          },
          "androidCount": {
            "type": "integer",
            "description": "The number of android legacy active devices.",
            "format": "int32",
            "readOnly": true,
            "example": 3
          },
          "androidEntFullManagedCount": {
            "type": "integer",
            "description": "The number of android enterprise full managed active devices.",
            "format": "int32",
            "readOnly": true,
            "example": 5
          },
          "androidEntFullManagedWithWPCount": {
            "type": "integer",
            "description": "The number of android enterprise full managed active devices with work profile active devices.",
            "format": "int32",
            "readOnly": true,
            "example": 5
          },
          "androidEntSharedDeviceMulitCount": {
            "type": "integer",
            "description": "The number of android enterprise multiple shared type",
            "format": "int32",
            "readOnly": true,
            "example": 1
          },
          "androidEntSharedDeviceSecondaryCount": {
            "type": "integer",
            "description": "The number of android enterprise secondary(shared device) type",
            "format": "int32",
            "readOnly": true,
            "example": 1
          },
          "androidEntSharedDeviceSingleCount": {
            "type": "integer",
            "description": "The number of android enterprise single shared type",
            "format": "int32",
            "readOnly": true,
            "example": 1
          },
          "androidEntWorkProfileCount": {
            "type": "integer",
            "description": "The number of android enterprise work profile active devices.",
            "format": "int32",
            "readOnly": true,
            "example": 5
          },
          "androidEntWorkProfileOnCmpOwnCount": {
            "type": "integer",
            "description": "The number of android enterprise work profile on company owned active devices.",
            "format": "int32",
            "readOnly": true,
            "example": 5
          },
          "androidKnoxWorkspaceCount": {
            "type": "integer",
            "description": "The number of android knox workspace active devices.",
            "format": "int32",
            "readOnly": true,
            "example": 5
          },
          "androidTotalCount": {
            "type": "integer",
            "description": "Sum of all active Android devices",
            "format": "int32",
            "readOnly": true,
            "example": 28
          },
          "iosCount": {
            "type": "integer",
            "description": "The number of iOS active devices.",
            "format": "int32",
            "readOnly": true,
            "example": 10
          },
          "iosDeviceEnrollCount": {
            "type": "integer",
            "description": "The number of iOS(Device Enrollment) devices.",
            "format": "int32",
            "readOnly": true,
            "example": 10
          },
          "iosSecondaryCount": {
            "type": "integer",
            "description": "The number of Shared iPad Secondary active devices.",
            "format": "int32",
            "readOnly": true,
            "example": 10
          },
          "iosStageCount": {
            "type": "integer",
            "description": "The number of Shared iPad Stage active devices.",
            "format": "int32",
            "readOnly": true,
            "example": 10
          },
          "total": {
            "type": "integer",
            "description": "Total number of active devices.",
            "format": "int32",
            "readOnly": true,
            "example": 48
          },
          "wearosCount": {
            "type": "integer",
            "description": "The number of Wear OS active devices.",
            "format": "int32",
            "readOnly": true,
            "example": 10
          },
          "windowsCount": {
            "type": "integer",
            "description": "The number of windows active devices.",
            "format": "int32",
            "readOnly": true,
            "example": 10
          }
        },
        "description": "Information list of activated devices included in the group.",
        "readOnly": true
      },
      "AddMembersReqSchema": {
        "required": [
          "orgCode",
          "userIds"
        ],
        "type": "object",
        "properties": {
          "orgCode": {
            "maxLength": 50,
            "pattern": "/[^A-Z|a-z|0-9|\\_|\\:|\\.|\\-|\\+]/",
            "type": "string",
            "description": "The Unique Organization Code.<br/>The field allows only English alphabet, numbers and '_, :, ., -, +'.",
            "example": "org01"
          },
          "userIds": {
            "maxLength": 50,
            "pattern": "/[^A-Z|a-z|0-9|\\_|\\:|\\.|\\-|\\+]/",
            "type": "array",
            "description": "Array of userIds.<br/>ex) ['userId1', 'userId2', ... 'userIdn']",
            "example": "['user001','user002']",
            "items": {
              "maxLength": 50,
              "pattern": "/[^A-Z|a-z|0-9|\\_|\\:|\\.|\\-|\\+]/",
              "type": "string",
              "description": "Array of userIds.<br/>ex) ['userId1', 'userId2', ... 'userIdn']",
              "example": "['user001','user002']"
            }
          }
        }
      },
      "AreaResultCommonSchema": {
        "type": "object",
        "properties": {
          "area": {
            "type": "string",
            "description": "Default area(\"0\") or KNOX Id.",
            "example": "0"
          },
          "commandId": {
            "type": "string",
            "description": "Command ID. In case of success, this value is available. ",
            "example": "fd5b6064c9071dc95bc9e4dee47a4a8e"
          },
          "result": {
            "type": "string",
            "description": "0 : Success, others : fail ",
            "example": "0"
          },
          "type": {
            "type": "string",
            "description": "0 : EMM Agent, 1 : EMM Client",
            "example": "0"
          }
        },
        "description": "Shows area information of devices to which Device Command is applied."
      },
      "AreaResultListSchema": {
        "type": "object",
        "properties": {
          "areaResult": {
            "type": "array",
            "description": "Shows area information of devices to which Device Command is applied.",
            "items": {
              "$ref": "#/components/schemas/AreaResultSchema"
            }
          },
          "commandId": {
            "type": "string",
            "description": "It is a request ID. You can get a result of sending a Device Control with this value.",
            "example": "9e4dee47a4a8efd5b6064c9071dc95bc"
          }
        },
        "description": "If the result is error, this value is empty. If there is no result, this value is empty."
      },
      "AreaResultSchema": {
        "type": "object",
        "properties": {
          "area": {
            "type": "string",
            "description": "Default area(\"0\") or KNOX Id.",
            "example": "0"
          },
          "commandId": {
            "type": "string",
            "description": "Command ID. In case of success, this value is available. ",
            "example": "fd5b6064c9071dc95bc9e4dee47a4a8e"
          },
          "optionData": {
            "type": "string",
            "description": "Application package name",
            "example": "com.sds.test.pkg"
          },
          "result": {
            "type": "string",
            "description": "0 : Success, others : fail ",
            "example": "0"
          },
          "type": {
            "type": "string",
            "description": "0 : EMM Agent, 1 : EMM Client",
            "example": "0"
          }
        },
        "description": "Shows area information of devices to which Device Command is applied."
      },
      "AssignInfo": {
        "type": "object",
        "properties": {
          "assignAppCount": {
            "type": "integer",
            "description": "Assigned application count",
            "format": "int32",
            "readOnly": true,
            "example": 1
          },
          "assignContentCount": {
            "type": "integer",
            "description": "Assigned content count",
            "format": "int32",
            "readOnly": true,
            "example": 1
          },
          "assignId": {
            "type": "string",
            "description": "groupID or OrgCode",
            "readOnly": true,
            "example": "sampleGroupID"
          },
          "assignName": {
            "type": "string",
            "description": "group Name or Org Name",
            "readOnly": true,
            "example": "sample Group Name"
          },
          "assignProfileCount": {
            "type": "integer",
            "description": "Assigned profile count",
            "format": "int32",
            "readOnly": true,
            "example": 1
          },
          "assignType": {
            "type": "string",
            "description": "G: Group, O: Org",
            "readOnly": true,
            "example": "G | O"
          },
          "tenantId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        }
      },
      "AuditLogForOpenApi": {
        "type": "object",
        "properties": {
          "auditTimestampText": {
            "type": "string"
          },
          "auditType": {
            "type": "string",
            "description": "Audit Type.",
            "example": "Console",
            "default": "Console"
          },
          "clientIp": {
            "type": "string",
            "description": "Client IP.",
            "example": "70.10.151.11"
          },
          "eventCategory": {
            "type": "string",
            "description": "Event Category. <br/>Please refer to (History > Audit Log) Event Category.",
            "example": "Device Command"
          },
          "eventDesc": {
            "type": "string",
            "description": "Event Description.",
            "example": "Device Command Added"
          },
          "eventDetail": {
            "type": "string",
            "description": "Request History.",
            "example": "NotificationId=AAD895a94c75ad94c8e96dadb964e2985ac"
          },
          "eventId": {
            "type": "string",
            "description": "Event Id.",
            "example": "DDEV0153"
          },
          "eventResult": {
            "type": "string",
            "description": "Request History.",
            "example": "Success to write KSP AppFeedback."
          },
          "eventResultCode": {
            "type": "string",
            "description": "Result Code.",
            "example": "0000000"
          },
          "eventResultStatus": {
            "type": "string",
            "description": "Result.",
            "example": "Success"
          },
          "logData": {
            "type": "string",
            "description": "Log Data.",
            "example": "[{\\\"Key\\\":\\\"profileName\\\",\\\"Message\\\":\\\"[Fatal error occurred.Device or profile owner not found][11003][Device running Android version 9]\\\",\\\"PackageName\\\":\\\"com.samsung.android.knox.kpu\\\",\\\"Severity\\\":\\\"2\\\",\\\"Timestamp\\\":\\\"1614821663212\\\"}]"
          },
          "mobileId": {
            "type": "string",
            "description": "Device Name.",
            "example": "shawn_h.2019_Android_1"
          },
          "severity": {
            "type": "string",
            "description": "Level. <br/>Please refer below for detailed information.<br/> -Critical: The event is a serious error and immediate action is required.<br/> -Error: The event is a general error and action is required but not urgent.<br/> -Warning: The event may potentially cause a problem.<br/> -Notice: Admin should be aware of the event.<br/> -Info: The event is for general information.<br/> -Debug: The event is defined in detail for developers.",
            "example": "Info"
          },
          "userId": {
            "pattern": "/[^A-Z|a-z|0-9|\\_|\\:|\\.|\\-|\\+]/",
            "type": "string",
            "description": "User ID, unique user ID.",
            "example": "shawn_h.2019"
          }
        }
      },
      "AuditLogSchema": {
        "type": "object",
        "properties": {
          "auditLogs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditLogForOpenApi"
            }
          },
          "total": {
            "type": "string",
            "description": "Total count for requests.",
            "readOnly": true,
            "example": "1"
          }
        },
        "description": "If the result is error, this value is empty. If there is no result, this value is empty."
      },
      "AuditLogSearchParam": {
        "required": [
          "tenantId"
        ],
        "type": "object",
        "properties": {
          "auditType": {
            "type": "string",
            "description": "Audit Type. <br/>Audit Type can have only three values:<br/><br/>1) Device Audit: 'Device'<br/>2) System Audit: 'System'<br/>3) Console/Server Audit: 'Console'<br/><br/>If the input value does not belong to above values, it will be determined as 'Console'.",
            "example": "Console",
            "default": "Console"
          },
          "eventCategory": {
            "type": "string",
            "description": "Event Category. <br/>Please refer to (History > Audit Log) Event Category.",
            "example": "Device Command"
          },
          "eventDesc": {
            "type": "string",
            "description": "Event Description.",
            "example": "Device Command Added"
          },
          "eventResultStatus": {
            "type": "string",
            "description": "Result Code. <br/>Result Code can have only two values:<br/><br/>1) Success: 200<br/>2) Failed: 500<br/>",
            "example": "200"
          },
          "locale": {
            "type": "string",
            "description": "Locale. <br/>Locale is expressed in language code.<br/>ISO 639 alpha-2 or alpha-3 (ex- en, ko, fr, es, pt-BR, it, de)",
            "example": "ko",
            "default": "en"
          },
          "logDate": {
            "maxLength": 10,
            "pattern": "yyyy-MM-dd",
            "type": "string",
            "description": "Log Date. <br/>Input Value must have 'yyyy-MM-dd' pattern (ex- 2021-01-01)<br/>Minimum Log Date is 90 days before today. Log Date cannot be later than today.",
            "example": "2021-01-01",
            "default": "Today"
          },
          "mobileId": {
            "type": "string",
            "description": "Device Name.",
            "example": "shawn_h.2019_Android_1"
          },
          "tenantId": {
            "type": "string",
            "description": "Tenant ID.",
            "example": "yourcompany.com"
          },
          "timeZone": {
            "pattern": "^(?:(?:[+](?:0\\d|1[0-3])|[-](?:0[1-9]|1[0-1])):[0-5][0-9]|[+]14:00|[-]12:00|00:00)$",
            "type": "string",
            "description": "Time Zone. <br/>Input value is converted to GMT time zone value (ex- GMT+09:00)<br/>Input value must have +-HH:MM pattern.<br/>Input range is from -12:00 to +14:00.",
            "example": "+09:00",
            "default": "+00:00"
          },
          "userId": {
            "pattern": "/[^A-Z|a-z|0-9|\\_|\\:|\\.|\\-|\\+]/",
            "type": "string",
            "description": "User ID, unique user ID.",
            "example": "shawn_h.2019"
          }
        }
      },
      "AuthorizedUserSchema": {
        "type": "object",
        "properties": {
          "userId": {
            "maxLength": 50,
            "pattern": "/[^A-Z|a-z|0-9|\\_|\\:|\\.|\\-|\\+]/",
            "type": "string",
            "description": "User ID of Knox Manage with successful authentication",
            "example": "shawn_h.2019"
          }
        },
        "description": "If the result is error, this value is empty. If there is no result, this value is empty."
      },
      "ChangeUserStatusReqSchema": {
        "required": [
          "userIds"
        ],
        "type": "object",
        "properties": {
          "userIds": {
            "maxLength": 50,
            "type": "string",
            "description": "User IDs String. Delimiter is ; .<br/>ex)user01;user02;user03",
            "example": "user01;user02;user03"
          }
        }
      },
      "CmdIdSchema": {
        "type": "object",
        "properties": {
          "commandId": {
            "type": "string",
            "description": "Command ID.",
            "example": "fd5b6064c9071dc95bc9e4dee47a4a8e"
          },
          "deviceId": {
            "type": "string",
            "description": "Device ID.",
            "example": "dc95bc9e4dee47a4a8efd5b6064c9071"
          }
        },
        "description": "List of Device ID and Command ID information for which transmission was successful."
      },
      "CommandIdRespSchema": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * 1901064 : No Device Information\n * 1901013 : Invalid Request. eg) request to remove KNOX on iOS Device. or request to remove KNOX on a device but No installed KNOX on the device.\n * 1901065 : Not Activated Device \n * 2000001 : Invalid Platform \n * 2000010 : No Push Magic Data for APNS - iOS Only\n * 2001005 : PUSH Server Agent is not Registered\n * 2001006 : PUSH Device Agent is not Registered\n * 0220003 : Container(KNOX) Not exist\n * 3100003 : Not Support Android Enterprise\n * -117 ~ -102 : Invalid Parameter Error, Each error code is related with null value, not-matched format, etc.\n * -208 : Not supported platform Error\n * -501 ~ -502 : Knox related Error\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          },
          "resultValue": {
            "$ref": "#/components/schemas/CommandIdSchema"
          }
        }
      },
      "CommandIdSchema": {
        "type": "object",
        "properties": {
          "commandId": {
            "type": "string",
            "description": "It is a request ID. You can get a result of sending a Device Control with this value.",
            "example": "fd5b6064c9071dc95bc9e4dee47a4a8e"
          }
        },
        "description": "If the result is error, this value is empty. If there is no result, this value is empty."
      },
      "CommandQueueVO": {
        "type": "object",
        "properties": {
          "commandCode": {
            "type": "string"
          },
          "deviceId": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "isAgent": {
            "type": "string"
          },
          "mobileId": {
            "type": "string"
          },
          "platform": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        }
      },
      "CommonAreaResultRespSchema": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * 1901064 : No Device Information\n * 1901013 : Invalid Request. eg) request to remove KNOX on iOS Device. or request to remove KNOX on a device but No installed KNOX on the device.\n * 1901065 : Not Activated Device \n * 2000001 : Invalid Platform \n * 2000010 : No Push Magic Data for APNS - iOS Only\n * 2001005 : PUSH Server Agent is not Registered\n * 2001006 : PUSH Device Agent is not Registered\n * 0220003 : Container(KNOX) Not exist\n * 3100003 : Not Support Android Enterprise\n * -117 ~ -102 : Invalid Parameter Error, Each error code is related with null value, not-matched format, etc.\n * -208 : Not supported platform Error\n * -501 ~ -502 : Knox related Error\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          },
          "resultValue": {
            "$ref": "#/components/schemas/UpdateProfileSchema"
          }
        }
      },
      "ControlResultSchema": {
        "required": [
          "commandId",
          "deviceId"
        ],
        "type": "object",
        "properties": {
          "commandId": {
            "type": "string",
            "description": "It is a request ID. You can get a result of sending a Device Control with this value.",
            "example": "fd5b6064c9071dc95bc9e4dee47a4a8e"
          },
          "deviceId": {
            "type": "string",
            "description": "Device ID.",
            "example": "dc95bc9e4dee47a4a8efd5b6064c9071"
          }
        }
      },
      "CountGroupRespSchema": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * -102 : Parameter - Null or Empty string\n * -103 : Parameter - Null object\n * -109 : Parameter - The string length must be less than %d\n * -200 : The number of licenses has been exceeded.\n * -201 : Duplicate data exists.\n * -202 : There are no results.\n * -203 : Invalid Group type\n * -204 : Activated device exists.\n * -205 : Data Not found\n * -206 : Invalid Group ID\n * -207 : There are no members.\n * -208 : Invalid group member type.\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          },
          "resultValue": {
            "$ref": "#/components/schemas/ResultTotal"
          }
        }
      },
      "CreateDeviceReqSchema": {
        "required": [
          "mobileId",
          "ownerShip",
          "platform",
          "userId"
        ],
        "type": "object",
        "properties": {
          "mobileId": {
            "maxLength": 50,
            "pattern": "/[^A-Z|a-z|0-9|\\_]/",
            "type": "string",
            "description": "Device Name, The value that can distinguish the device entered when registering the device<br/>ex) user01_Android_1",
            "example": "user01_Android_1"
          },
          "ownerShip": {
            "maxLength": 10,
            "type": "string",
            "description": "E : BYOD, EC : COPE, C : Company",
            "example": "A"
          },
          "platform": {
            "maxLength": 10,
            "type": "string",
            "description": "A : Android, I : iOS",
            "example": "A"
          },
          "userId": {
            "maxLength": 50,
            "pattern": "/[^A-Z|a-z|0-9|\\_|\\:|\\.|\\-|\\+]/",
            "type": "string",
            "description": "User ID, unique user ID.<br/>The field allows only English alphabet, numbers and '_, :, ., -, +'.",
            "example": "shawn_h.2019"
          }
        },
        "xml": {
          "name": "UserDevices"
        }
      },
      "CreateLimitedEnrollmentRespSchema": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * -102 : Parameter - Null or Empty string\n * -103 : Parameter - Null object\n * -109 : Parameter - The string length exceeded.\n * -221 : Invalid license\n * -222 : Tenant not found\n * -223 : No userId found from User Info Repository, please check userID \n * -224 : Authentication failed, please check Id or password\n * -301 : License check failed.\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          },
          "resultValue": {
            "$ref": "#/components/schemas/LimitedEnrollmentResp"
          }
        }
      },
      "CreateLimitedEnrollmentSchema": {
        "required": [
          "restrictIds",
          "restrictType"
        ],
        "type": "object",
        "properties": {
          "restrictIds": {
            "maxLength": 50,
            "pattern": "/[^A-Z|a-z|0-9|\\_|\\:|\\.|\\-|\\+]/",
            "type": "array",
            "description": "Limited Enrollment target IDs Array. IMEI, SERIAL, OS or MODEL values<br>['device01','device02']",
            "example": "['device01','device02']",
            "items": {
              "maxLength": 50,
              "pattern": "/[^A-Z|a-z|0-9|\\_|\\:|\\.|\\-|\\+]/",
              "type": "string",
              "description": "Limited Enrollment target IDs Array. IMEI, SERIAL, OS or MODEL values<br>['device01','device02']",
              "example": "['device01','device02']"
            }
          },
          "restrictType": {
            "maxLength": 50,
            "type": "string",
            "description": "Limited Enrollment Type. IMEI, SERIAL, OS or MODEL. Default value is IMEI",
            "example": "IMEI"
          }
        }
      },
      "CreateOrgReqSchema": {
        "required": [
          "orgCode",
          "orgName"
        ],
        "type": "object",
        "properties": {
          "activationType": {
            "type": "string",
            "description": "Android Activation Type. <br/>Enter the android activation type.\r\n<br/>The Android Activation configuration of organization.<br/>\r\n<br/> . LEGACY - Android legacy activation type.\r\n<br/> . AE - Android enterprise activation type.\r\n<br/> . AEFW - Fully Managed with Work Profile. Android enterprise subtype.",
            "example": "AE | AEFW | LEGACY"
          },
          "childFlag": {
            "type": "string",
            "description": "Child Node Flag. <br/>Whether sub-organizations exist. 0 : absence, 1 : existence.",
            "readOnly": true,
            "example": "1"
          },
          "created": {
            "type": "string",
            "description": "Last Updated. long type timestamp. To use, you need to convert to a date type.",
            "format": "date-time",
            "readOnly": true
          },
          "depth": {
            "type": "string",
            "description": "Tree depth. <br/>Depth in the organization tree. The depth of root is 0.",
            "readOnly": true,
            "example": "1"
          },
          "googleBLDeviceCount": {
            "type": "integer",
            "description": "The value associated with the device's DEVICE ORGANIZATION. Include only BL Status Devices.",
            "format": "int32",
            "example": 1
          },
          "googleDeviceCount": {
            "type": "integer",
            "description": "The value associated with the device's DEVICE ORGANIZATION.",
            "format": "int32",
            "example": 1
          },
          "googleOrgPath": {
            "type": "string",
            "description": "HashCode of Google Organization Path.<br/>Usually used to find the google org path.\r\n",
            "example": "-1670227373"
          },
          "licenseType": {
            "type": "string",
            "description": "License Type.<br/> Enter the license type.\r\n<br/>The license configuration of organization.<br/>\r\n<br/> . KS : Knox Suite.\r\n<br/> . KM : Knox Manage.\r\n<br/> . KMKPE : Knox Manage with Knox Platform for Enterprise license.",
            "example": "KM | KS | KMKPE"
          },
          "noSyncFlag": {
            "maxLength": 50,
            "type": "string",
            "description": "Enter the value to determine whether to sync with AD/LDAP.\r\n<br/>\t  . 0 - Synchronize with AD/LDAP\r\n<br/>\t  . 1 - Do not Synchronize with AD/LDAP",
            "example": "1"
          },
          "orgCode": {
            "maxLength": 50,
            "pattern": "/[^A-Z|a-z|0-9|\\_|\\:|\\.|\\-|\\+]/",
            "type": "string",
            "description": "The Unique Organization Code.<br/>The field allows only English alphabet, numbers and '_, :, ., -, +'.",
            "example": "org01"
          },
          "orgName": {
            "maxLength": 256,
            "type": "string",
            "description": "Organization Name.",
            "example": "org 01"
          },
          "orgType": {
            "maxLength": 2,
            "type": "string",
            "description": "Registration Type.<br/>0 : KM local org, 1 : DirectoryService(LDAP) synchronized organization.",
            "example": "0"
          },
          "orgTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "orgVirtualCode": {
            "maxLength": 50,
            "type": "string",
            "description": "Internal Organizatoin code. <br/>It is grouped by two letters and expresses a hierarchy.",
            "example": "0101"
          },
          "parentCode": {
            "maxLength": 50,
            "type": "string",
            "description": "Parent Organization Code.",
            "example": "org0"
          },
          "validOrg": {
            "type": "string",
            "description": "The Organization is valid.<br/>\t  . 0 - Invalid<br/>\t  . 1 - Valid",
            "readOnly": true,
            "example": "1"
          }
        },
        "xml": {
          "name": "organization"
        }
      },
      "CreateUserReqSchema": {
        "required": [
          "email",
          "userId",
          "userName"
        ],
        "type": "object",
        "properties": {
          "activationIdType": {
            "type": "string",
            "description": "Android Activation And License Configuration Type. <br/>\r\n<br/>ORG or USER value.\r\n<br/>\r\n<br/> . ORG - Follow the configuration of organization.\r\n<br/> . USER - User configuration.\r\n",
            "example": "USER | ORG"
          },
          "activationType": {
            "type": "string",
            "description": "Android Activation Type. <br/>Enter the android activation type.\r\n<br/>The each user configuration has a higher priority than configuration of organization that they belong in. \r\n<br/>\r\n<br/>If null, follow the configuration of organization.\r\n<br/>\r\n<br/> . LEGACY - Android legacy activation type.\r\n<br/> . AE - Android enterprise activation type.\r\n<br/> . AEFW - Fully Managed with Work Profile. Android enterprise subtype.",
            "example": "AE | AEFW | LEGACY"
          },
          "contact": {
            "maxLength": 50,
            "pattern": "/^[0-9 \\+\\#\\*\\-\\(\\)\\/\\,]+$/",
            "type": "string",
            "description": "Contact (phone number)",
            "example": "+82-2-001-0001"
          },
          "countryCode": {
            "maxLength": 2,
            "type": "string",
            "description": "Country code. ISO 3166-1 alpha-2",
            "example": "US"
          },
          "email": {
            "maxLength": 100,
            "pattern": "/^.{8,30}$/, /[0-9]+/, /[a-zA-Z]+/, /[^0-9a-zA-Z]+/",
            "type": "string",
            "description": "Email Address",
            "example": "abc@www.org"
          },
          "empNo": {
            "maxLength": 25,
            "pattern": "/[^A-Za-z0-9\\-\\_\\.]/",
            "type": "string",
            "description": "Employee Number",
            "example": "Abc_123"
          },
          "firstName": {
            "maxLength": 256,
            "type": "string",
            "description": "First Name",
            "example": "Shawn"
          },
          "lastName": {
            "maxLength": 256,
            "type": "string",
            "description": "Last Name",
            "example": "Hwang"
          },
          "licenseType": {
            "type": "string",
            "description": "License Type.<br/> Enter the license type.\r\n<br/>The each user configuration has a higher priority than configuration of organization that they belong in. \r\n<br/>\r\n<br/>If null, follow the configuration of organization.\r\n<br/>\r\n<br/> . KS : Knox Suite.\r\n<br/> . KM : Knox Manage.\r\n<br/> . KMKPE : Knox Manage with Knox Platform for Enterprise license.",
            "example": "KM | KMKPE | KS"
          },
          "loginHistory": {
            "$ref": "#/components/schemas/LoginHistory"
          },
          "managedAppleId": {
            "type": "string"
          },
          "middleName": {
            "maxLength": 256,
            "type": "string",
            "description": "Middle Name",
            "example": "Andreas"
          },
          "mobilePhone": {
            "maxLength": 50,
            "pattern": "/^[0-9 \\+\\#\\*\\-\\(\\)\\/\\,]+$/",
            "type": "string",
            "description": "Mobile Phone number to send SMS for invitation.",
            "example": "+82-10-001-0001"
          },
          "noSyncFlag": {
            "maxLength": 50,
            "type": "string",
            "description": "Enter the value to determine whether to sync with AD/LDAP.\r\n<br/>\t  . 0 - Synchronize with AD/LDAP\r\n<br/>\t  . 1 - Do not Synchronize with AD/LDAP",
            "example": "1"
          },
          "orgCode": {
            "maxLength": 50,
            "type": "string",
            "description": "Organization Code",
            "example": "organizationCode1"
          },
          "orgName": {
            "maxLength": 50,
            "type": "string",
            "description": "Organization Name",
            "readOnly": true,
            "example": "organization1"
          },
          "passwdStatus": {
            "type": "string",
            "description": "Password initialize flag in login process. 1:It doesn't need password initialize., 0:It needs password initialize.",
            "example": "1"
          },
          "positionCode": {
            "maxLength": 50,
            "type": "string",
            "description": "Position Code. <br/>Please refer to (Advanced > Reference Data) Position category.",
            "example": "positionCode1"
          },
          "securityLevelCode": {
            "maxLength": 50,
            "type": "string",
            "description": "Security Level Code. <br/>Please refer to (Advanced > Reference Data) Security Level category.",
            "example": "securityLevelCode1"
          },
          "sharedDeviceType": {
            "type": "string"
          },
          "siteCode": {
            "maxLength": 50,
            "type": "string",
            "description": "Site Code. <br/>Please refer to (Advanced > Reference Data) Site category.",
            "example": "siteCode1"
          },
          "stageUser": {
            "type": "boolean"
          },
          "updatedAfter": {
            "type": "string"
          },
          "userId": {
            "maxLength": 50,
            "pattern": "/[^A-Z|a-z|0-9|\\_|\\:|\\.|\\-|\\+]/",
            "type": "string",
            "description": "User ID, unique user ID.<br/>The field allows only English alphabet, numbers and '_, :, ., -, +'.",
            "example": "shawn_h.2019"
          },
          "userName": {
            "maxLength": 256,
            "type": "string",
            "description": "User Name",
            "example": "Shawn_Andreas_Hwang"
          },
          "userPassword": {
            "maxLength": 50,
            "pattern": "/^.{8,30}$/, /[0-9]+/, /[a-zA-Z]+/, /[^0-9a-zA-Z]+/",
            "type": "string",
            "description": "User Password. Without userPassword, userPassword is same as userId.<br/>Passwords must be between 8 and 30 characters.<br/>Passwords must contain at least one number.<br/>Passwords must contain at least one letter.<br/>Passwords must contain at least one special character.",
            "example": "alpha1!!"
          },
          "userType": {
            "type": "string",
            "description": "User creation type. 1:SYNC., 0:LOCAL.",
            "example": "1"
          },
          "vppClientUserId": {
            "maxLength": 256,
            "type": "string",
            "description": "Knox Manage's unique ID for vpp users.",
            "readOnly": true,
            "example": "userID@tenantID"
          }
        },
        "xml": {
          "name": "UserEmm"
        }
      },
      "CreateUserRespSchema": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * -102 : Parameter - Null or Empty string\n * -103 : Parameter - Null object\n * -109 : Parameter - The string length must be less than %d\n * -200 : The number of licenses has been exceeded.\n * -201 : Duplicate data exists.\n * -202 : There are no results.\n * -204 : Activated device exists.\n * -205 : Data Not found\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          },
          "resultValue": {
            "$ref": "#/components/schemas/UserDefaultResp"
          }
        }
      },
      "DeactivateUserRespSchema": {
        "type": "object",
        "properties": {
          "deactivationCount": {
            "type": "integer",
            "description": "Deactivated User IDs count.",
            "format": "int32",
            "readOnly": true,
            "example": 3
          },
          "deactivationIds": {
            "type": "array",
            "description": "Deactivated User IDs List.",
            "readOnly": true,
            "example": [
              "user01",
              "user02",
              "user02"
            ],
            "items": {
              "type": "string",
              "description": "Deactivated User IDs List.",
              "readOnly": true,
              "example": "[\"user01\",\"user02\",\"user02\"]"
            }
          }
        }
      },
      "DeleteAppSchema": {
        "required": [
          "appPackages",
          "deviceId"
        ],
        "type": "object",
        "properties": {
          "appPackages": {
            "type": "array",
            "description": "Application package name. Array data type.",
            "example": "test.samsung.app",
            "items": {
              "type": "string",
              "description": "Application package name. Array data type.",
              "example": "test.samsung.app"
            }
          },
          "deviceId": {
            "type": "string",
            "description": "Device ID.",
            "example": "dc95bc9e4dee47a4a8efd5b6064c9071"
          },
          "knoxId": {
            "type": "string",
            "description": "KNOX ID that EMM Service issued.",
            "example": "true"
          }
        }
      },
      "DeleteDeviceReqSchema": {
        "required": [
          "deviceId"
        ],
        "type": "object",
        "properties": {
          "deviceId": {
            "maxLength": 50,
            "pattern": "/[^A-Z|a-z|0-9|\\_|\\:|\\.|\\-|\\+]/",
            "type": "string",
            "description": "The value that can distinguish the device entered when registering the device",
            "example": "user01_Android_1"
          }
        }
      },
      "DeleteGroupsKey": {
        "type": "object",
        "properties": {
          "deleteGroupResp": {
            "$ref": "#/components/schemas/GroupDeleteResponse"
          }
        },
        "description": "If the result is error, this value is empty. If there is no result, this value is empty."
      },
      "DeleteGroupsRespSchema": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * -102 : Parameter - Null or Empty string\n * -103 : Parameter - Null object\n * -109 : Parameter - The string length must be less than %d\n * -200 : The number of licenses has been exceeded.\n * -201 : Duplicate data exists.\n * -202 : There are no results.\n * -203 : Invalid Group type\n * -204 : Activated device exists.\n * -205 : Data Not found\n * -206 : Invalid Group ID\n * -207 : There are no members.\n * -208 : Invalid group member type.\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          },
          "resultValue": {
            "$ref": "#/components/schemas/DeleteGroupsKey"
          }
        }
      },
      "DeleteGroupsSchema": {
        "required": [
          "groupIdString"
        ],
        "type": "object",
        "properties": {
          "applyProfile": {
            "type": "string",
            "description": "Indicates whether the profile is transmitted when a group is modified or deleted. <br/>If the value is '1' after group change, the profile is sent to members in the group.",
            "writeOnly": true,
            "example": "1"
          },
          "groupIdString": {
            "type": "string",
            "description": "Indicates the unique ID values of groups to be deleted. Construct a list of group IDs using delimiters (;). <br/> ex) groupIdString=testGroupId1;testGroupId2;testGroupId3",
            "writeOnly": true,
            "example": "testG1;testG2;testG3"
          }
        }
      },
      "DeleteOrgReqSchema": {
        "required": [
          "orgCode"
        ],
        "type": "object",
        "properties": {
          "orgCode": {
            "maxLength": 50,
            "pattern": "/[^A-Z|a-z|0-9|\\_|\\:|\\.|\\-|\\+]/",
            "type": "string",
            "description": "The Unique Organization Code.<br/>The field allows only English alphabet, numbers and '_, :, ., -, +'.",
            "example": "org01"
          }
        }
      },
      "DeleteSMSQueueSchema": {
        "required": [
          "smsId"
        ],
        "type": "object",
        "properties": {
          "smsId": {
            "type": "string",
            "description": "SMS ID, the unique key of SMS Queue.",
            "example": "dc95bc9e4dee47a4a8efd5b6064c9071"
          }
        }
      },
      "DeleteUserReqSchema": {
        "required": [
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "maxLength": 50,
            "pattern": "/[^A-Z|a-z|0-9|\\_|\\:|\\.|\\-|\\+]/",
            "type": "string",
            "description": "User ID, unique user ID.<br/>The field allows only English alphabet, numbers and '_, :, ., -, +'.",
            "example": "shawn_h.2019"
          }
        }
      },
      "DeviceAppInfo": {
        "type": "object",
        "properties": {
          "appAction": {
            "type": "string"
          },
          "appId": {
            "type": "string"
          },
          "appName": {
            "type": "string"
          },
          "appType": {
            "type": "string"
          },
          "binarySize": {
            "type": "string"
          },
          "crc": {
            "type": "string"
          },
          "dataSize": {
            "type": "string"
          },
          "deviceAppType": {
            "type": "string"
          },
          "deviceId": {
            "type": "string"
          },
          "dir": {
            "type": "string"
          },
          "enabled": {
            "type": "string"
          },
          "enrolledType": {
            "type": "string"
          },
          "excelArea": {
            "type": "string"
          },
          "excelAttr": {
            "type": "string"
          },
          "excelHead": {
            "type": "string"
          },
          "excelInstallType": {
            "type": "string"
          },
          "excelRooting": {
            "type": "string"
          },
          "filter": {
            "type": "string"
          },
          "firewallId": {
            "type": "string"
          },
          "firewallName": {
            "type": "string"
          },
          "genericVpnId": {
            "type": "string"
          },
          "genericVpnName": {
            "type": "string"
          },
          "googleDeviceId": {
            "type": "string"
          },
          "hasAppFeedback": {
            "type": "string"
          },
          "installArea": {
            "type": "string"
          },
          "installAreas": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "installLocation": {
            "type": "string"
          },
          "installUser": {
            "type": "string"
          },
          "installed": {
            "type": "string",
            "format": "date-time"
          },
          "installedStatus": {
            "type": "string"
          },
          "isAeDevice": {
            "type": "string"
          },
          "isAutomaticDelete": {
            "type": "string"
          },
          "isBackupPrevent": {
            "type": "string"
          },
          "isCommonTenant": {
            "type": "string"
          },
          "isConfiguration": {
            "type": "string"
          },
          "isFeedBack": {
            "type": "string"
          },
          "isGoogleManaged": {
            "type": "string"
          },
          "isInstalledStatus": {
            "type": "string"
          },
          "isManaged": {
            "type": "string"
          },
          "isProvisioned": {
            "type": "string"
          },
          "isRooting": {
            "type": "string"
          },
          "knoxClientId": {
            "type": "string"
          },
          "knoxId": {
            "type": "string"
          },
          "knoxIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "knoxManageType": {
            "type": "string"
          },
          "knoxName": {
            "type": "string"
          },
          "knoxType": {
            "type": "string"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "managedAppConfig": {
            "type": "string"
          },
          "managedAppConfigMap": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "managedAppConfigSize": {
            "type": "integer",
            "format": "int32"
          },
          "managedAppFeedback": {
            "type": "string"
          },
          "managedAppFeedbackMap": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "managedAppFeedbackSize": {
            "type": "integer",
            "format": "int32"
          },
          "mandatoryApp": {
            "type": "string"
          },
          "mandatoryApps": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "mobileId": {
            "type": "string"
          },
          "mocanaVpnId": {
            "type": "string"
          },
          "mocanaVpnName": {
            "type": "string"
          },
          "packageFullName": {
            "type": "string"
          },
          "packageName": {
            "type": "string"
          },
          "platform": {
            "type": "string"
          },
          "platformName": {
            "type": "string"
          },
          "processStatus": {
            "type": "string"
          },
          "processStatuses": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "runningCount": {
            "type": "string"
          },
          "searchPackageAppName": {
            "type": "string"
          },
          "sharedUserId": {
            "type": "string"
          },
          "sort": {
            "type": "string"
          },
          "start": {
            "type": "integer",
            "format": "int32"
          },
          "systemApp": {
            "type": "string"
          },
          "systemAppUpdated": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "unusedRedemCode": {
            "type": "string"
          },
          "versionCode": {
            "type": "string"
          },
          "versionName": {
            "type": "string"
          },
          "vpnId": {
            "type": "string"
          },
          "vpnName": {
            "type": "string"
          }
        },
        "description": "Device Information List.",
        "readOnly": true
      },
      "DeviceAppSearhParamSchema": {
        "required": [
          "deviceId"
        ],
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string",
            "description": "Device ID, the unique key of the device.",
            "example": "dc95bc9e4dee47a4a8efd5b6064c9071"
          },
          "knoxd": {
            "type": "string",
            "description": "Knox Container ID (Android Only)",
            "example": "testcontainer"
          },
          "limit": {
            "type": "integer",
            "description": "Number of Rows (0 < limit <= 1000)",
            "format": "int32",
            "example": 20,
            "default": 1000
          },
          "start": {
            "type": "integer",
            "description": "Row index begins from 0 (start >= 0)",
            "format": "int32",
            "example": 0,
            "default": 0
          }
        }
      },
      "DeviceAppsWithTotal": {
        "type": "object",
        "properties": {
          "devicelist": {
            "type": "array",
            "description": "Device Information List.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/DeviceAppInfo"
            }
          },
          "total": {
            "type": "string",
            "description": "Total count for requests.",
            "readOnly": true,
            "example": "1"
          }
        }
      },
      "DeviceBasicInfo": {
        "type": "object",
        "properties": {
          "agentProfileId": {
            "type": "string"
          },
          "agentProfileName": {
            "type": "string"
          },
          "agentProfileUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "alias": {
            "type": "string"
          },
          "arrEasGatekeepingReason": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "assignedLicenseEndDate": {
            "type": "string"
          },
          "assignedLicenseKey": {
            "type": "string"
          },
          "basicInfoUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "batteryLevel": {
            "type": "string"
          },
          "batteryScale": {
            "type": "string"
          },
          "bluetoothMacAddress": {
            "type": "string"
          },
          "buildNumber": {
            "type": "string"
          },
          "buildType": {
            "type": "string"
          },
          "chromeosStatus": {
            "type": "string"
          },
          "clientProfileId": {
            "type": "string"
          },
          "clientProfileName": {
            "type": "string"
          },
          "clientProfileUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "controlType": {
            "type": "string"
          },
          "createUser": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "deleteUser": {
            "type": "string"
          },
          "depId": {
            "type": "string"
          },
          "deviceActivationType": {
            "type": "string"
          },
          "deviceId": {
            "type": "string"
          },
          "deviceIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "deviceKind": {
            "type": "string"
          },
          "deviceMaker": {
            "type": "string"
          },
          "deviceModel": {
            "type": "string"
          },
          "deviceModelKind": {
            "type": "string"
          },
          "deviceName": {
            "type": "string"
          },
          "deviceOrganization": {
            "type": "string"
          },
          "deviceOs": {
            "type": "string"
          },
          "deviceStatus": {
            "type": "string"
          },
          "deviceTagTitle": {
            "type": "string"
          },
          "deviceTagTitleType": {
            "type": "string"
          },
          "deviceTagValue": {
            "type": "string"
          },
          "deviceType": {
            "type": "string"
          },
          "deviceUsage": {
            "type": "string"
          },
          "deviceVersion": {
            "type": "string"
          },
          "deviceVersionCode": {
            "type": "string"
          },
          "deviceVersionName": {
            "type": "string"
          },
          "easGatekeepingReason": {
            "type": "string"
          },
          "enrolledType": {
            "type": "string"
          },
          "externalId": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "imei": {
            "type": "string"
          },
          "imsi": {
            "type": "string"
          },
          "isCompanyDevice": {
            "type": "string"
          },
          "isDep": {
            "type": "string"
          },
          "isDeviceLock": {
            "type": "string"
          },
          "isEasGatekeeping": {
            "type": "string"
          },
          "isKme": {
            "type": "string"
          },
          "isOfflineStatus": {
            "type": "string"
          },
          "isResetProvisionId": {
            "type": "string"
          },
          "isResetUdid": {
            "type": "string"
          },
          "isRooting": {
            "type": "string"
          },
          "isWifiDevice": {
            "type": "string"
          },
          "kmeId": {
            "type": "string"
          },
          "knoxCnt": {
            "type": "string"
          },
          "knoxId": {
            "type": "string"
          },
          "knoxType": {
            "type": "string"
          },
          "lastConnectionUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "lastSynced": {
            "type": "string"
          },
          "lastSyncedBefore": {
            "type": "string"
          },
          "macAddress": {
            "type": "string"
          },
          "managementType": {
            "type": "string"
          },
          "mobileId": {
            "type": "string"
          },
          "mobileIdLike": {
            "type": "string"
          },
          "modemFirmware": {
            "type": "string"
          },
          "orgCode": {
            "type": "string"
          },
          "orgName": {
            "type": "string"
          },
          "ownerShip": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "platform": {
            "type": "string"
          },
          "platforms": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "prevDeviceStatus": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "provisionIdentifier": {
            "type": "string"
          },
          "provisionIdentifieres": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "secondaryDevice": {
            "type": "boolean"
          },
          "serialNumber": {
            "type": "string"
          },
          "sharedDeviceType": {
            "type": "string"
          },
          "smsCountryCode": {
            "type": "string"
          },
          "smsPhone": {
            "type": "string"
          },
          "stageDevice": {
            "type": "boolean"
          },
          "stageDeviceId": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "udid": {
            "type": "string"
          },
          "updateUser": {
            "type": "string"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          },
          "updatedBefore": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/UserEmm"
          },
          "userId": {
            "type": "string"
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "userName": {
            "type": "string"
          }
        }
      },
      "DeviceCount": {
        "type": "object",
        "properties": {
          "activationblocked": {
            "type": "integer",
            "format": "int32"
          },
          "amapi": {
            "type": "integer",
            "description": "The number of Android management API deivces.",
            "format": "int32",
            "readOnly": true,
            "example": 1
          },
          "android": {
            "type": "integer",
            "description": "The number of Android deivces.",
            "format": "int32",
            "readOnly": true,
            "example": 70
          },
          "androidComp": {
            "type": "integer",
            "description": "The number of Android COMP deivces.",
            "format": "int32",
            "readOnly": true,
            "example": 1
          },
          "androidCowp": {
            "type": "integer",
            "description": "The number of Android COWP deivces.",
            "format": "int32",
            "readOnly": true,
            "example": 1
          },
          "androidDo": {
            "type": "integer",
            "description": "The number of Android DO deivces.",
            "format": "int32",
            "readOnly": true,
            "example": 1
          },
          "androidKme": {
            "type": "integer",
            "description": "The number of Android KME deivces.",
            "format": "int32",
            "readOnly": true,
            "example": 1
          },
          "androidKnox": {
            "type": "integer",
            "description": "The number of Android KNOX deivces.",
            "format": "int32",
            "readOnly": true,
            "example": 1
          },
          "androidLegacy": {
            "type": "integer",
            "description": "The number of Android LEGACY deivces.",
            "format": "int32",
            "readOnly": true,
            "example": 1
          },
          "androidPo": {
            "type": "integer",
            "description": "The number of Android PO deivces.",
            "format": "int32",
            "readOnly": true,
            "example": 1
          },
          "androidRComp": {
            "type": "integer",
            "description": "The number of Android RCOMP deivces.",
            "format": "int32",
            "readOnly": true,
            "example": 1
          },
          "androidSecondary": {
            "type": "integer",
            "description": "The number of Android Shared Secondary deivces. This number does not include Android and Total count.",
            "format": "int32",
            "readOnly": true,
            "example": 1
          },
          "androidStageM": {
            "type": "integer",
            "description": "The number of Android Stage Multi devices.",
            "format": "int32",
            "readOnly": true,
            "example": 1
          },
          "androidStageS": {
            "type": "integer",
            "description": "The number of Android Stage Single deivces.",
            "format": "int32",
            "readOnly": true,
            "example": 1
          },
          "androidWear": {
            "type": "integer",
            "description": "The number of Android Wearable deivces.",
            "format": "int32",
            "readOnly": true,
            "example": 1
          },
          "blockedadmin": {
            "type": "integer",
            "format": "int32"
          },
          "disconnected": {
            "type": "integer",
            "description": "Count of disconnected status devices.",
            "format": "int32",
            "readOnly": true,
            "example": 0
          },
          "enrolled": {
            "type": "integer",
            "description": "Count of enrolled status devices.",
            "format": "int32",
            "readOnly": true,
            "example": 2
          },
          "expired": {
            "type": "integer",
            "description": "Count of expired status devices.",
            "format": "int32",
            "readOnly": true,
            "example": 0
          },
          "ios": {
            "type": "integer",
            "description": "The number of iOS deivces.",
            "format": "int32",
            "readOnly": true,
            "example": 27
          },
          "iosSecondary": {
            "type": "integer",
            "description": "The number of iOS shared (Secondary) deivces.",
            "format": "int32",
            "readOnly": true,
            "example": 1
          },
          "iosStage": {
            "type": "integer",
            "description": "The number of iOS shared (Stage) deivces.",
            "format": "int32",
            "readOnly": true,
            "example": 1
          },
          "operator": {
            "type": "string"
          },
          "provisioning": {
            "type": "integer",
            "description": "Count of provisioning status devices.",
            "format": "int32",
            "readOnly": true,
            "example": 1
          },
          "tizenWearable": {
            "type": "integer",
            "description": "The number of TizenWearable deivces.",
            "format": "int32",
            "readOnly": true,
            "example": 1
          },
          "tizenWearableHasPhoneNumber": {
            "type": "integer",
            "description": "The number of Tizen wearable devices with a mobile number.",
            "format": "int32",
            "readOnly": true,
            "example": 1
          },
          "total": {
            "type": "integer",
            "description": "The number of deivces.",
            "format": "int32",
            "readOnly": true,
            "example": 100
          },
          "unenrolled": {
            "type": "integer",
            "description": "Count of unenrolled status devices.",
            "format": "int32",
            "readOnly": true,
            "example": 5
          },
          "windows": {
            "type": "integer",
            "description": "The number of Windows deivces.",
            "format": "int32",
            "readOnly": true,
            "example": 2
          }
        }
      },
      "DeviceDetail": {
        "type": "object",
        "properties": {
          "agentProfileId": {
            "type": "string"
          },
          "agentProfileName": {
            "type": "string"
          },
          "agentProfileUpdated": {
            "type": "string"
          },
          "appIsRooting": {
            "type": "string",
            "example": "Whether the device contains rooted app // Y, N"
          },
          "assignedLicenseEndDate": {
            "type": "string"
          },
          "assignedLicenseKey": {
            "type": "string"
          },
          "assignedProfileNameList": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "battery": {
            "type": "string"
          },
          "clientProfileId": {
            "type": "string"
          },
          "clientProfileName": {
            "type": "string"
          },
          "clientProfileUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "currentMcc": {
            "type": "string"
          },
          "currentMncName": {
            "type": "string"
          },
          "deviceId": {
            "type": "string",
            "example": "{Device ID}, // the unique key of the device"
          },
          "deviceKind": {
            "type": "string"
          },
          "deviceModel": {
            "type": "string",
            "example": "{Device Model}"
          },
          "deviceModelKind": {
            "type": "string",
            "example": "{Device Model Name and Model Code} // Display Model Name (Model Code) (ex. Galaxy S7 Edge (SM-G935S))"
          },
          "deviceStatus": {
            "type": "string",
            "example": "{Device Status} // I : Deactivated, P : Provisioned, A : Activated, B : Blocked, BS : Blocked(System), BA : Blocked(Admin), BL : License Expired"
          },
          "deviceVersionName": {
            "type": "string",
            "example": "{Device Version Name}"
          },
          "enrolledType": {
            "type": "string",
            "example": "{Enrolled Type} // DEP, KME, ZT : Zero Touch"
          },
          "groupIdList": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "groupList": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "iccid": {
            "type": "string"
          },
          "imei": {
            "type": "string",
            "example": "{IMEI}"
          },
          "isContainMalware": {
            "type": "string",
            "example": "Whether the device contains malware // Y, N"
          },
          "isDeviceLock": {
            "type": "string",
            "example": "Y|N"
          },
          "isRoaming": {
            "type": "string"
          },
          "isRooting": {
            "type": "string",
            "example": "Y|N"
          },
          "knoxId": {
            "type": "string",
            "example": "{Knox Container ID} // If [managementType] is 'LEGACY' and there is [knoxId], it is 'Legacy with Knox Workspace'"
          },
          "lastConnectionDate": {
            "type": "string",
            "format": "date-time"
          },
          "macAddress": {
            "type": "string",
            "example": "{MAC Address}"
          },
          "managementType": {
            "type": "string",
            "example": "{Android Enterprise Type} // DO : Fully Managed, PO : Work Profile, RPO : Work Profile Not Installed, LEGACY : Legacy (If there is [knoxId], it is 'Legacy with Knox Workspace') "
          },
          "mobileId": {
            "type": "string",
            "example": "{Device Name} // the value that can distinguish the device entered when registering the device (changed from Mobile ID)"
          },
          "mobileReceivedData": {
            "type": "string"
          },
          "mobileSentData": {
            "type": "string"
          },
          "orgCode": {
            "type": "string",
            "example": "{Organization Code}"
          },
          "orgName": {
            "type": "string",
            "example": "{Organization Name}"
          },
          "ownerShip": {
            "type": "string",
            "example": "{ownerShip} // E : BYOD, EC : COPE"
          },
          "phone": {
            "type": "string",
            "example": "{Mobile Number}"
          },
          "platform": {
            "type": "string",
            "example": "{Platform}, // A : Android, I : iOS, W : Windows"
          },
          "serialNumber": {
            "type": "string",
            "example": "{Serial Number}"
          },
          "simStatus": {
            "type": "string"
          },
          "subscriberMcc": {
            "type": "string"
          },
          "subscriberMncName": {
            "type": "string"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "string",
            "example": "{User ID}"
          },
          "wifiReceivedData": {
            "type": "string"
          },
          "wifiSentData": {
            "type": "string"
          }
        },
        "description": "If the result is error, this value is empty. If there is no result, this value is empty."
      },
      "DeviceIdParamSchema": {
        "required": [
          "deviceId"
        ],
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string",
            "description": "Device ID.",
            "example": "dc95bc9e4dee47a4a8efd5b6064c9071"
          }
        }
      },
      "DeviceIdsSchema": {
        "required": [
          "deviceIds"
        ],
        "type": "object",
        "properties": {
          "deviceIds": {
            "type": "array",
            "description": "Device ID Array.",
            "items": {
              "type": "string",
              "description": "Device ID Array."
            }
          }
        }
      },
      "DeviceListMap": {
        "type": "object",
        "properties": {
          "basicInfoUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "buildNumber": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "depId": {
            "type": "string"
          },
          "deviceId": {
            "type": "string",
            "example": "{Device ID}, // the unique key of the device"
          },
          "deviceKind": {
            "type": "string",
            "example": "{Device Kind} // the value that can be used as 'Device Model' when the iOS platform (ex. iPhone 5.1)"
          },
          "deviceMaker": {
            "type": "string"
          },
          "deviceModel": {
            "type": "string",
            "example": "{Device Model}"
          },
          "deviceModelKind": {
            "type": "string",
            "example": "{Device Model Name and Model Code} // Display Model Name (Model Code) (ex. Galaxy S7 Edge (SM-G935S))"
          },
          "deviceStatus": {
            "type": "string",
            "example": "{Device Status} // I : Deactivated, P : Provisioned, A : Activated, B : Blocked, BS : Blocked(System), BA : Blocked(Admin), BL : License Expired"
          },
          "deviceUsage": {
            "type": "string"
          },
          "deviceVersionName": {
            "type": "string",
            "example": "{Device Version Name}"
          },
          "enrolledType": {
            "type": "string",
            "example": "{Enrolled Type} // DEP, KME, ZT : Zero Touch"
          },
          "googleDeviceId": {
            "type": "string"
          },
          "imei": {
            "type": "string",
            "example": "{IMEI}"
          },
          "isDep": {
            "type": "string",
            "example": "Y|N"
          },
          "isRoaming": {
            "type": "string"
          },
          "kmeId": {
            "type": "string"
          },
          "macAddress": {
            "type": "string",
            "example": "{MAC Address}"
          },
          "managementType": {
            "type": "string",
            "example": "{Android Enterprise Type} // DO : Fully Managed, PO : Work Profile, RPO : Work Profile Not Installed, LEGACY : Legacy (If there is [knoxId], it is 'Legacy with Knox Workspace') "
          },
          "mobileId": {
            "type": "string",
            "example": "{Device Name} // the value that can distinguish the device entered when registering the device (changed from Mobile ID)"
          },
          "ownerShip": {
            "type": "string",
            "example": "{ownerShip} // E : BYOD, EC : COPE"
          },
          "phone": {
            "type": "string",
            "example": "{Mobile Number}"
          },
          "platform": {
            "type": "string",
            "example": "{Platform}, // A : Android, I : iOS, W : Windows"
          },
          "serialNumber": {
            "type": "string",
            "example": "{Serial Number}"
          },
          "sharedDeviceType": {
            "type": "string",
            "example": "Shared Type //M (Shared Persistent), S (Shared Temporary), N ( Secondary ), I (Shared iPAD)"
          },
          "stageDeviceId": {
            "type": "string",
            "example": "If it is a Secondary Device, the Staging Device ID is displayed."
          },
          "tenantId": {
            "type": "string"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "string",
            "example": "{User ID}"
          },
          "userName": {
            "type": "string",
            "example": "{User Name}"
          }
        },
        "description": "List information of searched devices.",
        "readOnly": true
      },
      "DeviceLocHistorySearhParamSchema": {
        "required": [
          "deviceId",
          "mobileId",
          "period"
        ],
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string",
            "description": "Device ID, the unique key of the device.",
            "example": "dc95bc9e4dee47a4a8efd5b6064c9071"
          },
          "mobileId": {
            "type": "string",
            "description": "Device Name.",
            "example": "testdevicename"
          },
          "period": {
            "type": "string",
            "description": "Search Period (Day)",
            "example": "30"
          }
        }
      },
      "DeviceLocHistoryWithTotal": {
        "type": "object",
        "properties": {
          "locationList": {
            "type": "array",
            "description": "Device Location History.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/DeviceLocationInfoSchema"
            }
          },
          "total": {
            "type": "string",
            "description": "Total count for requests.",
            "readOnly": true,
            "example": "1"
          }
        }
      },
      "DeviceLocationInfoSchema": {
        "required": [
          "latitude",
          "locationInfoUpdated",
          "longitude"
        ],
        "type": "object",
        "properties": {
          "altitude": {
            "type": "string",
            "description": "The altitude value of device location",
            "example": "null"
          },
          "latitude": {
            "type": "string",
            "description": "The latitude value of device location",
            "example": "39.990912172420714"
          },
          "locationInfoUpdated": {
            "type": "string",
            "description": "Updated date of GPS Information of the device location",
            "example": "1608197241989"
          },
          "longitude": {
            "type": "string",
            "description": "The longitude value of device location",
            "example": "116.32715863448607"
          }
        },
        "description": "Device Location History.",
        "readOnly": true
      },
      "DeviceLocationReqSchema": {
        "required": [
          "deviceId",
          "mobileId"
        ],
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string",
            "description": "Device ID.",
            "example": "dc95bc9e4dee47a4a8efd5b6064c9071"
          },
          "mobileId": {
            "type": "string",
            "description": "Device Name.",
            "example": "mobileName1"
          }
        }
      },
      "DeviceRespSchemaBase": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * -102 : Parameter - Null or Empty string\n * -103 : Parameter - Null object\n * -109 : Parameter - The string length must be less than %d\n * -200 : The number of licenses has been exceeded.\n * -201 : Duplicate data exists.\n * -202 : There are no results.\n * -205 : Data Not found\n * -206 : Already registered to the selected group. (Add Device to Group API)\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          }
        }
      },
      "DeviceSearhParamSchema": {
        "type": "object",
        "properties": {
          "deviceStatus": {
            "type": "string",
            "description": "Device Status (I : Deactivated, P : Provisioned, A : Activated, B : Blocked, BS : Blocked(System), BA : Blocked(Admin), BL : License Expired). It is case sensitive.",
            "example": "A"
          },
          "limit": {
            "type": "integer",
            "description": "Number of Rows (0 < limit <= 1000)",
            "format": "int32",
            "example": 20,
            "default": 1000
          },
          "start": {
            "type": "integer",
            "description": "Row index begins from 0 (start >= 0)",
            "format": "int32",
            "example": 0,
            "default": 0
          },
          "updatedAfter": {
            "type": "string",
            "description": "Updated date to search ( ISO8601 : YYYY-MM-DDTHH24:MI:SS.sssZ ).  Returns data whose device-status has changed since this time.",
            "example": "2022-04-11T17:30:39.123Z"
          },
          "userId": {
            "maxLength": 50,
            "pattern": "/[^A-Z|a-z|0-9|\\_|\\:|\\.|\\-|\\+]/",
            "type": "string",
            "description": "User ID, unique user ID.",
            "example": "shawn_h.2019"
          }
        }
      },
      "DeviceToGroupReqSchema": {
        "required": [
          "deviceId",
          "groupId"
        ],
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string",
            "description": "Device ID.",
            "example": "dc95bc9e4dee47a4a8efd5b6064c9071"
          },
          "groupId": {
            "maxLength": 50,
            "type": "string",
            "description": "Group ID, unique group ID(UUID).<br/>This field is created automatically when administrator creates a group.",
            "example": "dc95bc9e4dee47a4a8efd5b6064c9071"
          }
        }
      },
      "DeviceToGroupRespSchema": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * -102 : Parameter - Null or Empty string\n * -103 : Parameter - Null object\n * -109 : Parameter - The string length must be less than %d\n * -200 : The number of licenses has been exceeded.\n * -201 : Duplicate data exists.\n * -202 : There are no results.\n * -205 : Data Not found\n * -206 : Already registered to the selected group. (Add Device to Group API)\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          },
          "resultValue": {
            "$ref": "#/components/schemas/State"
          }
        }
      },
      "DevicesWithTotal": {
        "type": "object",
        "properties": {
          "devicelist": {
            "type": "array",
            "description": "Device Information List.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/SimpleDevice"
            }
          },
          "total": {
            "type": "string",
            "description": "Total count for requests.",
            "readOnly": true,
            "example": "1"
          }
        },
        "description": "If the result is error, this value is empty. If there is no result, this value is empty."
      },
      "DevicesWrap": {
        "type": "object",
        "properties": {
          "devices": {
            "type": "array",
            "description": "List information of searched devices.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/DeviceListMap"
            }
          }
        },
        "description": "If the result is error, this value is empty. If there is no result, this value is empty."
      },
      "EmpInfoReqSchema": {
        "required": [
          "empNos",
          "siteCodes"
        ],
        "type": "object",
        "properties": {
          "deviceStatus": {
            "type": "string",
            "description": "Device Status (I : Deactivated, P : Provisioned, A : Activated, B : Blocked, BS : Blocked(System), BA : Blocked(Admin), BL : License Expired). It is case sensitive.",
            "example": "A"
          },
          "empNos": {
            "type": "array",
            "description": "User Employee Number Array.",
            "items": {
              "type": "string",
              "description": "User Employee Number Array."
            }
          },
          "siteCodes": {
            "type": "array",
            "description": "User Site Code Array.",
            "items": {
              "type": "string",
              "description": "User Site Code Array."
            }
          }
        }
      },
      "FailListSchema": {
        "type": "object",
        "properties": {
          "failList": {
            "type": "array",
            "description": "Event though the result code is 0, failList can contain error list.",
            "items": {
              "$ref": "#/components/schemas/AreaResultSchema"
            }
          }
        },
        "description": "If the result is error, this value is empty. If there is no result, this value is empty."
      },
      "FailSchema": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string",
            "description": "Device ID.",
            "example": "dc95bc9e4dee47a4a8efd5b6064c9071"
          },
          "error": {
            "type": "string",
            "description": "Error Code.",
            "example": "1901065"
          }
        },
        "description": "Device ID and Error Code information list for which transmission has failed."
      },
      "FlushQueueRespSchema": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * 1901064 : No Device Information\n * 1901013 : Invalid Request. eg) request to remove KNOX on iOS Device. or request to remove KNOX on a device but No installed KNOX on the device.\n * 1901065 : Not Activated Device \n * 2000001 : Invalid Platform \n * 2000010 : No Push Magic Data for APNS - iOS Only\n * 2001005 : PUSH Server Agent is not Registered\n * 2001006 : PUSH Device Agent is not Registered\n * 0220003 : Container(KNOX) Not exist\n * 3100003 : Not Support Android Enterprise\n * -117 ~ -102 : Invalid Parameter Error, Each error code is related with null value, not-matched format, etc.\n * -208 : Not supported platform Error\n * -501 ~ -502 : Knox related Error\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          },
          "resultValue": {
            "$ref": "#/components/schemas/FailListSchema"
          }
        }
      },
      "GetIOSPayloadUUIDListRespSchema": {
        "required": [
          "resultCode"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * 1901064 : No Device Information\n * 1901013 : Invalid Request. eg) request to remove KNOX on iOS Device. or request to remove KNOX on a device but No installed KNOX on the device.\n * 1901065 : Not Activated Device \n * 2000001 : Invalid Platform \n * 2000010 : No Push Magic Data for APNS - iOS Only\n * 2001005 : PUSH Server Agent is not Registered\n * 2001006 : PUSH Device Agent is not Registered\n * 0220003 : Container(KNOX) Not exist\n * 3100003 : Not Support Android Enterprise\n * -117 ~ -102 : Invalid Parameter Error, Each error code is related with null value, not-matched format, etc.\n * -208 : Not supported platform Error\n * -501 ~ -502 : Knox related Error\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "error message // detailed message or code. if success, this value can be empty",
            "example": "0"
          },
          "resultValue": {
            "$ref": "#/components/schemas/UpdateProfileSchema"
          }
        }
      },
      "GetPhoneListRespSchema": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * -102 : Parameter - Null or Empty string\n * -103 : Parameter - Null object\n * -109 : Parameter - The string length exceeded.\n * -221 : Invalid license\n * -222 : Tenant not found\n * -223 : No userId found from User Info Repository, please check userID \n * -224 : Authentication failed, please check Id or password\n * -301 : License check failed.\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          },
          "resultValue": {
            "$ref": "#/components/schemas/QueuedPhoneInfoList"
          }
        }
      },
      "GetPhoneListSchema": {
        "required": [
          "minutes"
        ],
        "type": "object",
        "properties": {
          "minutes": {
            "type": "string",
            "description": "Minute unit. Devices that have command is accumulated input-value minutes ago. Maximum value is 14400(10 days) and minimum value 0. ",
            "example": "0"
          }
        }
      },
      "GetQueuedCmdCntRespSchema": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * -102 : Parameter - Null or Empty string\n * -103 : Parameter - Null object\n * -109 : Parameter - The string length exceeded.\n * -221 : Invalid license\n * -222 : Tenant not found\n * -223 : No userId found from User Info Repository, please check userID \n * -224 : Authentication failed, please check Id or password\n * -301 : License check failed.\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          },
          "resultValue": {
            "$ref": "#/components/schemas/QueuedCountInfoList"
          }
        }
      },
      "GetQueuedCmdCntSchema": {
        "required": [
          "deviceId",
          "mobileId",
          "platform"
        ],
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string",
            "description": "Device ID.",
            "example": "dc95bc9e4dee47a4a8efd5b6064c9071"
          },
          "mobileId": {
            "type": "string",
            "description": "Device Name.",
            "example": "testdevicename"
          },
          "platform": {
            "type": "string",
            "description": "Device Platform, A : Android, I : iOS, W : Windows",
            "example": "A"
          }
        }
      },
      "GetSMSQueueRespSchema": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * -102 : Parameter - Null or Empty string\n * -103 : Parameter - Null object\n * -109 : Parameter - The string length exceeded.\n * -221 : Invalid license\n * -222 : Tenant not found\n * -223 : No userId found from User Info Repository, please check userID \n * -224 : Authentication failed, please check Id or password\n * -301 : License check failed.\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          },
          "resultValue": {
            "$ref": "#/components/schemas/SMSQueueInfoList"
          }
        }
      },
      "GetSMSQueueSchema": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string",
            "description": "Device ID, the unique key of the device.",
            "example": "dc95bc9e4dee47a4a8efd5b6064c9071"
          },
          "status": {
            "type": "string",
            "description": "SMS Queue Status.",
            "example": "userIds=testUser1;testUser2;testUser3"
          },
          "toPhone": {
            "type": "string",
            "description": "Recipient Phone Number.",
            "example": "userIds=testUser1;testUser2;testUser3"
          }
        }
      },
      "GoogleDeviceIdParamSchema": {
        "required": [
          "googleDeviceId"
        ],
        "type": "object",
        "properties": {
          "googleDeviceId": {
            "type": "string",
            "description": "Google Device ID",
            "example": "3z01tca1583lp112"
          }
        }
      },
      "GroupDeleteResponse": {
        "type": "object",
        "properties": {
          "failCount": {
            "type": "integer",
            "description": "Number of groups that failed to delete.",
            "format": "int32",
            "readOnly": true,
            "example": 1
          },
          "failGroupIds": {
            "type": "array",
            "description": "IDs of groups that failed to delete.",
            "readOnly": true,
            "example": "[{dc95bc9e4dee47a4a8efd5b6064c9071}]",
            "items": {
              "type": "string",
              "description": "IDs of groups that failed to delete.",
              "readOnly": true,
              "example": "[{dc95bc9e4dee47a4a8efd5b6064c9071}]"
            }
          },
          "failMessages": {
            "type": "array",
            "description": "Error message that occurred when deletion failed.<br/>Failed group IDs and indexes are the same.",
            "readOnly": true,
            "example": "[{Exception:can not find group id.}]",
            "items": {
              "type": "string",
              "description": "Error message that occurred when deletion failed.<br/>Failed group IDs and indexes are the same.",
              "readOnly": true,
              "example": "[{Exception:can not find group id.}]"
            }
          },
          "successCount": {
            "type": "integer",
            "description": "Number of groups successfully deleted.",
            "format": "int32",
            "readOnly": true,
            "example": 9
          },
          "total": {
            "type": "integer",
            "description": "Total number of groups to delete.",
            "format": "int32",
            "readOnly": true,
            "example": 10
          }
        },
        "readOnly": true
      },
      "GroupEntityInfo": {
        "type": "object",
        "properties": {
          "appId": {
            "type": "string",
            "description": "If the Application ID is given, the last assigned date information is returned.",
            "readOnly": true,
            "example": "02a95c05eb044bb0926a979fae85735d"
          },
          "applyProfile": {
            "type": "string",
            "description": "Indicates whether the profile is transmitted when group member are modified or deleted. <br/>If the value is '1' after group change, the profile is sent to modified members.",
            "writeOnly": true,
            "example": "1"
          },
          "assignedStatuses": {
            "type": "array",
            "description": "When searching the list of groups it indicates the assigned statuses of group that is the target.",
            "readOnly": true,
            "example": "['0','1']",
            "items": {
              "type": "string",
              "description": "When searching the list of groups it indicates the assigned statuses of group that is the target.",
              "readOnly": true,
              "example": "['0','1']"
            }
          },
          "contentId": {
            "type": "string",
            "description": "If the Content ID is given, the last assigned date information is returned.",
            "readOnly": true,
            "example": "02a95c05eb044bb0926a979fae85735d"
          },
          "deviceId": {
            "type": "string",
            "description": "Used when searching by device id.",
            "readOnly": true,
            "example": "02a95c05eb044bb0926a979fae85735d"
          },
          "dir": {
            "type": "string",
            "description": "Ascending order: 'ASC', descending order: 'DESC'",
            "readOnly": true,
            "example": "ASC"
          },
          "entityIds": {
            "type": "array",
            "description": "Represents the unique ID values of group members. <br/>The following shows the ID value for each type of group. <br/> <br/>1) User: User ID <br/>2) Device: Device ID <br/>3) AD/LDAP: LDAP Distinguished Name (DN) <br/>",
            "writeOnly": true,
            "example": "....",
            "items": {
              "type": "string",
              "description": "Represents the unique ID values of group members. <br/>The following shows the ID value for each type of group. <br/> <br/>1) User: User ID <br/>2) Device: Device ID <br/>3) AD/LDAP: LDAP Distinguished Name (DN) <br/>",
              "writeOnly": true,
              "example": "...."
            }
          },
          "entityType": {
            "maxLength": 1,
            "type": "string",
            "description": "Group member type. <br/>Member types can have only two values:<br/><br/>1) User: '0'<br/>2) Device: '1'<br/>",
            "example": "0"
          },
          "filter": {
            "type": "string",
            "description": "Parameter to provide the ExtJS grid filter function.",
            "readOnly": true,
            "example": "[{'operator':'in','value':['USER', 'DEVICE'],'property':'groupType'}]"
          },
          "groupId": {
            "maxLength": 50,
            "type": "string",
            "description": "Group ID, unique group ID(UUID).<br/>This field is created automatically when you create a group.",
            "example": "dc95bc9e4dee47a4a8efd5b6064c9071"
          },
          "groupType": {
            "maxLength": 10,
            "type": "string",
            "description": "Group type. <br/>Group types can have only three values:<br/><br/>1) User Group: 'USER'<br/>2) Device Group: 'DEVICE'<br/>3) AD/LDAP Group: 'SYNC'<br/><br/>In addition, once determined(saved) group type can not be modified.",
            "example": "USER"
          },
          "groupTypes": {
            "type": "array",
            "description": "When searching the list of groups it indicates the types of group that is the target.",
            "readOnly": true,
            "example": "['USER','SYNC']",
            "items": {
              "type": "string",
              "description": "When searching the list of groups it indicates the types of group that is the target.",
              "readOnly": true,
              "example": "['USER','SYNC']"
            }
          },
          "limit": {
            "type": "integer",
            "description": "The maximum number of items to return for a single request. Optional.",
            "format": "int32",
            "readOnly": true,
            "example": 20
          },
          "profileId": {
            "type": "string",
            "description": "The profile ID to determine whether a group has an assigned profile.",
            "readOnly": true,
            "example": "02a95c05eb044bb0926a979fae85735d"
          },
          "searchDeviceKey": {
            "maxLength": 50,
            "type": "string",
            "description": "Used when searching by name of device.",
            "readOnly": true,
            "example": "testdevice"
          },
          "searchName": {
            "maxLength": 50,
            "type": "string",
            "description": "Used when searching by name.",
            "readOnly": true,
            "example": "testgroup"
          },
          "searchUserKey": {
            "maxLength": 50,
            "type": "string",
            "description": "Used when searching by name of user.",
            "readOnly": true,
            "example": "testuser"
          },
          "sort": {
            "type": "string",
            "description": "The column ID to be sorted.",
            "readOnly": true,
            "example": "groupId"
          },
          "start": {
            "type": "integer",
            "description": "Zero-based starting index in the entire collection to return. Optional. Default 0",
            "format": "int32",
            "readOnly": true,
            "example": 0
          },
          "tenantId": {
            "maxLength": 50,
            "type": "string",
            "description": "Tenant ID.",
            "readOnly": true,
            "example": "yourcompany.com"
          },
          "userIdNameLike": {
            "type": "string",
            "description": "Used when searching by user name or id.",
            "readOnly": true,
            "example": "shawn"
          }
        }
      },
      "GroupInfo": {
        "type": "object",
        "properties": {
          "activatedDeviceCount": {
            "$ref": "#/components/schemas/ActiveDeviceCount"
          },
          "amapiCount": {
            "type": "integer",
            "description": "The number of android management api type",
            "format": "int32",
            "readOnly": true,
            "example": 1
          },
          "androidCount": {
            "type": "integer",
            "description": "The number of android legacy devices.",
            "format": "int32",
            "readOnly": true,
            "example": 10
          },
          "androidEntFullManagedCount": {
            "type": "integer",
            "description": "The number of android enterprise full managed devices.",
            "format": "int32",
            "readOnly": true,
            "example": 100
          },
          "androidEntFullManagedWithWPCount": {
            "type": "integer",
            "description": "The number of android enterprise full managed devices with work profile.",
            "format": "int32",
            "readOnly": true,
            "example": 1
          },
          "androidEntSharedDeviceMulitCount": {
            "type": "integer",
            "description": "The number of android enterprise multiple shared type",
            "format": "int32",
            "readOnly": true,
            "example": 1
          },
          "androidEntSharedDeviceSecondaryCount": {
            "type": "integer",
            "description": "The number of android enterprise secondary(shared device) type",
            "format": "int32",
            "readOnly": true,
            "example": 1
          },
          "androidEntSharedDeviceSingleCount": {
            "type": "integer",
            "description": "The number of android enterprise single shared type",
            "format": "int32",
            "readOnly": true,
            "example": 1
          },
          "androidEntWorkProfileCount": {
            "type": "integer",
            "description": "The number of android enterprise work profile devices.",
            "format": "int32",
            "readOnly": true,
            "example": 5
          },
          "androidEntWorkProfileOnCmpOwnCount": {
            "type": "integer",
            "description": "The number of android enterprise work profile on company owned.",
            "format": "int32",
            "readOnly": true,
            "example": 1
          },
          "androidKnoxWorkspaceCount": {
            "type": "integer",
            "description": "The number of android knox workspace devices.",
            "format": "int32",
            "readOnly": true,
            "example": 20
          },
          "appId": {
            "type": "string",
            "description": "If the Application ID is given, the last assigned date information is returned.",
            "readOnly": true,
            "example": "02a95c05eb044bb0926a979fae85735d"
          },
          "appSettingId": {
            "type": "string",
            "description": "Application setting ID. The application ID must be passed before it can be queried.",
            "readOnly": true,
            "example": "0"
          },
          "appTargetType": {
            "type": "string",
            "description": "Application target type(value is always 'G'). The application ID must be passed before it can be queried.",
            "readOnly": true,
            "example": "G"
          },
          "applyProfile": {
            "type": "string",
            "description": "Indicates whether the profile is transmitted when a group is modified or deleted. <br/>If the value is '1' after group change, the profile is sent to members in the group.",
            "writeOnly": true,
            "example": "1"
          },
          "assignAppCount": {
            "type": "integer",
            "description": "Indicates the number of applications assigned or deployed in the group.",
            "format": "int32",
            "readOnly": true,
            "example": 10
          },
          "assignContentCount": {
            "type": "integer",
            "description": "Indicates the number of content assigned or deployed in the group.",
            "format": "int32",
            "readOnly": true,
            "example": 10
          },
          "assignProfileCount": {
            "type": "integer",
            "description": "Indicates the number of profiles assigned or deployed in the group.",
            "format": "int32",
            "readOnly": true,
            "example": 10
          },
          "assignedProfiles": {
            "type": "array",
            "description": "It is used to search the group to be assigned in the profile screen.",
            "readOnly": true,
            "example": "['aaaaa', 'bbbb', 'cccc']",
            "items": {
              "type": "string",
              "description": "It is used to search the group to be assigned in the profile screen.",
              "readOnly": true,
              "example": "['aaaaa', 'bbbb', 'cccc']"
            }
          },
          "assignedStatuses": {
            "type": "array",
            "description": "When searching the list of groups it indicates the assigned statuses of group that is the target.",
            "readOnly": true,
            "example": "['0','1']",
            "items": {
              "type": "string",
              "description": "When searching the list of groups it indicates the assigned statuses of group that is the target.",
              "readOnly": true,
              "example": "['0','1']"
            }
          },
          "assinedStatus": {
            "type": "string",
            "writeOnly": true
          },
          "autoSendProfileFlags": {
            "maxLength": 1,
            "type": "string",
            "description": "Indicates whether the profile is automatically sent when members of the group are added or deleted.<br/><br/>Use ';' as delimiter.<br/>The first value indicates whether to automatically send the profile when group members are added.<br/>The second value indicates whether to automatically send the profile when the group member is deleted.<br/>The third value indicates whether to automatically send the profile when the group is deleted.<br/><br/>1) '0': Does not transmit profile automatically.<br/>2) '1': Automatically send profile.<br/><br/>ex) '1;0;0'<br/>Only when a group member is added, the profile is automatically transmitted.",
            "writeOnly": true,
            "example": "1;0"
          },
          "contentId": {
            "type": "string",
            "description": "If the Content ID is given, the last assigned date information is returned.",
            "readOnly": true,
            "example": "02a95c05eb044bb0926a979fae85735d"
          },
          "contentTargetType": {
            "type": "string",
            "description": "Content target type(value is always 'G'). The content ID must be passed before it can be queried.",
            "readOnly": true,
            "example": "G"
          },
          "created": {
            "type": "string",
            "description": "The last modification date of the group.",
            "format": "date-time",
            "readOnly": true
          },
          "deviceCount": {
            "type": "integer",
            "description": "The number of group devices.",
            "format": "int32",
            "readOnly": true,
            "example": 56
          },
          "deviceId": {
            "type": "string",
            "description": "Used when searching by device id.",
            "readOnly": true,
            "example": "02a95c05eb044bb0926a979fae85735d"
          },
          "deviceIds": {
            "type": "string",
            "description": "List of device IDs to be included when creating a new device group. Construct a list of device IDs using delimiters (;). <br/><br/>This value is used only for Open API calls.",
            "writeOnly": true,
            "example": "test1;test2;test3"
          },
          "dir": {
            "type": "string",
            "description": "Ascending order: 'ASC', descending order: 'DESC'",
            "readOnly": true,
            "example": "ASC"
          },
          "dn": {
            "maxLength": 512,
            "type": "string",
            "description": "Distinguished name of LDAP. Provided only for AD/LDAP groups.",
            "example": "CN=Administrators,CN=Builtin,DC=sdsdev,DC=com"
          },
          "entityIds": {
            "type": "array",
            "description": "Represents the unique ID values of group members. <br/>The following shows the ID value for each type of group. <br/> <br/>1) User: User ID <br/>2) Device: Device ID <br/>3) AD/LDAP: LDAP Distinguished Name (DN) <br/> <br/>Caution) Used only when creating groups.",
            "writeOnly": true,
            "example": "....",
            "items": {
              "type": "string",
              "description": "Represents the unique ID values of group members. <br/>The following shows the ID value for each type of group. <br/> <br/>1) User: User ID <br/>2) Device: Device ID <br/>3) AD/LDAP: LDAP Distinguished Name (DN) <br/> <br/>Caution) Used only when creating groups.",
              "writeOnly": true,
              "example": "...."
            }
          },
          "filter": {
            "type": "string",
            "description": "Parameter to provide the ExtJS grid filter function.",
            "readOnly": true,
            "example": "[{'operator':'in','value':['USER', 'DEVICE'],'property':'groupType'}]"
          },
          "groupAdminId": {
            "type": "string",
            "description": "Indicates the administrator ID that created the group.",
            "readOnly": true,
            "example": "samsungadmin"
          },
          "groupId": {
            "maxLength": 50,
            "type": "string",
            "description": "Group ID, unique group ID(UUID).<br/>This field is created automatically when you create a group.",
            "readOnly": true,
            "example": "dc95bc9e4dee47a4a8efd5b6064c9071"
          },
          "groupIdString": {
            "type": "string",
            "description": "Indicates the unique ID values of groups to be deleted.",
            "writeOnly": true,
            "example": "testG1;testG2;testG3"
          },
          "groupIds": {
            "type": "array",
            "description": "Indicates the unique ID values of groups to be deleted or searched.",
            "writeOnly": true,
            "example": "....",
            "items": {
              "type": "string",
              "description": "Indicates the unique ID values of groups to be deleted or searched.",
              "writeOnly": true,
              "example": "...."
            }
          },
          "groupName": {
            "maxLength": 50,
            "pattern": "/[^A-Za-z0-9\\s]",
            "type": "string",
            "description": "Group Name, unique group name.",
            "example": "Sales Group"
          },
          "groupType": {
            "maxLength": 10,
            "type": "string",
            "description": "Group type. <br/>Group types can have only three values:<br/><br/>1) User Group: 'USER'<br/>2) Device Group: 'DEVICE'<br/>3) AD/LDAP Group: 'SYNC'<br/><br/>In addition, once determined(saved) group type can not be modified.",
            "example": "USER"
          },
          "groupTypes": {
            "type": "array",
            "description": "When searching the list of groups it indicates the types of group that is the target.",
            "readOnly": true,
            "example": "['USER','SYNC']",
            "items": {
              "type": "string",
              "description": "When searching the list of groups it indicates the types of group that is the target.",
              "readOnly": true,
              "example": "['USER','SYNC']"
            }
          },
          "guid": {
            "maxLength": 50,
            "type": "string",
            "description": "Unique ID of LDAP. Provided only for AD/LDAP groups.",
            "readOnly": true,
            "example": "42e7811c-afd8-47de-8731-6e81ff9aacb9"
          },
          "iosCount": {
            "type": "integer",
            "description": "The number of iOS devices.",
            "format": "int32",
            "readOnly": true,
            "example": 10
          },
          "iosDeviceEnrollCount": {
            "type": "integer",
            "description": "The number of iOS(Device Enrollment) devices.",
            "format": "int32",
            "readOnly": true,
            "example": 10
          },
          "iosSecondaryCount": {
            "type": "integer",
            "description": "The number of Shared iPad Secondary devices.",
            "format": "int32",
            "readOnly": true,
            "example": 10
          },
          "iosStageCount": {
            "type": "integer",
            "description": "The number of Shared iPad Stage devices.",
            "format": "int32",
            "readOnly": true,
            "example": 10
          },
          "lastAssigned": {
            "type": "string",
            "description": "Last time the application/content was assigned to the group. The application ID or content ID must be passed before it can be queried.",
            "format": "date-time",
            "readOnly": true
          },
          "lastSyncTime": {
            "type": "string",
            "description": "The last sync time of the SYNC Group.",
            "format": "date-time",
            "readOnly": true
          },
          "ldapDNs": {
            "type": "array",
            "description": "Represents the LDAP DN values of group members. <br/>Caution) Used only when creating ldap group.",
            "writeOnly": true,
            "example": "....",
            "items": {
              "type": "string",
              "description": "Represents the LDAP DN values of group members. <br/>Caution) Used only when creating ldap group.",
              "writeOnly": true,
              "example": "...."
            }
          },
          "limit": {
            "type": "integer",
            "description": "The maximum number of items to return for a single request. Optional.",
            "format": "int32",
            "readOnly": true,
            "example": 20
          },
          "makeType": {
            "type": "string",
            "description": "Default group criteria. <br/>If the value is '1', this indicates the default group and the group deletion function should be disabled.",
            "readOnly": true,
            "example": "0"
          },
          "memberSelectionFlag": {
            "maxLength": 1,
            "type": "string",
            "description": "This flag indicates how the administrator selected the user in the AD/LDAP group.<br/><br/>1) '0': Select all<br/>2) '1': Direct selection<br/>Provided only for AD/LDAP groups.",
            "example": "0"
          },
          "memberSyncFlag": {
            "maxLength": 1,
            "type": "string",
            "description": "Indicates whether to proceed to synchronize the members of the group during the synchronization process.<br/><br/>1) '0': Do not proceed with group member synchronization<br/>2) '1': Synchronize group members.<br/>Provided only for AD/LDAP groups.",
            "example": "0"
          },
          "noSyncFlag": {
            "maxLength": 1,
            "type": "string",
            "description": "Indicates whether to include the group in the synchronization target or not.<br/><br/>1) '0': Include in synchronization target<br/>2) '1': Exclude from synchronization<br/>Provided only for AD/LDAP groups.",
            "example": "0"
          },
          "profileId": {
            "type": "string",
            "description": "The profile ID to determine whether a group has an assigned profile.",
            "readOnly": true,
            "example": "02a95c05eb044bb0926a979fae85735d"
          },
          "runGroupSyncFlag": {
            "maxLength": 1,
            "type": "integer",
            "description": "Starts synchronization of information in AD/LDAP groups (name change, group deletion, etc.) and members.<br/><br/>1) '0': Do not execute synchronization immediately.<br/>2) '1': Execute synchronization immediately.<br/>Provided only for AD/LDAP groups.",
            "format": "int32",
            "writeOnly": true,
            "example": 1
          },
          "runMemberSyncFlag": {
            "maxLength": 1,
            "type": "integer",
            "description": "Start synchronization on the members of the AD/LDAP group..<br/><br/>1) '0': Do not execute synchronization immediately.<br/>2) '1': Execute synchronization immediately.<br/>Provided only for AD/LDAP groups.",
            "format": "int32",
            "writeOnly": true,
            "example": 1
          },
          "searchDeviceKey": {
            "maxLength": 50,
            "type": "string",
            "description": "Used when searching by name of device.",
            "readOnly": true,
            "example": "testdevice"
          },
          "searchName": {
            "maxLength": 50,
            "type": "string",
            "description": "Used when searching by name.",
            "readOnly": true,
            "example": "testgroup"
          },
          "searchUserKey": {
            "maxLength": 50,
            "type": "string",
            "description": "Used when searching by name of user.",
            "readOnly": true,
            "example": "testuser"
          },
          "sort": {
            "type": "string",
            "description": "The column ID to be sorted.",
            "readOnly": true,
            "example": "groupId"
          },
          "start": {
            "type": "integer",
            "description": "Zero-based starting index in the entire collection to return. Optional. Default 0",
            "format": "int32",
            "readOnly": true,
            "example": 0
          },
          "syncId": {
            "maxLength": 50,
            "type": "string",
            "description": "Sync service ID used to create AD/LDAP group. Provided only for AD/LDAP groups.",
            "example": "MS-AD-SYNCSERVICE"
          },
          "targetType": {
            "maxLength": 10,
            "type": "string",
            "description": "Group member type. <br/>Member types can have only two values:<br/><br/>1) User: '0'<br/>2) Device: '1'<br/>",
            "readOnly": true,
            "example": "0"
          },
          "tenantId": {
            "maxLength": 50,
            "type": "string",
            "description": "Tenant ID.",
            "readOnly": true,
            "example": "yourcompany.com"
          },
          "tizenCount": {
            "type": "integer",
            "description": "The number of Tizen devices.",
            "format": "int32",
            "readOnly": true,
            "example": 10
          },
          "userCount": {
            "type": "integer",
            "description": "The number of group users.",
            "format": "int32",
            "readOnly": true,
            "example": 20
          },
          "userIdNameLike": {
            "type": "string",
            "description": "Used when searching by user name or id.",
            "readOnly": true,
            "example": "shawn"
          },
          "userIds": {
            "type": "string",
            "description": "List of user IDs to be included when creating a new user group. Construct a list of user IDs using delimiters (;). <br/><br/>This value is used only for Open API calls.",
            "writeOnly": true,
            "example": "test1;test2;test3"
          },
          "wearosCount": {
            "type": "integer",
            "description": "The number of Wear OS devices.",
            "format": "int32",
            "readOnly": true,
            "example": 10
          },
          "windowsCount": {
            "type": "integer",
            "description": "The number of windows devices.",
            "format": "int32",
            "readOnly": true,
            "example": 10
          }
        },
        "xml": {
          "name": "GroupInfo"
        }
      },
      "GroupInfoWithTotal": {
        "type": "object",
        "properties": {
          "groups": {
            "type": "array",
            "description": "List information of searched groups.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/GroupInfo"
            }
          },
          "total": {
            "type": "string",
            "description": "Total count for requests.",
            "readOnly": true,
            "example": "1"
          }
        },
        "description": "If the result is error, this value is empty. If there is no result, this value is empty."
      },
      "GroupRespSchemaBase": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * -102 : Parameter - Null or Empty string\n * -103 : Parameter - Null object\n * -109 : Parameter - The string length must be less than %d\n * -200 : The number of licenses has been exceeded.\n * -201 : Duplicate data exists.\n * -202 : There are no results.\n * -203 : Invalid Group type\n * -204 : Activated device exists.\n * -205 : Data Not found\n * -206 : Invalid Group ID\n * -207 : There are no members.\n * -208 : Invalid group member type.\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          }
        }
      },
      "GroupUserUnitWithTotal": {
        "type": "object",
        "properties": {
          "total": {
            "type": "string",
            "description": "Total count for requests.",
            "readOnly": true,
            "example": "1"
          },
          "type": {
            "type": "string",
            "description": "0 is User unit type, 1 is Device unit type.",
            "readOnly": true,
            "example": "0"
          },
          "units": {
            "type": "array",
            "description": "List information of units. If the Unit Type is 0 (User), the user list is returned, and if the Unit Type is 1 (Device), the device list is returned.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/UserEmm"
            }
          }
        },
        "description": "If the result is error, this value is empty. If there is no result, this value is empty."
      },
      "GroupUsersWithTotal": {
        "type": "object",
        "properties": {
          "total": {
            "type": "string",
            "description": "Total count for requests.",
            "readOnly": true,
            "example": "1"
          },
          "userlist": {
            "type": "array",
            "description": "List information of user. ",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/UserEmm"
            }
          }
        },
        "description": "If the result is error, this value is empty. If there is no result, this value is empty."
      },
      "ImeiParamSchema": {
        "required": [
          "imei"
        ],
        "type": "object",
        "properties": {
          "imei": {
            "type": "string",
            "description": "IMEI",
            "example": "testdeviceimei"
          }
        }
      },
      "InsertGroupRespSchema": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * -102 : Parameter - Null or Empty string\n * -103 : Parameter - Null object\n * -109 : Parameter - The string length must be less than %d\n * -200 : The number of licenses has been exceeded.\n * -201 : Duplicate data exists.\n * -202 : There are no results.\n * -203 : Invalid Group type\n * -204 : Activated device exists.\n * -205 : Data Not found\n * -206 : Invalid Group ID\n * -207 : There are no members.\n * -208 : Invalid group member type.\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          },
          "resultValue": {
            "$ref": "#/components/schemas/NewGroupInfoKey"
          }
        }
      },
      "InsertGroupSchema": {
        "required": [
          "groupName",
          "groupType"
        ],
        "type": "object",
        "properties": {
          "deviceIds": {
            "type": "string",
            "description": "List of device IDs to be included when creating a new device group. Construct a list of device IDs using delimiters (;). Refer only to creating a device group. <br/> ex) deviceIds=test1;test2;test3",
            "example": "deviceIds=test1;test2;test3"
          },
          "groupName": {
            "maxLength": 50,
            "type": "string",
            "description": "Group Name, unique group name.",
            "example": "Sales Group"
          },
          "groupType": {
            "maxLength": 10,
            "type": "string",
            "description": "Group type. <br/>Group types can have only two values:<br/><br/>1) User Group: 'USER'<br/>2) Device Group: 'DEVICE'<br/><br/>In addition, once determined(saved) group type can not be modified. <br/> AD/LDAP Group creation through Open API is not supported.",
            "example": "USER"
          },
          "userIds": {
            "type": "string",
            "description": "List of user IDs to be included when creating a new user group. Construct a list of user IDs using delimiters (;). Refer only to creating a user group. <br/> ex) userIds=testUser1;testUser2;testUser3",
            "example": "userIds=testUser1;testUser2;testUser3"
          }
        }
      },
      "InsertMalwareReqScheme": {
        "required": [
          "packageName"
        ],
        "type": "object",
        "properties": {
          "appName": {
            "type": "string",
            "description": "Application Name of Malware Application",
            "example": "SampleApp"
          },
          "appVersionName": {
            "type": "string",
            "description": "Application Version Name of Malware Application",
            "example": "10"
          },
          "deviceId": {
            "type": "string",
            "description": "Device ID.<br/>To identify the device, one of deviceId, serialNumber, imei must be input",
            "example": "dc95bc9e4dee47a4a8efd5b6064c9071"
          },
          "imei": {
            "type": "string",
            "description": "IMEI of the Device.<br/>To identify the device, one of deviceId, serialNumber, imei must be input",
            "example": "994859132051193"
          },
          "packageName": {
            "type": "string",
            "description": "Package Name of Malware Application",
            "example": "com.example.app"
          },
          "serialNumber": {
            "type": "string",
            "description": "Serial Number of the Device.<br/>To identify the device, one of deviceId, serialNumber, imei must be input",
            "example": "K3C27N78QBT"
          }
        }
      },
      "InstallAppSchema": {
        "required": [
          "action",
          "appPackage",
          "autoRun",
          "component",
          "componentClass",
          "deviceId",
          "url"
        ],
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "Implicit Intent Name. Parameters for install app by url.",
            "example": "com.test.intent.samsung.app"
          },
          "appPackage": {
            "type": "string",
            "description": "Application package name.",
            "example": "test.samsung.appx"
          },
          "autoRun": {
            "type": "string",
            "description": "Auto run app After installing. Automatic or Manual. Parameters for install app by url.",
            "example": "Automatic"
          },
          "component": {
            "type": "string",
            "description": "Explicit Intent Name. Parameters for install app by url.",
            "example": "unknown"
          },
          "componentClass": {
            "type": "string",
            "description": "Select either Activity or Broadcast or Service. Parameters for install app by url.",
            "example": "Activity"
          },
          "deviceId": {
            "type": "string",
            "description": "Device ID.",
            "example": "dc95bc9e4dee47a4a8efd5b6064c9071"
          },
          "knoxId": {
            "type": "string",
            "description": "KNOX ID that EMM Service issued. Null value means default area on an android device.",
            "example": "testknoxid"
          },
          "url": {
            "type": "string",
            "description": "APK's url",
            "example": "https://test.samsung.app"
          }
        }
      },
      "LicenseRespSchema": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * -102 : Parameter - Null or Empty string\n * -103 : Parameter - Null object\n * -109 : Parameter - The string length exceeded.\n * -221 : Invalid license\n * -222 : Tenant not found\n * -223 : No userId found from User Info Repository, please check userID \n * -224 : Authentication failed, please check Id or password\n * -301 : License check failed.\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          },
          "resultValue": {
            "$ref": "#/components/schemas/LicenseValidation"
          }
        }
      },
      "LicenseValidation": {
        "required": [
          "isLicenseValid"
        ],
        "type": "object",
        "properties": {
          "isLicenseValid": {
            "type": "string",
            "description": "Indicates whether it is valid or not. Takes one of the values 'true' or 'false'. ",
            "example": "true"
          }
        },
        "description": "If the result is error, this value is empty. If there is no result, this value is empty."
      },
      "LimitedEnrollmentResp": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "description": "Affected rows count.",
            "format": "int32",
            "readOnly": true,
            "example": 3
          }
        },
        "description": "The number of affected rows is returned."
      },
      "LimitedEnrollmentResults": {
        "type": "object",
        "properties": {
          "restrictRegistration": {
            "type": "array",
            "description": "List information of searched limited enrollment targets.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/RestrictRegistration"
            }
          },
          "total": {
            "type": "integer",
            "description": "Count of searched limited enrollment targets.",
            "format": "int32",
            "readOnly": true
          }
        },
        "description": "If the result is error, this value is empty. If there is no result, this value is empty."
      },
      "LoginHistory": {
        "type": "object",
        "properties": {
          "clientIp": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "idType": {
            "type": "string"
          },
          "mappingId": {
            "type": "string"
          },
          "mobileId": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          }
        }
      },
      "MobileIdParamSchema": {
        "required": [
          "mobileId"
        ],
        "type": "object",
        "properties": {
          "mobileId": {
            "type": "string",
            "description": "Device Name.",
            "example": "testdevicename"
          }
        }
      },
      "MultiUpdateResultListSchema": {
        "type": "object",
        "properties": {
          "areaResult": {
            "type": "array",
            "description": "Shows area information of devices to which Device Command is applied.",
            "items": {
              "$ref": "#/components/schemas/AreaResultSchema"
            }
          },
          "commandIdList": {
            "type": "array",
            "description": "List of Device ID and Command ID information for which transmission was successful.",
            "items": {
              "$ref": "#/components/schemas/CmdIdSchema"
            }
          },
          "failList": {
            "type": "array",
            "description": "Device ID and Error Code information list for which transmission has failed.",
            "items": {
              "$ref": "#/components/schemas/FailSchema"
            }
          }
        },
        "description": "If the result is error, this value is empty. If there is no result, this value is empty."
      },
      "NewGroupInfo": {
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "description": "The last modification date of the group.",
            "format": "date-time",
            "readOnly": true
          },
          "groupAdminId": {
            "type": "string",
            "description": "Indicates the administrator ID that created the group.",
            "readOnly": true,
            "example": "samsungadmin"
          },
          "groupId": {
            "maxLength": 50,
            "type": "string",
            "description": "Group ID, unique group ID(UUID).<br/>This field is created automatically when you create a group.",
            "readOnly": true,
            "example": "dc95bc9e4dee47a4a8efd5b6064c9071"
          },
          "groupName": {
            "maxLength": 50,
            "pattern": "/[^A-Za-z0-9\\s]",
            "type": "string",
            "description": "Group Name, unique group name.",
            "example": "Sales Group"
          },
          "groupType": {
            "maxLength": 10,
            "type": "string",
            "description": "Group type. <br/>Group types can have only three values:<br/><br/>1) User Group: 'USER'<br/>2) Device Group: 'DEVICE'<br/>3) AD/LDAP Group: 'SYNC'<br/><br/>In addition, once determined(saved) group type can not be modified.",
            "example": "USER"
          },
          "makeType": {
            "type": "string",
            "description": "Default group criteria. <br/>If the value is '1', this indicates the default group and the group deletion function should be disabled.",
            "readOnly": true,
            "example": "0"
          },
          "targetType": {
            "maxLength": 10,
            "type": "string",
            "description": "Group member type. <br/>Member types can have only two values:<br/><br/>1) User: '0'<br/>2) Device: '1'<br/>",
            "readOnly": true,
            "example": "0"
          },
          "tenantId": {
            "maxLength": 50,
            "type": "string",
            "description": "Tenant ID.",
            "readOnly": true,
            "example": "yourcompany.com"
          }
        },
        "readOnly": true
      },
      "NewGroupInfoKey": {
        "type": "object",
        "properties": {
          "groupInfo": {
            "$ref": "#/components/schemas/NewGroupInfo"
          }
        },
        "description": "If the result is error, this value is empty. If there is no result, this value is empty."
      },
      "OrgRespSchemaBase": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * -102 : Parameter - Null or Empty string\n * -103 : Parameter - Null object\n * -109 : Parameter - The string length must be less than %d\n * -200 : The number of licenses has been exceeded.\n * -201 : Duplicate data exists.\n * -202 : There are no results.\n * -205 : Data Not found\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          }
        }
      },
      "OrgWrap": {
        "type": "object",
        "properties": {
          "org": {
            "$ref": "#/components/schemas/Organization"
          }
        },
        "description": "If the result is error, this value is empty. If there is no result, this value is empty."
      },
      "Organization": {
        "type": "object",
        "properties": {
          "activatedDeviceCount": {
            "$ref": "#/components/schemas/DeviceCount"
          },
          "activationType": {
            "type": "string",
            "description": "Android Activation Type. <br/>Enter the android activation type.\r\n<br/>The Android Activation configuration of organization.<br/>\r\n<br/> . LEGACY - Android legacy activation type.\r\n<br/> . AE - Android enterprise activation type.\r\n<br/> . AEFW - Fully Managed with Work Profile. Android enterprise subtype.",
            "example": "AE | AEFW | LEGACY"
          },
          "childFlag": {
            "type": "string",
            "description": "Child Node Flag. <br/>Whether sub-organizations exist. 0 : absence, 1 : existence.",
            "readOnly": true,
            "example": "1"
          },
          "created": {
            "type": "string",
            "description": "Last Updated. long type timestamp. To use, you need to convert to a date type.",
            "format": "date-time",
            "readOnly": true
          },
          "depth": {
            "type": "string",
            "description": "Tree depth. <br/>Depth in the organization tree. The depth of root is 0.",
            "readOnly": true,
            "example": "1"
          },
          "deviceCount": {
            "$ref": "#/components/schemas/DeviceCount"
          },
          "deviceId": {
            "type": "string"
          },
          "dir": {
            "type": "string"
          },
          "googleBLDeviceCount": {
            "type": "integer",
            "description": "The value associated with the device's DEVICE ORGANIZATION. Include only BL Status Devices.",
            "format": "int32",
            "example": 1
          },
          "googleDeviceCount": {
            "type": "integer",
            "description": "The value associated with the device's DEVICE ORGANIZATION.",
            "format": "int32",
            "example": 1
          },
          "googleOrgPath": {
            "type": "string",
            "description": "HashCode of Google Organization Path.<br/>Usually used to find the google org path.\r\n",
            "example": "-1670227373"
          },
          "licenseType": {
            "type": "string",
            "description": "License Type.<br/> Enter the license type.\r\n<br/>The license configuration of organization.<br/>\r\n<br/> . KS : Knox Suite.\r\n<br/> . KM : Knox Manage.\r\n<br/> . KMKPE : Knox Manage with Knox Platform for Enterprise license.",
            "example": "KM | KS | KMKPE"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "mobileId": {
            "type": "string"
          },
          "noSyncFlag": {
            "maxLength": 50,
            "type": "string",
            "description": "Enter the value to determine whether to sync with AD/LDAP.\r\n<br/>\t  . 0 - Synchronize with AD/LDAP\r\n<br/>\t  . 1 - Do not Synchronize with AD/LDAP",
            "example": "1"
          },
          "orgCode": {
            "maxLength": 50,
            "pattern": "/[^A-Z|a-z|0-9|\\_|\\:|\\.|\\-|\\+]/",
            "type": "string",
            "description": "The Unique Organization Code.<br/>The field allows only English alphabet, numbers and '_, :, ., -, +'.",
            "example": "org01"
          },
          "orgCodeLike": {
            "type": "string"
          },
          "orgCodes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "orgName": {
            "maxLength": 256,
            "type": "string",
            "description": "Organization Name.",
            "example": "org 01"
          },
          "orgType": {
            "maxLength": 2,
            "type": "string",
            "description": "Registration Type.<br/>0 : KM local org, 1 : DirectoryService(LDAP) synchronized organization.",
            "example": "0"
          },
          "orgTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "orgVirtualCode": {
            "maxLength": 50,
            "type": "string",
            "description": "Internal Organizatoin code. <br/>It is grouped by two letters and expresses a hierarchy.",
            "example": "0101"
          },
          "parentCode": {
            "maxLength": 50,
            "type": "string",
            "description": "Parent Organization Code.",
            "example": "org0"
          },
          "permissionOrgIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sort": {
            "type": "string"
          },
          "start": {
            "type": "integer",
            "format": "int32"
          },
          "tenantId": {
            "maxLength": 50,
            "type": "string",
            "description": "Tenant ID.<br/>ex) yourcompany.com",
            "example": "yourcompany.com"
          },
          "userId": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "validOrg": {
            "type": "string",
            "description": "The Organization is valid.<br/>\t  . 0 - Invalid<br/>\t  . 1 - Valid",
            "readOnly": true,
            "example": "1"
          }
        },
        "description": "Organizations list.",
        "readOnly": true,
        "xml": {
          "name": "organization"
        }
      },
      "OrgsWrap": {
        "type": "object",
        "properties": {
          "orgs": {
            "type": "array",
            "description": "Organizations list.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/Organization"
            }
          }
        },
        "description": "If the result is error, this value is empty. If there is no result, this value is empty."
      },
      "OtcRespSchemaBase": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * 1901064 : No Device Information\n * 1901013 : Invalid Request. eg) request to remove KNOX on iOS Device. or request to remove KNOX on a device but No installed KNOX on the device.\n * 1901065 : Not Activated Device \n * 2000001 : Invalid Platform \n * 2000010 : No Push Magic Data for APNS - iOS Only\n * 2001005 : PUSH Server Agent is not Registered\n * 2001006 : PUSH Device Agent is not Registered\n * 0220003 : Container(KNOX) Not exist\n * 3100003 : Not Support Android Enterprise\n * -117 ~ -102 : Invalid Parameter Error, Each error code is related with null value, not-matched format, etc.\n * -208 : Not supported platform Error\n * -501 ~ -502 : Knox related Error\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          }
        }
      },
      "Page": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "description": "List count per page",
            "format": "int32",
            "writeOnly": true,
            "example": 20
          },
          "start": {
            "type": "integer",
            "description": "Start row",
            "format": "int32",
            "writeOnly": true,
            "example": 0
          }
        }
      },
      "QueuedCountInfoList": {
        "required": [
          "tenantId",
          "totalCnt"
        ],
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "description": "Tenant ID.",
            "readOnly": true,
            "example": "km.com"
          },
          "totalCnt": {
            "type": "string",
            "description": "Total Count.",
            "readOnly": true,
            "example": "10"
          }
        },
        "description": "If the result is error, this value is empty. If there is no result, this value is empty."
      },
      "QueuedPhoneInfo": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string",
            "description": "Device ID, the unique key of the device.",
            "example": "dc95bc9e4dee47a4a8efd5b6064c9071"
          },
          "phone": {
            "type": "string",
            "description": "Phone Number. If the device has no phone number, this value will be null. ",
            "example": "01022221111"
          }
        },
        "description": "List of the Queued Phone Information.",
        "readOnly": true
      },
      "QueuedPhoneInfoList": {
        "required": [
          "tenantId"
        ],
        "type": "object",
        "properties": {
          "phoneList": {
            "type": "array",
            "description": "List of the Queued Phone Information.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/QueuedPhoneInfo"
            }
          },
          "tenantId": {
            "type": "string",
            "description": "Tenant ID.",
            "readOnly": true,
            "example": "km.com"
          }
        },
        "description": "If the result is error, this value is empty. If there is no result, this value is empty."
      },
      "ReadAuditLogRespSchema": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * -102 : Parameter - Null or Empty string\n * -103 : Parameter - Null object\n * -109 : Parameter - The string length exceeded.\n * -221 : Invalid license\n * -222 : Tenant not found\n * -223 : No userId found from User Info Repository, please check userID \n * -224 : Authentication failed, please check Id or password\n * -301 : License check failed.\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          },
          "resultValue": {
            "$ref": "#/components/schemas/AuditLogSchema"
          }
        }
      },
      "ResetPasswordSchema": {
        "required": [
          "deviceId"
        ],
        "type": "object",
        "properties": {
          "containerFlag": {
            "type": "boolean",
            "description": "It indicates that the destination area is general or container. 'null' value means default area on an android device.",
            "example": true
          },
          "deviceId": {
            "type": "string",
            "description": "Device ID.",
            "example": "dc95bc9e4dee47a4a8efd5b6064c9071"
          }
        }
      },
      "ResponseSchema": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * -102 : Parameter - Null or Empty string\n * -103 : Parameter - Null object\n * -109 : Parameter - The string length exceeded.\n * -221 : Invalid license\n * -222 : Tenant not found\n * -223 : No userId found from User Info Repository, please check userID \n * -224 : Authentication failed, please check Id or password\n * -301 : License check failed.\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          },
          "resultValue": {
            "$ref": "#/components/schemas/AuthorizedUserSchema"
          }
        }
      },
      "RestrictRegistration": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string"
          },
          "deviceKind": {
            "type": "string"
          },
          "deviceModel": {
            "type": "string"
          },
          "deviceStatus": {
            "type": "string"
          },
          "enrolledType": {
            "type": "string"
          },
          "googleDeviceId": {
            "type": "string"
          },
          "managementType": {
            "type": "string"
          },
          "mobileId": {
            "type": "string"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          },
          "osName": {
            "type": "string"
          },
          "platform": {
            "type": "string"
          },
          "restrictId": {
            "maxLength": 50,
            "pattern": "/[^A-Z|a-z|0-9|\\_|\\:|\\.|\\-|\\+]/",
            "type": "string",
            "description": "Limited Enrollment target ID. IMEI, SERIAL, OS or MODEL value",
            "example": "device01"
          },
          "restrictType": {
            "maxLength": 50,
            "type": "string",
            "description": "Limited Enrollment Type. IMEI, SERIAL, OS or MODEL",
            "example": "IMIE"
          },
          "tenantId": {
            "maxLength": 50,
            "type": "string",
            "description": "Tenant ID.<br/>ex) yourcompany.com",
            "example": "yourcompany.com"
          },
          "userId": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          }
        },
        "description": "List information of searched limited enrollment targets.",
        "readOnly": true
      },
      "ResultTotal": {
        "type": "object",
        "properties": {
          "total": {
            "type": "string",
            "description": "Total count for requests.",
            "readOnly": true,
            "example": "1"
          }
        },
        "description": "If the result is error, this value is empty. If there is no result, this value is empty."
      },
      "RunAppRespSchema": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * 1901064 : No Device Information\n * 1901013 : Invalid Request. eg) request to remove KNOX on iOS Device. or request to remove KNOX on a device but No installed KNOX on the device.\n * 1901065 : Not Activated Device \n * 2000001 : Invalid Platform \n * 2000010 : No Push Magic Data for APNS - iOS Only\n * 2001005 : PUSH Server Agent is not Registered\n * 2001006 : PUSH Device Agent is not Registered\n * 0220003 : Container(KNOX) Not exist\n * 3100003 : Not Support Android Enterprise\n * -117 ~ -102 : Invalid Parameter Error, Each error code is related with null value, not-matched format, etc.\n * -208 : Not supported platform Error\n * -501 ~ -502 : Knox related Error\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          },
          "resultValue": {
            "$ref": "#/components/schemas/UpdateProfileSchema"
          }
        }
      },
      "RunAppSchema": {
        "required": [
          "appPackage",
          "deviceId"
        ],
        "type": "object",
        "properties": {
          "appPackage": {
            "type": "string",
            "description": "Application package name.",
            "example": "test.samsung.app"
          },
          "containerFlag": {
            "type": "boolean",
            "description": "It indicates that the destination area is general or container. 'null' value means default area on an android device.",
            "example": true
          },
          "deviceId": {
            "type": "string",
            "description": "Device ID.",
            "example": "dc95bc9e4dee47a4a8efd5b6064c9071"
          }
        }
      },
      "SMSQueue": {
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "deviceId": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "fromPhone": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "reserved": {
            "type": "string"
          },
          "smsId": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "toPhone": {
            "type": "string"
          }
        }
      },
      "SMSQueueInfo": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string",
            "description": "Device ID, the unique key of the device.",
            "example": "dc95bc9e4dee47a4a8efd5b6064c9071"
          },
          "formPhone": {
            "type": "string",
            "description": "Sender Phone Number.",
            "example": "01022221111"
          },
          "message": {
            "type": "string",
            "description": "Message to Send.",
            "example": "Test Message"
          },
          "reserved": {
            "type": "string",
            "description": "Reserved Field."
          },
          "smsId": {
            "type": "string",
            "description": "SMS ID, the unique key of the SMS Queue",
            "example": "ab95bc9e4dee47a4a8efd5b6064c9071"
          },
          "status": {
            "type": "string",
            "description": "SMS Queue Status. 'Y' or 'N'",
            "example": "N"
          },
          "toPhone": {
            "type": "string",
            "description": "Recipient Phone Number.",
            "example": "01066665555"
          }
        },
        "description": "List information of searched SMS.",
        "readOnly": true
      },
      "SMSQueueInfoList": {
        "type": "object",
        "properties": {
          "smsList": {
            "type": "array",
            "description": "List information of searched SMS.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/SMSQueueInfo"
            }
          }
        },
        "description": "If the result is error, this value is empty. If there is no result, this value is empty."
      },
      "SelectDeviceInfoRespSchema": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * -102 : Parameter - Null or Empty string\n * -103 : Parameter - Null object\n * -109 : Parameter - The string length must be less than %d\n * -200 : The number of licenses has been exceeded.\n * -201 : Duplicate data exists.\n * -202 : There are no results.\n * -205 : Data Not found\n * -206 : Already registered to the selected group. (Add Device to Group API)\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          },
          "resultValue": {
            "$ref": "#/components/schemas/DeviceDetail"
          }
        }
      },
      "SelectDeviceLocRespSchema": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * -102 : Parameter - Null or Empty string\n * -103 : Parameter - Null object\n * -109 : Parameter - The string length must be less than %d\n * -200 : The number of licenses has been exceeded.\n * -201 : Duplicate data exists.\n * -202 : There are no results.\n * -205 : Data Not found\n * -206 : Already registered to the selected group. (Add Device to Group API)\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          },
          "resultValue": {
            "$ref": "#/components/schemas/DeviceLocationInfoSchema"
          }
        }
      },
      "SelectDeviceRespSchema": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * -102 : Parameter - Null or Empty string\n * -103 : Parameter - Null object\n * -109 : Parameter - The string length must be less than %d\n * -200 : The number of licenses has been exceeded.\n * -201 : Duplicate data exists.\n * -202 : There are no results.\n * -203 : Invalid Group type\n * -204 : Activated device exists.\n * -205 : Data Not found\n * -206 : Invalid Group ID\n * -207 : There are no members.\n * -208 : Invalid group member type.\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          },
          "resultValue": {
            "$ref": "#/components/schemas/DevicesWithTotal"
          }
        }
      },
      "SelectDeviceTagsReqSchema": {
        "required": [
          "deviceID"
        ],
        "type": "object",
        "properties": {
          "deviceID": {
            "type": "string",
            "description": "Device ID",
            "example": "0d67cbc75d93448d9c236c86b4d313bb"
          }
        }
      },
      "SelectDeviceTagsRespSchema": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * -102 : Parameter - Null or Empty string\n * -103 : Parameter - Null object\n * -109 : Parameter - The string length exceeded.\n * -221 : Invalid license\n * -222 : Tenant not found\n * -223 : No userId found from User Info Repository, please check userID \n * -224 : Authentication failed, please check Id or password\n * -301 : License check failed.\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          },
          "resultValue": {
            "$ref": "#/components/schemas/TagMapper"
          }
        }
      },
      "SelectDevicesByUserRespSchema": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * -102 : Parameter - Null or Empty string\n * -103 : Parameter - Null object\n * -109 : Parameter - The string length must be less than %d\n * -200 : The number of licenses has been exceeded.\n * -201 : Duplicate data exists.\n * -202 : There are no results.\n * -205 : Data Not found\n * -206 : Already registered to the selected group. (Add Device to Group API)\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          },
          "resultValue": {
            "$ref": "#/components/schemas/SimpleDevice"
          }
        }
      },
      "SelectGroupDeviceSchema": {
        "type": "object",
        "properties": {
          "dir": {
            "type": "string",
            "description": "Ascending order: 'ASC', descending order: 'DESC'",
            "example": "ASC"
          },
          "groupId": {
            "maxLength": 50,
            "type": "string",
            "description": "Used when searching by Group ID(UUID).<br/>This field is created automatically when create a group.",
            "example": "dc95bc9e4dee47a4a8efd5b6064c9071"
          },
          "limit": {
            "type": "integer",
            "description": "Records per page (0 < pageSize <= 1000)",
            "format": "int32",
            "example": 20,
            "default": 1000
          },
          "searchDeviceKey": {
            "maxLength": 50,
            "type": "string",
            "description": "Used to search by Device Name, IMEI/MEID, Serial Number, or User Name. ",
            "example": "device1"
          },
          "sort": {
            "type": "string",
            "description": "The column ID to be sorted.",
            "example": "groupId"
          },
          "start": {
            "type": "integer",
            "description": "Page indexing begins from 0 (pageNum >= 0)",
            "format": "int32",
            "example": 0,
            "default": 0
          }
        }
      },
      "SelectGroupRespSchema": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * -102 : Parameter - Null or Empty string\n * -103 : Parameter - Null object\n * -109 : Parameter - The string length must be less than %d\n * -200 : The number of licenses has been exceeded.\n * -201 : Duplicate data exists.\n * -202 : There are no results.\n * -203 : Invalid Group type\n * -204 : Activated device exists.\n * -205 : Data Not found\n * -206 : Invalid Group ID\n * -207 : There are no members.\n * -208 : Invalid group member type.\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          },
          "resultValue": {
            "$ref": "#/components/schemas/GroupInfoWithTotal"
          }
        }
      },
      "SelectGroupUnitSchema": {
        "type": "object",
        "properties": {
          "dir": {
            "type": "string",
            "description": "Ascending order: 'ASC', descending order: 'DESC'",
            "example": "ASC"
          },
          "groupId": {
            "maxLength": 50,
            "type": "string",
            "description": "Used when searching by Group ID(UUID).<br/>This field is created automatically when create a group.",
            "example": "dc95bc9e4dee47a4a8efd5b6064c9071"
          },
          "limit": {
            "type": "integer",
            "description": "Records per page (0 < pageSize <= 1000)",
            "format": "int32",
            "example": 20,
            "default": 1000
          },
          "sort": {
            "type": "string",
            "description": "The column ID to be sorted.",
            "example": "groupId"
          },
          "start": {
            "type": "integer",
            "description": "Page indexing begins from 0 (pageNum >= 0)",
            "format": "int32",
            "example": 0,
            "default": 0
          }
        }
      },
      "SelectGroupUserRespSchema": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * -102 : Parameter - Null or Empty string\n * -103 : Parameter - Null object\n * -109 : Parameter - The string length must be less than %d\n * -200 : The number of licenses has been exceeded.\n * -201 : Duplicate data exists.\n * -202 : There are no results.\n * -203 : Invalid Group type\n * -204 : Activated device exists.\n * -205 : Data Not found\n * -206 : Invalid Group ID\n * -207 : There are no members.\n * -208 : Invalid group member type.\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          },
          "resultValue": {
            "$ref": "#/components/schemas/GroupUsersWithTotal"
          }
        }
      },
      "SelectGroupUserSchema": {
        "type": "object",
        "properties": {
          "dir": {
            "type": "string",
            "description": "Ascending order: 'ASC', descending order: 'DESC'",
            "example": "ASC"
          },
          "groupId": {
            "maxLength": 50,
            "type": "string",
            "description": "Used when searching by Group ID(UUID).<br/>This field is created automatically when create a group.",
            "example": "dc95bc9e4dee47a4a8efd5b6064c9071"
          },
          "limit": {
            "type": "integer",
            "description": "Records per page (0 < pageSize <= 1000)",
            "format": "int32",
            "example": 20,
            "default": 1000
          },
          "searchUserKey": {
            "maxLength": 50,
            "type": "string",
            "description": "Used to search by User ID or User Name. ",
            "example": "kmuser"
          },
          "sort": {
            "type": "string",
            "description": "The column ID to be sorted.",
            "example": "groupId"
          },
          "start": {
            "type": "integer",
            "description": "Page indexing begins from 0 (pageNum >= 0)",
            "format": "int32",
            "example": 0,
            "default": 0
          }
        }
      },
      "SelectGroupUserUnitRespSchema": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * -102 : Parameter - Null or Empty string\n * -103 : Parameter - Null object\n * -109 : Parameter - The string length must be less than %d\n * -200 : The number of licenses has been exceeded.\n * -201 : Duplicate data exists.\n * -202 : There are no results.\n * -203 : Invalid Group type\n * -204 : Activated device exists.\n * -205 : Data Not found\n * -206 : Invalid Group ID\n * -207 : There are no members.\n * -208 : Invalid group member type.\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          },
          "resultValue": {
            "$ref": "#/components/schemas/GroupUserUnitWithTotal"
          }
        }
      },
      "SelectLimitedEnrollmentRespSchema": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * -102 : Parameter - Null or Empty string\n * -103 : Parameter - Null object\n * -109 : Parameter - The string length exceeded.\n * -221 : Invalid license\n * -222 : Tenant not found\n * -223 : No userId found from User Info Repository, please check userID \n * -224 : Authentication failed, please check Id or password\n * -301 : License check failed.\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          },
          "resultValue": {
            "$ref": "#/components/schemas/LimitedEnrollmentResults"
          }
        }
      },
      "SelectOrgDevicesRespSchema": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * -102 : Parameter - Null or Empty string\n * -103 : Parameter - Null object\n * -109 : Parameter - The string length must be less than %d\n * -200 : The number of licenses has been exceeded.\n * -201 : Duplicate data exists.\n * -202 : There are no results.\n * -205 : Data Not found\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          },
          "resultValue": {
            "$ref": "#/components/schemas/DevicesWrap"
          }
        }
      },
      "SelectOrgRespSchema": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * -102 : Parameter - Null or Empty string\n * -103 : Parameter - Null object\n * -109 : Parameter - The string length must be less than %d\n * -200 : The number of licenses has been exceeded.\n * -201 : Duplicate data exists.\n * -202 : There are no results.\n * -205 : Data Not found\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          },
          "resultValue": {
            "$ref": "#/components/schemas/OrgWrap"
          }
        }
      },
      "SelectOrgUsersRespSchema": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * -102 : Parameter - Null or Empty string\n * -103 : Parameter - Null object\n * -109 : Parameter - The string length must be less than %d\n * -200 : The number of licenses has been exceeded.\n * -201 : Duplicate data exists.\n * -202 : There are no results.\n * -205 : Data Not found\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          },
          "resultValue": {
            "$ref": "#/components/schemas/UsersWrap"
          }
        }
      },
      "SelectOrgsRespSchema": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * -102 : Parameter - Null or Empty string\n * -103 : Parameter - Null object\n * -109 : Parameter - The string length must be less than %d\n * -200 : The number of licenses has been exceeded.\n * -201 : Duplicate data exists.\n * -202 : There are no results.\n * -205 : Data Not found\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          },
          "resultValue": {
            "$ref": "#/components/schemas/OrgsWrap"
          }
        }
      },
      "SelectUserRespSchema": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * -102 : Parameter - Null or Empty string\n * -103 : Parameter - Null object\n * -109 : Parameter - The string length must be less than %d\n * -200 : The number of licenses has been exceeded.\n * -201 : Duplicate data exists.\n * -202 : There are no results.\n * -204 : Activated device exists.\n * -205 : Data Not found\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          },
          "resultValue": {
            "$ref": "#/components/schemas/UserWrap"
          }
        }
      },
      "SelectUsersRespSchema": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * -102 : Parameter - Null or Empty string\n * -103 : Parameter - Null object\n * -109 : Parameter - The string length must be less than %d\n * -200 : The number of licenses has been exceeded.\n * -201 : Duplicate data exists.\n * -202 : There are no results.\n * -204 : Activated device exists.\n * -205 : Data Not found\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          },
          "resultValue": {
            "$ref": "#/components/schemas/UserResults"
          }
        }
      },
      "SerialNumParamSchema": {
        "required": [
          "serialNumber"
        ],
        "type": "object",
        "properties": {
          "serialNumber": {
            "type": "string",
            "description": "Serial Number",
            "example": "testdeviceserialNumber"
          }
        }
      },
      "SimpleDevice": {
        "type": "object",
        "properties": {
          "buildNumber": {
            "type": "string"
          },
          "depId": {
            "type": "string"
          },
          "deviceId": {
            "type": "string",
            "example": "{Device ID}, // the unique key of the device"
          },
          "deviceKind": {
            "type": "string",
            "example": "{Device Kind} // the value that can be used as 'Device Model' when the iOS platform (ex. iPhone 5.1)"
          },
          "deviceModel": {
            "type": "string",
            "example": "{Device Model}"
          },
          "deviceModelKind": {
            "type": "string",
            "example": "{Device Model Name and Model Code} // Display Model Name (Model Code) (ex. Galaxy S7 Edge (SM-G935S))"
          },
          "deviceStatus": {
            "type": "string",
            "example": "{Device Status} // I : Deactivated, P : Provisioned, A : Activated, B : Blocked, BS : Blocked(System), BA : Blocked(Admin), BL : License Expired"
          },
          "deviceTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagMapper"
            }
          },
          "deviceVersionName": {
            "type": "string",
            "example": "{Device Version Name}"
          },
          "empNo": {
            "type": "string",
            "example": "{Employee Number}"
          },
          "enrolledType": {
            "type": "string",
            "example": "{Enrolled Type} // DEP, KME, ZT : Zero Touch"
          },
          "googleDeviceId": {
            "type": "string"
          },
          "imei": {
            "type": "string",
            "example": "{IMEI}"
          },
          "isRooting": {
            "type": "string",
            "example": "Y|N"
          },
          "knoxId": {
            "type": "string",
            "example": "{Knox Container ID} // If [managementType] is 'LEGACY' and there is [knoxId], it is 'Legacy with Knox Workspace'"
          },
          "macAddress": {
            "type": "string",
            "example": "{MAC Address}"
          },
          "managementType": {
            "type": "string",
            "example": "{Android Enterprise Type} // DO : Fully Managed, PO : Work Profile, RPO : Work Profile Not Installed, LEGACY : Legacy (If there is [knoxId], it is 'Legacy with Knox Workspace') "
          },
          "mobileId": {
            "type": "string",
            "example": "{Device Name} // the value that can distinguish the device entered when registering the device (changed from Mobile ID)"
          },
          "ownerShip": {
            "type": "string",
            "example": "{ownerShip} // E : BYOD, EC : COPE"
          },
          "phone": {
            "type": "string",
            "example": "{Mobile Number}"
          },
          "platform": {
            "type": "string",
            "example": "{Platform}, // A : Android, I : iOS, W : Windows"
          },
          "serialNumber": {
            "type": "string",
            "example": "{Serial Number}"
          },
          "sharedDeviceType": {
            "type": "string",
            "example": "Shared Type //M (Shared Persistent), S (Shared Temporary), N ( Secondary ), I (Shared iPAD)"
          },
          "stageDeviceId": {
            "type": "string",
            "example": "If it is a Secondary Device, the Staging Device ID is displayed."
          },
          "tenantId": {
            "type": "string"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "string",
            "example": "{User ID}"
          },
          "userName": {
            "type": "string",
            "example": "{User Name}"
          }
        },
        "description": "Device Information List.",
        "readOnly": true
      },
      "Sort": {
        "type": "object",
        "properties": {
          "colm": {
            "type": "string"
          },
          "dir": {
            "type": "string"
          }
        }
      },
      "State": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "description": "'SUCCESS' is success.",
            "example": "SUCCESS"
          }
        },
        "description": "If the result is error, this value is empty. If there is no result, this value is empty."
      },
      "StringArrayRespSchema": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * 1901064 : No Device Information\n * 1901013 : Invalid Request. eg) request to remove KNOX on iOS Device. or request to remove KNOX on a device but No installed KNOX on the device.\n * 1901065 : Not Activated Device \n * 2000001 : Invalid Platform \n * 2000010 : No Push Magic Data for APNS - iOS Only\n * 2001005 : PUSH Server Agent is not Registered\n * 2001006 : PUSH Device Agent is not Registered\n * 0220003 : Container(KNOX) Not exist\n * 3100003 : Not Support Android Enterprise\n * -117 ~ -102 : Invalid Parameter Error, Each error code is related with null value, not-matched format, etc.\n * -208 : Not supported platform Error\n * -501 ~ -502 : Knox related Error\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          },
          "resultValue": {
            "type": "array",
            "description": "If the result is error, this value is empty. If there is no result, this value is empty.",
            "items": {
              "type": "string",
              "description": "If the result is error, this value is empty. If there is no result, this value is empty."
            }
          }
        }
      },
      "TagMapper": {
        "type": "object",
        "properties": {
          "domain": {
            "maxLength": 50,
            "type": "string",
            "description": "Domain type of tags.",
            "example": "USER | DEVICE"
          },
          "mappedId": {
            "maxLength": 100,
            "type": "string",
            "description": "userID or DeviceID.",
            "example": "shawn_h.2019"
          },
          "tagValue": {
            "maxLength": 200,
            "type": "string",
            "description": "Tag value",
            "example": "tag example value"
          },
          "tenantId": {
            "type": "string"
          }
        }
      },
      "UnauthorizedSchema": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error value when authentication fails.",
            "example": "invalid_token"
          },
          "error_description": {
            "type": "string",
            "description": "Detailed description of the authentication failure.",
            "example": "Invalid access token: d0ad1c3f-8ab6-4d99-965a-7ab27c702e2b"
          }
        }
      },
      "UninstallAppSchema": {
        "required": [
          "appPackage",
          "deviceId"
        ],
        "type": "object",
        "properties": {
          "appPackage": {
            "type": "string",
            "description": "Application package name.",
            "example": "test.samsung.app"
          },
          "deviceId": {
            "type": "string",
            "description": "Device ID.",
            "example": "dc95bc9e4dee47a4a8efd5b6064c9071"
          },
          "knoxId": {
            "type": "string",
            "description": "KNOX ID that EMM Service issued.",
            "example": "true"
          }
        }
      },
      "UpdateDeviceTagsReqSchema": {
        "required": [
          "deviceID",
          "tags"
        ],
        "type": "object",
        "properties": {
          "deviceID": {
            "type": "string",
            "description": "Device ID",
            "example": "0d67cbc75d93448d9c236c86b4d313bb"
          },
          "tags": {
            "type": "array",
            "description": "Tags",
            "example": "someTags",
            "items": {
              "type": "string",
              "description": "Tags",
              "example": "someTags"
            }
          }
        }
      },
      "UpdateGroupUnitSchema": {
        "required": [
          "deviceIds",
          "groupId",
          "userIds"
        ],
        "type": "object",
        "properties": {
          "applyProfile": {
            "type": "string",
            "description": "Indicates whether the profile is transmitted when a group is modified or deleted. <br/>If the value is '1' after group change, the profile is sent to members in the group.",
            "writeOnly": true,
            "example": "1"
          },
          "deviceIds": {
            "type": "string",
            "description": "List of device IDs to add or delete to the device group. Construct a list of device IDs using delimiters (;). Only used when updating to a device group. <br/> ex) deviceIds=test1;test2;test3 <br/><br/>Caution) We do not check the validity of the received Device IDs. Please be sure to provide valid Device IDs.",
            "example": "deviceIds=test1;test2;test3"
          },
          "groupId": {
            "maxLength": 50,
            "type": "string",
            "description": "Unique ID of the target group.",
            "example": "dc95bc9e4dee47a4a8efd5b6064c9071"
          },
          "userIds": {
            "type": "string",
            "description": "List of user IDs to add or delete to the user group. Construct a list of user IDs using delimiters (;). Only used when updating to a user group. <br/> ex) userIds=testUser1;testUser2;testUser3 <br/><br/>Caution) We do not check the validity of the received User IDs. Please be sure to provide valid User IDs.",
            "example": "userIds=testUser1;testUser2;testUser3"
          }
        }
      },
      "UpdateMultiUserInfoRespSchema": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * 1901064 : No Device Information\n * 1901013 : Invalid Request. eg) request to remove KNOX on iOS Device. or request to remove KNOX on a device but No installed KNOX on the device.\n * 1901065 : Not Activated Device \n * 2000001 : Invalid Platform \n * 2000010 : No Push Magic Data for APNS - iOS Only\n * 2001005 : PUSH Server Agent is not Registered\n * 2001006 : PUSH Device Agent is not Registered\n * 0220003 : Container(KNOX) Not exist\n * 3100003 : Not Support Android Enterprise\n * -117 ~ -102 : Invalid Parameter Error, Each error code is related with null value, not-matched format, etc.\n * -208 : Not supported platform Error\n * -501 ~ -502 : Knox related Error\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          },
          "resultValue": {
            "$ref": "#/components/schemas/MultiUpdateResultListSchema"
          }
        }
      },
      "UpdateOrgReqSchema": {
        "required": [
          "orgCode"
        ],
        "type": "object",
        "properties": {
          "activationType": {
            "type": "string",
            "description": "Android Activation Type. <br/>Enter the android activation type.\r\n<br/>The Android Activation configuration of organization.<br/>\r\n<br/> . LEGACY - Android legacy activation type.\r\n<br/> . AE - Android enterprise activation type.\r\n<br/> . AEFW - Fully Managed with Work Profile. Android enterprise subtype.",
            "example": "AE | AEFW | LEGACY"
          },
          "childFlag": {
            "type": "string",
            "description": "Child Node Flag. <br/>Whether sub-organizations exist. 0 : absence, 1 : existence.",
            "readOnly": true,
            "example": "1"
          },
          "created": {
            "type": "string",
            "description": "Last Updated. long type timestamp. To use, you need to convert to a date type.",
            "format": "date-time",
            "readOnly": true
          },
          "depth": {
            "type": "string",
            "description": "Tree depth. <br/>Depth in the organization tree. The depth of root is 0.",
            "readOnly": true,
            "example": "1"
          },
          "googleBLDeviceCount": {
            "type": "integer",
            "description": "The value associated with the device's DEVICE ORGANIZATION. Include only BL Status Devices.",
            "format": "int32",
            "example": 1
          },
          "googleDeviceCount": {
            "type": "integer",
            "description": "The value associated with the device's DEVICE ORGANIZATION.",
            "format": "int32",
            "example": 1
          },
          "googleOrgPath": {
            "type": "string",
            "description": "HashCode of Google Organization Path.<br/>Usually used to find the google org path.\r\n",
            "example": "-1670227373"
          },
          "licenseType": {
            "type": "string",
            "description": "License Type.<br/> Enter the license type.\r\n<br/>The license configuration of organization.<br/>\r\n<br/> . KS : Knox Suite.\r\n<br/> . KM : Knox Manage.\r\n<br/> . KMKPE : Knox Manage with Knox Platform for Enterprise license.",
            "example": "KM | KS | KMKPE"
          },
          "noSyncFlag": {
            "maxLength": 50,
            "type": "string",
            "description": "Enter the value to determine whether to sync with AD/LDAP.\r\n<br/>\t  . 0 - Synchronize with AD/LDAP\r\n<br/>\t  . 1 - Do not Synchronize with AD/LDAP",
            "example": "1"
          },
          "orgCode": {
            "maxLength": 50,
            "pattern": "/[^A-Z|a-z|0-9|\\_|\\:|\\.|\\-|\\+]/",
            "type": "string",
            "description": "The Unique Organization Code.<br/>The field allows only English alphabet, numbers and '_, :, ., -, +'.",
            "example": "org01"
          },
          "orgName": {
            "maxLength": 256,
            "type": "string",
            "description": "Organization Name.",
            "example": "org 01"
          },
          "orgType": {
            "maxLength": 2,
            "type": "string",
            "description": "Registration Type.<br/>0 : KM local org, 1 : DirectoryService(LDAP) synchronized organization.",
            "example": "0"
          },
          "orgTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "orgVirtualCode": {
            "maxLength": 50,
            "type": "string",
            "description": "Internal Organizatoin code. <br/>It is grouped by two letters and expresses a hierarchy.",
            "example": "0101"
          },
          "parentCode": {
            "maxLength": 50,
            "type": "string",
            "description": "Parent Organization Code.",
            "example": "org0"
          },
          "validOrg": {
            "type": "string",
            "description": "The Organization is valid.<br/>\t  . 0 - Invalid<br/>\t  . 1 - Valid",
            "readOnly": true,
            "example": "1"
          }
        },
        "xml": {
          "name": "organization"
        }
      },
      "UpdatePasswordReqSchema": {
        "required": [
          "userId",
          "userPassword"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "maxLength": 50,
            "type": "string",
            "description": "User ID",
            "example": "user01"
          },
          "userPassword": {
            "maxLength": 50,
            "type": "string",
            "description": "User Password",
            "example": "password2021~"
          }
        }
      },
      "UpdatePayloadUUIDRespSchema": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * 1901064 : No Device Information\n * 1901013 : Invalid Request. eg) request to remove KNOX on iOS Device. or request to remove KNOX on a device but No installed KNOX on the device.\n * 1901065 : Not Activated Device \n * 2000001 : Invalid Platform \n * 2000010 : No Push Magic Data for APNS - iOS Only\n * 2001005 : PUSH Server Agent is not Registered\n * 2001006 : PUSH Device Agent is not Registered\n * 0220003 : Container(KNOX) Not exist\n * 3100003 : Not Support Android Enterprise\n * -117 ~ -102 : Invalid Parameter Error, Each error code is related with null value, not-matched format, etc.\n * -208 : Not supported platform Error\n * -501 ~ -502 : Knox related Error\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          },
          "resultValue": {
            "$ref": "#/components/schemas/AreaResultListSchema"
          }
        }
      },
      "UpdateProfileSchema": {
        "type": "object",
        "properties": {
          "areaResult": {
            "type": "array",
            "description": "Shows area information of devices to which Device Command is applied.",
            "items": {
              "$ref": "#/components/schemas/AreaResultSchema"
            }
          },
          "deviceId": {
            "type": "string",
            "description": "Device ID.",
            "example": "dc95bc9e4dee47a4a8efd5b6064c9071"
          },
          "platform": {
            "type": "string",
            "description": "Device Platform, A : Android, I : iOS, W : Windows",
            "example": "A"
          }
        },
        "description": "if failed, this list can be empty.{\n\n     \"PayloadUUID\" : \"\" \n     \"PayloadDisplayName\" :\"\" \n}"
      },
      "UpdateSMSQueueInfo": {
        "required": [
          "smsId",
          "state"
        ],
        "type": "object",
        "properties": {
          "smsId": {
            "type": "string",
            "description": "SMS ID, the unique key of the SMS Queue",
            "example": "ab95bc9e4dee47a4a8efd5b6064c9071"
          },
          "state": {
            "type": "string",
            "description": "Updated Status. SUCCESS or nothing.",
            "example": "SUCCESS"
          }
        },
        "description": "If the result is error, this value is empty. If there is no result, this value is empty."
      },
      "UpdateSMSQueueRespSchema": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * -102 : Parameter - Null or Empty string\n * -103 : Parameter - Null object\n * -109 : Parameter - The string length exceeded.\n * -221 : Invalid license\n * -222 : Tenant not found\n * -223 : No userId found from User Info Repository, please check userID \n * -224 : Authentication failed, please check Id or password\n * -301 : License check failed.\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          },
          "resultValue": {
            "$ref": "#/components/schemas/UpdateSMSQueueInfo"
          }
        }
      },
      "UpdateSMSQueueSchema": {
        "required": [
          "smsId"
        ],
        "type": "object",
        "properties": {
          "reserved": {
            "type": "string",
            "description": "Reserved Field."
          },
          "smsId": {
            "type": "string",
            "description": "SMS ID, the unique key of SMS Queue.",
            "example": "dc95bc9e4dee47a4a8efd5b6064c9071"
          },
          "status": {
            "type": "string",
            "description": "SMS Queue Status.",
            "example": "N"
          }
        }
      },
      "UpdateUserInfoRespSchema": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * 1901064 : No Device Information\n * 1901013 : Invalid Request. eg) request to remove KNOX on iOS Device. or request to remove KNOX on a device but No installed KNOX on the device.\n * 1901065 : Not Activated Device \n * 2000001 : Invalid Platform \n * 2000010 : No Push Magic Data for APNS - iOS Only\n * 2001005 : PUSH Server Agent is not Registered\n * 2001006 : PUSH Device Agent is not Registered\n * 0220003 : Container(KNOX) Not exist\n * 3100003 : Not Support Android Enterprise\n * -117 ~ -102 : Invalid Parameter Error, Each error code is related with null value, not-matched format, etc.\n * -208 : Not supported platform Error\n * -501 ~ -502 : Knox related Error\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          },
          "resultValue": {
            "$ref": "#/components/schemas/AreaResultListSchema"
          }
        }
      },
      "UpdateUserReqSchema": {
        "required": [
          "userId"
        ],
        "type": "object",
        "properties": {
          "activationIdType": {
            "type": "string",
            "description": "Android Activation And License Configuration Type. <br/>\r\n<br/>ORG or USER value.\r\n<br/>\r\n<br/> . ORG - Follow the configuration of organization.\r\n<br/> . USER - User configuration.\r\n",
            "example": "USER | ORG"
          },
          "activationType": {
            "type": "string",
            "description": "Android Activation Type. <br/>Enter the android activation type.\r\n<br/>The each user configuration has a higher priority than configuration of organization that they belong in. \r\n<br/>\r\n<br/>If null, follow the configuration of organization.\r\n<br/>\r\n<br/> . LEGACY - Android legacy activation type.\r\n<br/> . AE - Android enterprise activation type.\r\n<br/> . AEFW - Fully Managed with Work Profile. Android enterprise subtype.",
            "example": "AE | AEFW | LEGACY"
          },
          "contact": {
            "maxLength": 50,
            "pattern": "/^[0-9 \\+\\#\\*\\-\\(\\)\\/\\,]+$/",
            "type": "string",
            "description": "Contact (phone number)",
            "example": "+82-2-001-0001"
          },
          "countryCode": {
            "maxLength": 2,
            "type": "string",
            "description": "Country code. ISO 3166-1 alpha-2",
            "example": "US"
          },
          "email": {
            "maxLength": 100,
            "pattern": "/^.{8,30}$/, /[0-9]+/, /[a-zA-Z]+/, /[^0-9a-zA-Z]+/",
            "type": "string",
            "description": "Email Address",
            "example": "abc@www.org"
          },
          "empNo": {
            "maxLength": 25,
            "pattern": "/[^A-Za-z0-9\\-\\_\\.]/",
            "type": "string",
            "description": "Employee Number",
            "example": "Abc_123"
          },
          "firstName": {
            "maxLength": 256,
            "type": "string",
            "description": "First Name",
            "example": "Shawn"
          },
          "lastName": {
            "maxLength": 256,
            "type": "string",
            "description": "Last Name",
            "example": "Hwang"
          },
          "licenseType": {
            "type": "string",
            "description": "License Type.<br/> Enter the license type.\r\n<br/>The each user configuration has a higher priority than configuration of organization that they belong in. \r\n<br/>\r\n<br/>If null, follow the configuration of organization.\r\n<br/>\r\n<br/> . KS : Knox Suite.\r\n<br/> . KM : Knox Manage.\r\n<br/> . KMKPE : Knox Manage with Knox Platform for Enterprise license.",
            "example": "KM | KMKPE | KS"
          },
          "loginHistory": {
            "$ref": "#/components/schemas/LoginHistory"
          },
          "managedAppleId": {
            "type": "string"
          },
          "middleName": {
            "maxLength": 256,
            "type": "string",
            "description": "Middle Name",
            "example": "Andreas"
          },
          "mobilePhone": {
            "maxLength": 50,
            "pattern": "/^[0-9 \\+\\#\\*\\-\\(\\)\\/\\,]+$/",
            "type": "string",
            "description": "Mobile Phone number to send SMS for invitation.",
            "example": "+82-10-001-0001"
          },
          "noSyncFlag": {
            "maxLength": 50,
            "type": "string",
            "description": "Enter the value to determine whether to sync with AD/LDAP.\r\n<br/>\t  . 0 - Synchronize with AD/LDAP\r\n<br/>\t  . 1 - Do not Synchronize with AD/LDAP",
            "example": "1"
          },
          "orgCode": {
            "maxLength": 50,
            "type": "string",
            "description": "Organization Code",
            "example": "organizationCode1"
          },
          "orgName": {
            "maxLength": 50,
            "type": "string",
            "description": "Organization Name",
            "readOnly": true,
            "example": "organization1"
          },
          "passwdStatus": {
            "type": "string",
            "description": "Password initialize flag in login process. 1:It doesn't need password initialize., 0:It needs password initialize.",
            "example": "1"
          },
          "positionCode": {
            "maxLength": 50,
            "type": "string",
            "description": "Position Code. <br/>Please refer to (Advanced > Reference Data) Position category.",
            "example": "positionCode1"
          },
          "securityLevelCode": {
            "maxLength": 50,
            "type": "string",
            "description": "Security Level Code. <br/>Please refer to (Advanced > Reference Data) Security Level category.",
            "example": "securityLevelCode1"
          },
          "sharedDeviceType": {
            "type": "string"
          },
          "siteCode": {
            "maxLength": 50,
            "type": "string",
            "description": "Site Code. <br/>Please refer to (Advanced > Reference Data) Site category.",
            "example": "siteCode1"
          },
          "stageUser": {
            "type": "boolean"
          },
          "updatedAfter": {
            "type": "string"
          },
          "userId": {
            "maxLength": 50,
            "pattern": "/[^A-Z|a-z|0-9|\\_|\\:|\\.|\\-|\\+]/",
            "type": "string",
            "description": "User ID, unique user ID.<br/>The field allows only English alphabet, numbers and '_, :, ., -, +'.",
            "example": "shawn_h.2019"
          },
          "userName": {
            "maxLength": 256,
            "type": "string",
            "description": "User Name",
            "example": "Shawn_Andreas_Hwang"
          },
          "userPassword": {
            "maxLength": 50,
            "pattern": "/^.{8,30}$/, /[0-9]+/, /[a-zA-Z]+/, /[^0-9a-zA-Z]+/",
            "type": "string",
            "description": "User Password. Without userPassword, userPassword is same as userId.<br/>Passwords must be between 8 and 30 characters.<br/>Passwords must contain at least one number.<br/>Passwords must contain at least one letter.<br/>Passwords must contain at least one special character.",
            "example": "alpha1!!"
          },
          "userType": {
            "type": "string",
            "description": "User creation type. 1:SYNC., 0:LOCAL.",
            "example": "1"
          },
          "vppClientUserId": {
            "maxLength": 256,
            "type": "string",
            "description": "Knox Manage's unique ID for vpp users.",
            "readOnly": true,
            "example": "userID@tenantID"
          }
        },
        "xml": {
          "name": "UserEmm"
        }
      },
      "UserDefaultResp": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Always true.",
            "readOnly": true,
            "example": true,
            "deprecated": true
          },
          "state": {
            "type": "string",
            "description": "SUCCESS or blank.",
            "readOnly": true,
            "example": "SUCCESS"
          },
          "userId": {
            "type": "string",
            "description": "Registered or Updated user ID",
            "readOnly": true,
            "example": "shawn_h.2019"
          }
        },
        "description": "If the result is error, this value is empty. If there is no result, this value is empty."
      },
      "UserDevices": {
        "required": [
          "mobileId",
          "ownerShip",
          "platform"
        ],
        "type": "object",
        "properties": {
          "mobileId": {
            "maxLength": 50,
            "pattern": "/[^A-Z|a-z|0-9|\\_]/",
            "type": "string",
            "description": "Device Name, The value that can distinguish the device entered when registering the device<br/>ex) user01_Android_1",
            "example": "user01_Android_1"
          },
          "ownerShip": {
            "maxLength": 10,
            "type": "string",
            "description": "E : BYOD, EC : COPE, C : Company",
            "example": "A"
          },
          "platform": {
            "maxLength": 10,
            "type": "string",
            "description": "A : Android, I : iOS",
            "example": "A"
          }
        },
        "xml": {
          "name": "UserDevices"
        }
      },
      "UserEmm": {
        "type": "object",
        "properties": {
          "activatedDeviceCount": {
            "$ref": "#/components/schemas/DeviceCount"
          },
          "activationIdType": {
            "type": "string",
            "description": "Android Activation And License Configuration Type. <br/>\r\n<br/>ORG or USER value.\r\n<br/>\r\n<br/> . ORG - Follow the configuration of organization.\r\n<br/> . USER - User configuration.\r\n",
            "example": "USER | ORG"
          },
          "activationType": {
            "type": "string",
            "description": "Android Activation Type. <br/>Enter the android activation type.\r\n<br/>The each user configuration has a higher priority than configuration of organization that they belong in. \r\n<br/>\r\n<br/>If null, follow the configuration of organization.\r\n<br/>\r\n<br/> . LEGACY - Android legacy activation type.\r\n<br/> . AE - Android enterprise activation type.\r\n<br/> . AEFW - Fully Managed with Work Profile. Android enterprise subtype.",
            "example": "AE | AEFW | LEGACY"
          },
          "assignInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssignInfo"
            }
          },
          "contact": {
            "maxLength": 50,
            "pattern": "/^[0-9 \\+\\#\\*\\-\\(\\)\\/\\,]+$/",
            "type": "string",
            "description": "Contact (phone number)",
            "example": "+82-2-001-0001"
          },
          "countryCode": {
            "maxLength": 2,
            "type": "string",
            "description": "Country code. ISO 3166-1 alpha-2",
            "example": "US"
          },
          "created": {
            "type": "string",
            "description": "Last Updated. long type timestamp. To use, you need to convert to a date type.",
            "format": "date-time",
            "readOnly": true
          },
          "createdDate": {
            "type": "string",
            "description": "First Created. long type timestamp. To use, you need to convert to a date type.",
            "format": "date-time",
            "readOnly": true
          },
          "deviceCount": {
            "$ref": "#/components/schemas/DeviceCount"
          },
          "displayName": {
            "maxLength": 512,
            "type": "string",
            "description": "LDAP Display Name",
            "readOnly": true,
            "example": "LDAPDisplayName"
          },
          "dn": {
            "maxLength": 512,
            "type": "string",
            "description": "Distinguish Name",
            "readOnly": true,
            "example": "CN=userName,OU=yourcompany.com,DC=emm,DC=com"
          },
          "email": {
            "maxLength": 100,
            "pattern": "/^.{8,30}$/, /[0-9]+/, /[a-zA-Z]+/, /[^0-9a-zA-Z]+/",
            "type": "string",
            "description": "Email Address",
            "example": "abc@www.org"
          },
          "emailUserName": {
            "maxLength": 512,
            "type": "string",
            "description": "LDAP Email User Name",
            "readOnly": true,
            "example": "LDAPEmailUserName"
          },
          "empNo": {
            "maxLength": 25,
            "pattern": "/[^A-Za-z0-9\\-\\_\\.]/",
            "type": "string",
            "description": "Employee Number",
            "example": "Abc_123"
          },
          "enabled": {
            "type": "string",
            "description": "User enabled code. 1:enabled, 0:disabled.",
            "readOnly": true,
            "example": "1",
            "deprecated": true
          },
          "extraCondition": {
            "$ref": "#/components/schemas/UserSearchCondition"
          },
          "firstName": {
            "maxLength": 256,
            "type": "string",
            "description": "First Name",
            "example": "Shawn"
          },
          "guid": {
            "maxLength": 50,
            "type": "string",
            "description": "GUID",
            "readOnly": true,
            "example": "878ce8b7-2713-41a9-a765-5e3905ab5ef2"
          },
          "lastName": {
            "maxLength": 256,
            "type": "string",
            "description": "Last Name",
            "example": "Hwang"
          },
          "licenseType": {
            "type": "string",
            "description": "License Type.<br/> Enter the license type.\r\n<br/>The each user configuration has a higher priority than configuration of organization that they belong in. \r\n<br/>\r\n<br/>If null, follow the configuration of organization.\r\n<br/>\r\n<br/> . KS : Knox Suite.\r\n<br/> . KM : Knox Manage.\r\n<br/> . KMKPE : Knox Manage with Knox Platform for Enterprise license.",
            "example": "KM | KMKPE | KS"
          },
          "loginHistory": {
            "$ref": "#/components/schemas/LoginHistory"
          },
          "managedAppleId": {
            "type": "string"
          },
          "managerDn": {
            "maxLength": 512,
            "type": "string",
            "description": "Manager Distinguish Name",
            "readOnly": true,
            "example": "CN=userName,OU=yourcompany.com,DC=emm,DC=com"
          },
          "middleName": {
            "maxLength": 256,
            "type": "string",
            "description": "Middle Name",
            "example": "Andreas"
          },
          "mobilePhone": {
            "maxLength": 50,
            "pattern": "/^[0-9 \\+\\#\\*\\-\\(\\)\\/\\,]+$/",
            "type": "string",
            "description": "Mobile Phone number to send SMS for invitation.",
            "example": "+82-10-001-0001"
          },
          "noSyncFlag": {
            "maxLength": 50,
            "type": "string",
            "description": "Enter the value to determine whether to sync with AD/LDAP.\r\n<br/>\t  . 0 - Synchronize with AD/LDAP\r\n<br/>\t  . 1 - Do not Synchronize with AD/LDAP",
            "example": "1"
          },
          "orgCode": {
            "maxLength": 50,
            "type": "string",
            "description": "Organization Code",
            "example": "organizationCode1"
          },
          "orgName": {
            "maxLength": 50,
            "type": "string",
            "description": "Organization Name",
            "readOnly": true,
            "example": "organization1"
          },
          "passwdStatus": {
            "type": "string",
            "description": "Password initialize flag in login process. 1:It doesn't need password initialize., 0:It needs password initialize.",
            "example": "1"
          },
          "passwordChangeable": {
            "type": "boolean"
          },
          "positionCode": {
            "maxLength": 50,
            "type": "string",
            "description": "Position Code. <br/>Please refer to (Advanced > Reference Data) Position category.",
            "example": "positionCode1"
          },
          "positionName": {
            "maxLength": 50,
            "type": "string",
            "description": "Position Name. <br/>Please refer to (Advanced > Reference Data) Position category.",
            "readOnly": true,
            "example": "position Name"
          },
          "securityLevelCode": {
            "maxLength": 50,
            "type": "string",
            "description": "Security Level Code. <br/>Please refer to (Advanced > Reference Data) Security Level category.",
            "example": "securityLevelCode1"
          },
          "securityLevelName": {
            "maxLength": 50,
            "type": "string",
            "description": "Security Level Name. <br/>Please refer to (Advanced > Reference Data) Security Level category.",
            "readOnly": true,
            "example": "Security Level Name"
          },
          "sharedDeviceType": {
            "type": "string"
          },
          "siteCode": {
            "maxLength": 50,
            "type": "string",
            "description": "Site Code. <br/>Please refer to (Advanced > Reference Data) Site category.",
            "example": "siteCode1"
          },
          "siteName": {
            "maxLength": 50,
            "type": "string",
            "description": "Site Name. <br/>Please refer to (Advanced > Reference Data) Site category.",
            "readOnly": true,
            "example": "Site Name"
          },
          "stageUser": {
            "type": "boolean"
          },
          "tenantId": {
            "maxLength": 50,
            "type": "string",
            "description": "Tenant ID.<br/>ex) yourcompany.com",
            "example": "yourcompany.com"
          },
          "updatedAfter": {
            "type": "string"
          },
          "upn": {
            "maxLength": 200,
            "type": "string",
            "description": "User Principal Name",
            "readOnly": true,
            "example": "userID@mobiledesk.co.kr"
          },
          "userId": {
            "maxLength": 50,
            "pattern": "/[^A-Z|a-z|0-9|\\_|\\:|\\.|\\-|\\+]/",
            "type": "string",
            "description": "User ID, unique user ID.<br/>The field allows only English alphabet, numbers and '_, :, ., -, +'.",
            "example": "shawn_h.2019"
          },
          "userName": {
            "maxLength": 256,
            "type": "string",
            "description": "User Name",
            "example": "Shawn_Andreas_Hwang"
          },
          "userPassword": {
            "maxLength": 50,
            "pattern": "/^.{8,30}$/, /[0-9]+/, /[a-zA-Z]+/, /[^0-9a-zA-Z]+/",
            "type": "string",
            "description": "User Password. Without userPassword, userPassword is same as userId.<br/>Passwords must be between 8 and 30 characters.<br/>Passwords must contain at least one number.<br/>Passwords must contain at least one letter.<br/>Passwords must contain at least one special character.",
            "example": "alpha1!!"
          },
          "userTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagMapper"
            }
          },
          "userType": {
            "type": "string",
            "description": "User creation type. 1:SYNC., 0:LOCAL.",
            "example": "1"
          },
          "vppClientUserId": {
            "maxLength": 256,
            "type": "string",
            "description": "Knox Manage's unique ID for vpp users.",
            "readOnly": true,
            "example": "userID@tenantID"
          },
          "vppStatus": {
            "maxLength": 20,
            "type": "string",
            "description": "VPP Status.",
            "readOnly": true,
            "example": "Invited | Registered | Retired"
          }
        },
        "xml": {
          "name": "UserEmm"
        }
      },
      "UserEmmSchema": {
        "required": [
          "userId",
          "userPassword"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "maxLength": 50,
            "pattern": "/[^A-Z|a-z|0-9|\\_|\\:|\\.|\\-|\\+]/",
            "type": "string",
            "description": "User ID, unique user ID.<br/>The field allows only English alphabet, numbers and '_, :, ., -, +'.",
            "example": "shawn_h.2019"
          },
          "userPassword": {
            "maxLength": 50,
            "pattern": "/^.{8,30}$/, /[0-9]+/, /[a-zA-Z]+/, /[^0-9a-zA-Z]+/",
            "type": "string",
            "description": "User Password.<br/>Passwords must be between 8 and 30 characters.<br/>Passwords must contain at least one number.<br/>Passwords must contain at least one letter.<br/>Passwords must contain at least one special character.",
            "example": "alpha1!!"
          }
        },
        "xml": {
          "name": "UserEmmSchema"
        }
      },
      "UserIdParamSchema": {
        "required": [
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "maxLength": 50,
            "pattern": "/[^A-Z|a-z|0-9|\\_|\\:|\\.|\\-|\\+]/",
            "type": "string",
            "description": "User ID, unique user ID.",
            "example": "shawn_h.2019"
          }
        }
      },
      "UserRespSchemaBase": {
        "required": [
          "resultCode",
          "resultMessage"
        ],
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "0 is success. others are error code.\n\n * -102 : Parameter - Null or Empty string\n * -103 : Parameter - Null object\n * -109 : Parameter - The string length must be less than %d\n * -200 : The number of licenses has been exceeded.\n * -201 : Duplicate data exists.\n * -202 : There are no results.\n * -204 : Activated device exists.\n * -205 : Data Not found\n * -999 : Unknown Error code",
            "example": "0"
          },
          "resultMessage": {
            "type": "string",
            "description": "If the result is success, this value is 'No Error'",
            "example": "No Error"
          }
        }
      },
      "UserResponseSchema": {
        "type": "object",
        "properties": {
          "aeType": {
            "type": "string",
            "description": "Check Android activation type for Profile Provisioning. AE or LEGACY",
            "readOnly": true,
            "example": "AE"
          },
          "enabledMobileMailCount": {
            "type": "integer",
            "description": "Enabled mMail users count.",
            "format": "int32",
            "readOnly": true,
            "example": 7
          },
          "isLocalUserApplyingEMMAuth": {
            "type": "boolean",
            "description": "Is Local User Applying KM DB Authentication? (default : true)",
            "readOnly": true,
            "example": true
          },
          "isSyncUserApplyingEMMAuth": {
            "type": "boolean",
            "description": "Is Sync User Applying KM DB Authentication? (default : false)",
            "readOnly": true,
            "example": false
          },
          "isUserEnabled": {
            "type": "boolean",
            "description": "When you create a user, which is the registration status.",
            "readOnly": true,
            "example": true,
            "deprecated": true
          },
          "securityCameraCount": {
            "type": "integer",
            "description": "Enabled SecuCamera users count.",
            "format": "int32",
            "readOnly": true,
            "example": 5
          },
          "total": {
            "type": "integer",
            "description": "Total user count. 0+",
            "format": "int32",
            "readOnly": true,
            "example": 997
          },
          "user": {
            "type": "array",
            "description": "List information of searched users.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/UserEmm"
            }
          }
        },
        "description": "List information of searched users.",
        "readOnly": true
      },
      "UserResults": {
        "type": "object",
        "properties": {
          "users": {
            "$ref": "#/components/schemas/UserResponseSchema"
          }
        },
        "description": "If the result is error, this value is empty. If there is no result, this value is empty."
      },
      "UserSearchCondition": {
        "type": "object",
        "properties": {
          "addUncategoryFlag": {
            "type": "string"
          },
          "empNoLike": {
            "type": "string"
          },
          "empNos": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "enableds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "excludeDepUsers": {
            "type": "boolean"
          },
          "excludeGoogle": {
            "type": "boolean"
          },
          "forceAddUserIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "forceDelUserIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasEmail": {
            "type": "boolean"
          },
          "includeAssignInfo": {
            "type": "boolean"
          },
          "includeAssignInfoCount": {
            "type": "boolean"
          },
          "includeDetailInfo": {
            "type": "boolean"
          },
          "orgCodes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "orgCodesPermit": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "orgNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          },
          "positionCodes": {
            "maxLength": 50,
            "type": "array",
            "description": "Position Code",
            "writeOnly": true,
            "example": "P0001",
            "items": {
              "maxLength": 50,
              "type": "string",
              "description": "Position Code",
              "writeOnly": true,
              "example": "P0001"
            }
          },
          "securityLevelCodes": {
            "maxLength": 50,
            "type": "array",
            "description": "Security Level Code Code",
            "writeOnly": true,
            "example": "S01",
            "items": {
              "maxLength": 50,
              "type": "string",
              "description": "Security Level Code Code",
              "writeOnly": true,
              "example": "S01"
            }
          },
          "siteCodes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "tagValues": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "templateId": {
            "type": "string"
          },
          "userGroupOrgLike": {
            "maxLength": 50,
            "type": "string",
            "description": "Organization, Group Like search condition. ('OR', 'LIKE' combination Search)",
            "writeOnly": true,
            "example": "sh"
          },
          "userId": {
            "type": "string"
          },
          "userIdLike": {
            "maxLength": 50,
            "type": "string",
            "description": "User ID for like search function",
            "writeOnly": true,
            "example": "sh"
          },
          "userIdNameGroupOrgLike": {
            "maxLength": 50,
            "type": "string",
            "description": "User ID or User Name, Organization, Group Like search condition. ('OR', 'LIKE' combination Search)",
            "writeOnly": true,
            "example": "sh"
          },
          "userIdNameLike": {
            "type": "string"
          },
          "userIdNameOrgEmailEmpnoLike": {
            "maxLength": 50,
            "type": "string",
            "description": "User ID or User Name, Organization, Employee No. Like search condition. ('OR', 'LIKE' combination Search)Email is equal search",
            "writeOnly": true,
            "example": "sh"
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "userTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "userVppStatus": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "userVppType": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Extra Search Condition.",
        "writeOnly": true,
        "xml": {
          "name": "UserSearchCondition"
        }
      },
      "UserWrap": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserEmm"
          }
        },
        "description": "If the result is error, this value is empty. If there is no result, this value is empty."
      },
      "UsersWrap": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "description": "List information of searched users.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/UserEmm"
            }
          }
        },
        "description": "If the result is error, this value is empty. If there is no result, this value is empty."
      }
    },
    "securitySchemes": {
      "Bearer-Authentication": {
        "type": "oauth2",
        "in": "header",
        "scheme": "bearer"
      },
      "OAuth2": {
        "type": "oauth2",
        "description": "OAuth 2.0",
        "name": "Authorization",
        "in": "header",
        "scheme": "oauth2"
      }
    }
  }
}